let settingsModal,loginExpiredModal,myChart,channel,viewCountArray=[],viewCountLabelsArray=[],targetCount=1,chartWidth=20,updateRate=5,updateOnChange=!0,elements={settingsModal:document.getElementById("settingsModal"),loginExpiredModal:document.getElementById("loginExpiredModal"),ctx:document.getElementById("myChart").getContext("2d"),toastContainer:document.getElementById("toastContainer"),overlay:document.getElementById("overlay"),overlayBody:document.getElementById("overlayBody"),targetCount:document.getElementById("targetCount"),chartWidth:document.getElementById("chartWidth"),updateRate:document.getElementById("updateRate"),updateOnChange:document.getElementById("updateOnChange"),recoveryDelay:document.getElementById("recoveryDelay"),showViewcount:document.getElementById("showViewcount"),autoColor:document.getElementById("autoColor"),lineColor:document.getElementById("lineColor"),fillColor:document.getElementById("fillColor"),backgroundColor:document.getElementById("backgroundColor"),transparentBG:document.getElementById("transparentBG"),noFill:document.getElementById("noFill"),serverIP:document.getElementById("serverIP"),serverPort:document.getElementById("serverPort"),serverPassword:document.getElementById("serverPassword"),connectOBS:document.getElementById("connectOBS"),stopDelay:document.getElementById("stopDelay")},USER={channel:"",twitchLogin:!1,access_token:"",userID:""};function load_localStorage(){localStorage.getItem("USER")?USER=JSON.parse(localStorage.getItem("USER")):console.log("localStorage user info not found")}function refreshData(){USER.twitchLogin||console.log("no twitch login")}function saveSettings(){refreshData(),localStorage.setItem("USER",JSON.stringify(USER)),localStorage.setItem("CHATVOTE",JSON.stringify(CHATVOTE))}let oldCount=0;async function getViewCount(){let e={headers:{Authorization:`Bearer ${USER.access_token}`,"Client-Id":CLIENT_ID}};try{let t=await fetch(`https://api.twitch.tv/helix/streams?user_login=${channel}`,e);t.ok||console.log("getViewCount error");let n=await t.json();if(!n.data[0])return void showToast("Channel not live","danger",5e3);if(oldCount!=n.data[0].viewer_count||!updateOnChange){oldCount=n.data[0].viewer_count,viewCountArray.push(n.data[0].viewer_count),elements.overlayBody.innerText=n.data[0].viewer_count.toLocaleString(),n.data[0].viewer_count>targetCount?elements.overlay.classList="display-1 card text-bg-success":(elements.overlay.classList="display-1 card text-bg-danger",elements.overlayBody.innerText=`${n.data[0].viewer_count.toLocaleString()}/${targetCount.toLocaleString()}`);let e=new Date;for(viewCountLabelsArray.push(`${e.getHours()}:${e.getMinutes()}:${e.getSeconds()}`),1==viewCountArray.length&&(viewCountArray.push(n.data[0].viewer_count),viewCountLabelsArray.push(`${e.getHours()}:${e.getMinutes()}:${e.getSeconds()}`)),myChart.update();viewCountArray.length>chartWidth;)viewCountArray.shift(),viewCountLabelsArray.shift()}}catch(e){console.log("getViewCount error",e)}setTimeout((()=>{getViewCount()}),1e3*updateRate)}async function loadAndConnect(){load_localStorage(),refreshData();const e=new Proxy(new URLSearchParams(window.location.search),{get:(e,t)=>e.get(t)});if(channel=e.channel||USER.channel,USER.twitchLogin&&!await checkToken(USER.access_token))return USER.channel="",void loginExpiredModal.show();USER.channel&&getViewCount()}function loadChart(){refreshData(),myChart&&myChart.destroy(),myChart=new Chart(elements.ctx,{type:"line",data:{labels:viewCountLabelsArray,datasets:[{label:"dank",data:viewCountArray,borderColor:"#def33f",backgroundColor:"#000000",borderWidth:2,tension:.1,fill:!0}]},options:{scales:{y:{beginAtZero:!0}}}})}window.onload=function(){settingsModal=new bootstrap.Modal(elements.settingsModal),loginExpiredModal=new bootstrap.Modal(elements.loginExpiredModal),loadAndConnect(),USER.channel||loginExpiredModal.show(),loadChart(),enableTooltips(),enablePopovers(),elements.targetCount.oninput=function(){targetCount=parseInt(this.value,10)},elements.chartWidth.oninput=function(){chartWidth=parseInt(this.value,10)},elements.updateRate.oninput=function(){updateRate=parseInt(this.value,10)},elements.updateOnChange.onchange=function(){updateOnChange=this.checked},elements.lineColor.oninput=function(){myChart.data.datasets[0].borderColor=this.value,myChart.update()},elements.fillColor.oninput=function(){elements.noFill.checked=!1,myChart.data.datasets[0].backgroundColor=this.value,myChart.update()},elements.backgroundColor.oninput=function(){elements.transparentBG.checked=!1,document.body.style.backgroundColor=this.value},elements.transparentBG.onchange=function(){this.checked?document.body.style.backgroundColor="transparent":document.body.style.backgroundColor=elements.backgroundColor.value},elements.noFill.onchange=function(){this.checked?myChart.data.datasets[0].backgroundColor="transparent":myChart.data.datasets[0].backgroundColor=elements.fillColor.value,myChart.update()},elements.autoColor.onchange=function(){console.log("autoColor")},elements.showViewcount.onchange=function(){this.checked?elements.overlay.style.display="block":elements.overlay.style.display="none"},elements.connectOBS.addEventListener("click",(function(){console.log("connectOBS")}))};