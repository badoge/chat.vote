let elements={loginButton:document.getElementById("loginButton"),me:document.getElementById("me"),opponent:document.getElementById("opponent"),topRight:document.getElementById("topRight"),darkTheme:document.getElementById("darkTheme"),loginExpiredModal:document.getElementById("loginExpiredModal"),left_rock:document.getElementById("left_rock"),left_paper:document.getElementById("left_paper"),left_scissors:document.getElementById("left_scissors"),right_rock:document.getElementById("right_rock"),right_paper:document.getElementById("right_paper"),right_scissors:document.getElementById("right_scissors"),info:document.getElementById("info"),game:document.getElementById("game"),rock:document.getElementById("rock"),paper:document.getElementById("paper"),scissors:document.getElementById("scissors"),toastContainer:document.getElementById("toastContainer")};const{animate:animate}=anime;let loginExpiredModal,webSocket,darkTheme=!0,streamer="",USER={channel:"",twitchLogin:!1,access_token:"",userID:"",platform:""};function login(){return elements.topRight.innerHTML='<div class="btn-group" role="group" aria-label="log in button group">\n      <button type="button" class="btn btn-twitch"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></button>\n      <div class="btn-group" role="group">\n          <button id="btnGroupDropLogin" type="button" class="btn btn-twitch dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">\n        </button>\n          <ul class="dropdown-menu dropdown-menu-lg-end" aria-label="Log out">\n              <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n          </ul>\n      </div>\n  </div>',window.open("/prompt.html","loginWindow","toolbar=0,status=0,scrollbars=0,width=500px,height=800px"),!1}function logout(){elements.topRight.innerHTML='<a role="button" id="loginButton" onclick="login()" class="btn btn-twitch" tabindex="0"> <span class="twitch-icon"></span>Sign in with Twitch </a>',resetSettings(!0)}async function loadPFP(){if(!USER.channel)return void(elements.topRight.innerHTML='<a role="button" id="loginButton" onclick="login()" class="btn btn-twitch" tabindex="0"> <span class="twitch-icon"></span>Sign in with Twitch </a>');let e=await get7TVPFP(USER.userID);"/pics/donk.png"==e&&USER.access_token&&(e=await getTwitchPFP(USER.channel,USER.access_token)),elements.topRight.innerHTML=`\n    <div class="btn-group" role="group" aria-label="Button group with nested dropdown">\n    <button type="button" id="btnGroupDrop2" class="btn btn-${darkTheme?"dark":"secondary"}"><img src="${e}" alt="profile pic" style="height:2em;"></button>\n    <div class="btn-group" role="group">\n    <button id="btnGroupDrop1" type="button" class="btn btn-${darkTheme?"dark":"secondary"} dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">\n    ${USER.channel}\n    </button>\n    <ul class="dropdown-menu dropdown-menu-lg-end" aria-labelledby="btnGroupDrop1">\n    <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n    </ul>\n    </div>\n    </div>`,elements.me.innerHTML=`<img src="${e}" alt="profile pic" class="rounded-circle" style="height:2em;"> ${USER.channel}`,elements.opponent.innerHTML='<img src="/pics/donk.png" alt="profile pic" class="rounded-circle" style="height:2em;"> Your opponent'}function resetSettings(e=!1){return e&&localStorage.setItem("USER",JSON.stringify({channel:"",twitchLogin:!1,access_token:"",userID:"",platform:""})),location.reload(),!1}async function refreshData(){darkTheme=elements.darkTheme.checked??!0}function saveSettings(){refreshData(),localStorage.setItem("darkTheme",darkTheme),localStorage.setItem("USER",JSON.stringify(USER))}function switchTheme(e){document.documentElement.setAttribute("data-bs-theme",e?"dark":"light"),document.getElementById("btnGroupDrop1")&&document.getElementById("btnGroupDrop2")&&(document.getElementById("btnGroupDrop1").classList.remove(""+(e?"btn-secondary":"btn-dark")),document.getElementById("btnGroupDrop1").classList.add(""+(e?"btn-dark":"btn-secondary")),document.getElementById("btnGroupDrop2").classList.remove(""+(e?"btn-secondary":"btn-dark")),document.getElementById("btnGroupDrop2").classList.add(""+(e?"btn-dark":"btn-secondary")))}function load_localStorage(){localStorage.getItem("USER")?USER=JSON.parse(localStorage.getItem("USER")):console.log("localStorage user info not found")}function connect(){elements.topRight.innerHTML='\n    <div class="btn-group" role="group" aria-label="log in button group">\n    <button type="button" class="btn btn-twitch"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></button>\n    <div class="btn-group" role="group">\n    <button id="btnGroupDropLogin" type="button" class="btn btn-twitch dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false"></button>\n    <ul class="dropdown-menu dropdown-menu-lg-end" aria-label="Log out">\n    <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n    </ul>\n    </div>\n    </div>',refreshData(),loadBadges(streamer),loadPFP(),elements.game.style.display="",webSocket=new WebSocket("wss://ws.chat.vote"),webSocket.onopen=function(e){console.log(e),webSocket.send(JSON.stringify({command:"join",streamer:streamer,username:USER.channel,userid:USER.userID,access_token:USER.access_token}))},webSocket.onmessage=function(e){let t=JSON.parse(e.data);switch(t.id){case"toast":showToast(t.message,t.type,2e3);break;case"starting":showToast(t.message,t.type,2e3),resetGame();break;case"round":showToast(t.message,t.type,2e3),startRound(t.opponent);break;case"moved":showToast(t.message,t.type,2e3);break;case"won":case"lost":showToast(t.message,t.type,2e3),showReset();break;case"game_ended":showToast(t.message,t.type,2e3),resetGame();break;default:break}console.log(e)},webSocket.onclose=function(e){console.log(e)},webSocket.onerror=function(e){console.log(e)}}function resetGame(){elements.rock.disabled=!0,elements.paper.disabled=!0,elements.scissors.disabled=!0,elements.opponent.innerHTML='<img src="/pics/donk.png" alt="profile pic" class="rounded-circle" style="height:2em;"> Your opponent'}function startRound(e){elements.rock.disabled=!1,elements.paper.disabled=!1,elements.scissors.disabled=!1,elements.opponent.innerHTML=`<img src="/pics/donk.png" alt="profile pic" class="rounded-circle" style="height:2em;"> ${escapeString(e)}`}function sendMove(e){elements.rock.disabled=!0,elements.paper.disabled=!0,elements.scissors.disabled=!0,webSocket.send(JSON.stringify({command:"move",streamer:streamer,userid:USER.userid,move:e}))}function showReset(){elements.rock.disabled=!0,elements.paper.disabled=!0,elements.scissors.disabled=!0}async function loadAndConnect(){load_localStorage(),refreshData();let e=location.hash;if(streamer=e.replace("#","").toLowerCase().replace(/\s/g,""),USER.twitchLogin&&!await checkToken(USER.access_token))return USER.channel="",void loginExpiredModal.show();!1===USER.twitchLogin&&USER.channel?resetSettings(!0):USER.channel?connect():(elements.info.innerHTML='<span class="text-warning">Not signed in.</span> Sign in with the button above.',elements.info.style.display="")}function animateHand(e,t){elements[`${e}_rock`].style.display="",elements[`${e}_paper`].style.display="none",elements[`${e}_scissors`].style.display="none",animate(`#${e}_rock`,{rotate:"left"==e?-30:30,duration:300,alternate:!0,ease:"outElastic(1, .8)",loop:7,onComplete:function(n){elements[`${e}_rock`].style.display="none",elements[`${e}_${t}`].style.display=""}})}window.onload=function(){darkTheme="true"===(localStorage.getItem("darkTheme")||"true"),elements.darkTheme.checked=darkTheme??!0,switchTheme(elements.darkTheme.checked),loginExpiredModal=new bootstrap.Modal(elements.loginExpiredModal),loadAndConnect(),elements.darkTheme.onchange=function(){switchTheme(this.checked),saveSettings()}};