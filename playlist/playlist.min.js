let client,loginButton,settingsOffcanvas,loginExpiredModal,resetSettingsModal,clearPlaylistModal,copyLinkButton,playlistTab,approvalTab,historyTab,togglePlaylistPopover,elements={loginExpiredModal:document.getElementById("loginExpiredModal"),resetSettingsModal:document.getElementById("resetSettingsModal"),clearPlaylistModal:document.getElementById("clearPlaylistModal"),voteSkipDiv:document.getElementById("voteSkipDiv"),voteSkipHint:document.getElementById("voteSkipHint"),voteSkipVotes:document.getElementById("voteSkipVotes"),vtsLink:document.getElementById("vtsLink"),status:document.getElementById("status"),topRight:document.getElementById("topRight"),loginButton:document.getElementById("loginButton"),channelName:document.getElementById("channelName"),darkTheme:document.getElementById("darkTheme"),settingsOffcanvas:document.getElementById("settingsOffcanvas"),allowSpotifySongs:document.getElementById("allowSpotifySongs"),allowStreamable:document.getElementById("allowStreamable"),allowSupaVideo:document.getElementById("allowSupaVideo"),allowSupaAudio:document.getElementById("allowSupaAudio"),allowTwitchClips:document.getElementById("allowTwitchClips"),allowTwitchStreams:document.getElementById("allowTwitchStreams"),allowTwitchVODs:document.getElementById("allowTwitchVODs"),allowYTStreams:document.getElementById("allowYTStreams"),allowYTShorts:document.getElementById("allowYTShorts"),allowYTVideos:document.getElementById("allowYTVideos"),maxDuration:document.getElementById("maxDuration"),maxDurationUnit:document.getElementById("maxDurationUnit"),maxLength:document.getElementById("maxLength"),maxSize:document.getElementById("maxSize"),minViewCount:document.getElementById("minViewCount"),whoCanRequest:document.getElementById("whoCanRequest"),allowPlebs:document.getElementById("allowPlebs"),allowSubs:document.getElementById("allowSubs"),allowMods:document.getElementById("allowMods"),allowVips:document.getElementById("allowVips"),allowFirstTimeChatters:document.getElementById("allowFirstTimeChatters"),plebLimit:document.getElementById("plebLimit"),subLimit:document.getElementById("subLimit"),modLimit:document.getElementById("modLimit"),vipLimit:document.getElementById("vipLimit"),firstTimeChatterLimit:document.getElementById("firstTimeChatterLimit"),selectAll:document.getElementById("selectAll"),unselectAll:document.getElementById("unselectAll"),noCommand:document.getElementById("noCommand"),requestCommand:document.getElementById("requestCommand"),requestCommandAlias:document.getElementById("requestCommandAlias"),allowVoteSkip:document.getElementById("allowVoteSkip"),voteskipCommand:document.getElementById("voteskipCommand"),voteskipCommandAlias:document.getElementById("voteskipCommandAlias"),voteskipCount:document.getElementById("voteskipCount"),enableBot:document.getElementById("enableBot"),botCooldown:document.getElementById("botCooldown"),songCommand:document.getElementById("songCommand"),songCommandAlias:document.getElementById("songCommandAlias"),playlistCommand:document.getElementById("playlistCommand"),playlistCommandAlias:document.getElementById("playlistCommandAlias"),approvalQueue:document.getElementById("approvalQueue"),openCommand:document.getElementById("openCommand"),closeCommand:document.getElementById("closeCommand"),playCommand:document.getElementById("playCommand"),pauseCommand:document.getElementById("pauseCommand"),autoplayCommand:document.getElementById("autoplayCommand"),skipCommand:document.getElementById("skipCommand"),rewindCommand:document.getElementById("rewindCommand"),deleteCommand:document.getElementById("deleteCommand"),modCommands:document.getElementById("modCommands"),toastContainer:document.getElementById("toastContainer"),playersCard:document.getElementById("playersCard"),placeholder:document.getElementById("placeholder"),youtubeEmbedContainer:document.getElementById("youtubeEmbedContainer"),youtubeEmbed:document.getElementById("youtubeEmbed"),spotifyEmbedContainer:document.getElementById("spotifyEmbedContainer"),spotifyEmbed:document.getElementById("spotifyEmbed"),twitchEmbed:document.getElementById("twitchEmbed"),twitchClipsEmbed:document.getElementById("twitchClipsEmbed"),videoEmbed:document.getElementById("videoEmbed"),commandHint:document.getElementById("commandHint"),commandHint2:document.getElementById("commandHint2"),link:document.getElementById("link"),addLink:document.getElementById("addLink"),playlistTab:document.getElementById("playlistTab"),approvalTabButton:document.getElementById("approvalTabButton"),approvalTab:document.getElementById("approvalTab"),mainList:document.getElementById("mainList"),approvalList:document.getElementById("approvalList"),historyTab:document.getElementById("historyTab"),historyList:document.getElementById("historyList"),profileLink:document.getElementById("profileLink"),copyLinkButton:document.getElementById("copyLinkButton"),nowPlaying:document.getElementById("nowPlaying"),nowPlayingRequester:document.getElementById("nowPlayingRequester"),playlistLength:document.getElementById("playlistLength"),togglePlaylist:document.getElementById("togglePlaylist"),autoplay:document.getElementById("autoplay"),volumeSliderIcon:document.getElementById("volumeSliderIcon"),volumeSlider:document.getElementById("volumeSlider"),volumeSliderValue:document.getElementById("volumeSliderValue")},currentTime=0,playlist_open=!1,playlist_playing=!1,total_duration=0,streamerColor="",users=[],requests=new Map,history=[],firstTimeChatters=[],skippers=[],USER={channel:"",twitchLogin:!1,access_token:"",userID:"",platform:""},PLAYLIST={autoplay:!0,allowSpotifySongs:!0,allowStreamable:!0,allowSupaVideo:!0,allowSupaAudio:!0,allowTwitchClips:!0,allowTwitchStreams:!0,allowTwitchVODs:!0,allowYTStreams:!0,allowYTShorts:!0,allowYTVideos:!0,maxDuration:"",maxDurationUnit:"m",maxLength:"",maxSize:"",minViewCount:"",allowPlebs:!0,allowSubs:!0,allowMods:!0,allowVips:!0,allowFirstTimeChatters:!0,plebLimit:"",subLimit:"",modLimit:"",vipLimit:"",firstTimeChatterLimit:"",noCommand:!1,requestCommand:"!request",requestCommandAlias:"!r",allowVoteSkip:!1,voteskipCommand:"!voteskip",voteskipCommandAlias:"!vs",voteskipCount:100,enableBot:!1,botCooldown:1,songCommand:"!song",songCommandAlias:"!video",playlistCommand:"!playlist",playlistCommandAlias:"!pl",approvalQueue:!1,openCommand:"!open",closeCommand:"!close",playCommand:"!play",pauseCommand:"!pause",autoplayCommand:"!autoplay",skipCommand:"!skip",rewindCommand:"!rewind",deleteCommand:"!delete",modCommands:!0};async function refreshData(){darkTheme=elements.darkTheme.checked??!0,USER.twitchLogin||(USER.channel=validator.escape(elements.channelName.value.replace(/\s+/g,"").toLowerCase()),USER.platform="twitch"),!USER.userID&&USER.channel&&(USER.userID=await getUserID(USER.channel)),PLAYLIST.autoplay=elements.autoplay.checked,PLAYLIST.allowSpotifySongs=elements.allowSpotifySongs.checked,PLAYLIST.allowStreamable=elements.allowStreamable.checked,PLAYLIST.allowSupaVideo=elements.allowSupaVideo.checked,PLAYLIST.allowSupaAudio=elements.allowSupaAudio.checked,PLAYLIST.allowTwitchClips=elements.allowTwitchClips.checked,PLAYLIST.allowTwitchStreams=elements.allowTwitchStreams.checked,PLAYLIST.allowTwitchVODs=elements.allowTwitchVODs.checked,PLAYLIST.allowYTStreams=elements.allowYTStreams.checked,PLAYLIST.allowYTShorts=elements.allowYTShorts.checked,PLAYLIST.allowYTVideos=elements.allowYTVideos.checked,PLAYLIST.maxDuration=parseInt(elements.maxDuration.value,10)||"",PLAYLIST.maxDurationUnit=elements.maxDurationUnit.value||"m",PLAYLIST.maxLength=parseInt(elements.maxLength.value,10)||"",PLAYLIST.maxSize=parseInt(elements.maxSize.value,10)||"",PLAYLIST.minViewCount=parseInt(elements.minViewCount.value,10)||"",PLAYLIST.allowPlebs=elements.allowPlebs.checked,PLAYLIST.allowSubs=elements.allowSubs.checked,PLAYLIST.allowMods=elements.allowMods.checked,PLAYLIST.allowVips=elements.allowVips.checked,PLAYLIST.allowFirstTimeChatters=elements.allowFirstTimeChatters.checked,PLAYLIST.plebLimit=parseInt(elements.plebLimit.value,10)||"",PLAYLIST.subLimit=parseInt(elements.subLimit.value,10)||"",PLAYLIST.modLimit=parseInt(elements.modLimit.value,10)||"",PLAYLIST.vipLimit=parseInt(elements.vipLimit.value,10)||"",PLAYLIST.firstTimeChatterLimit=parseInt(elements.firstTimeChatterLimit.value,10)||"",PLAYLIST.noCommand=elements.noCommand.checked,PLAYLIST.requestCommand=elements.requestCommand.value.replace(/\s+/g,"").toLowerCase()||"!request",PLAYLIST.requestCommandAlias=elements.requestCommandAlias.value.replace(/\s+/g,"").toLowerCase()||"!r",PLAYLIST.allowVoteSkip=elements.allowVoteSkip.checked,PLAYLIST.voteskipCommand=elements.voteskipCommand.value.replace(/\s+/g,"").toLowerCase()||"!voteskip",PLAYLIST.voteskipCommandAlias=elements.voteskipCommandAlias.value.replace(/\s+/g,"").toLowerCase()||"!vs",PLAYLIST.voteskipCount=parseInt(elements.voteskipCount.value,10)||100,PLAYLIST.enableBot=elements.enableBot.checked,PLAYLIST.botCooldown=parseInt(elements.botCooldown.value,10)||1,PLAYLIST.songCommand=elements.songCommand.value.replace(/\s+/g,"").toLowerCase()||"!song",PLAYLIST.songCommandAlias=elements.songCommandAlias.value.replace(/\s+/g,"").toLowerCase()||"!video",PLAYLIST.playlistCommand=elements.playlistCommand.value.replace(/\s+/g,"").toLowerCase()||"!playlist",PLAYLIST.playlistCommandAlias=elements.playlistCommandAlias.value.replace(/\s+/g,"").toLowerCase()||"!pl",PLAYLIST.approvalQueue=elements.approvalQueue.checked,PLAYLIST.openCommand=elements.openCommand.value.replace(/\s+/g,"").toLowerCase()||"!open",PLAYLIST.closeCommand=elements.closeCommand.value.replace(/\s+/g,"").toLowerCase()||"!close",PLAYLIST.playCommand=elements.playCommand.value.replace(/\s+/g,"").toLowerCase()||"!play",PLAYLIST.pauseCommand=elements.pauseCommand.value.replace(/\s+/g,"").toLowerCase()||"!pause",PLAYLIST.autoplayCommand=elements.autoplayCommand.value.replace(/\s+/g,"").toLowerCase()||"!autoplay",PLAYLIST.skipCommand=elements.skipCommand.value.replace(/\s+/g,"").toLowerCase()||"!skip",PLAYLIST.rewindCommand=elements.rewindCommand.value.replace(/\s+/g,"").toLowerCase()||"!rewind",PLAYLIST.deleteCommand=elements.deleteCommand.value.replace(/\s+/g,"").toLowerCase()||"!delete",PLAYLIST.modCommands=elements.modCommands.checked,elements.voteskipCommand.disabled=!PLAYLIST.allowVoteSkip,elements.voteskipCommandAlias.disabled=!PLAYLIST.allowVoteSkip,elements.voteskipCount.disabled=!PLAYLIST.allowVoteSkip,elements.botCooldown.disabled=!PLAYLIST.enableBot,elements.songCommand.disabled=!PLAYLIST.enableBot,elements.songCommandAlias.disabled=!PLAYLIST.enableBot,elements.playlistCommand.disabled=!PLAYLIST.enableBot,elements.playlistCommandAlias.disabled=!PLAYLIST.enableBot,elements.approvalTabButton.style.display=PLAYLIST.approvalQueue?"":"none",elements.voteSkipHint.innerHTML=`<strong>${PLAYLIST.voteskipCommand}</strong> or <strong>${PLAYLIST.voteskipCommandAlias}</strong>`,PLAYLIST.noCommand?(elements.commandHint.innerHTML="Add songs or videos to the playlist by posting a link in chat",elements.commandHint2.innerHTML="Request something by posting a link in chat"):(elements.commandHint.innerHTML=`Add songs or videos to the playlist using \n    <kbd class="notranslate text-success cursor-pointer" onclick="editRequestCommand()">${PLAYLIST.requestCommand} [link]</kbd> or \n    <kbd class="notranslate text-success cursor-pointer" onclick="editRequestCommand(true)">${PLAYLIST.requestCommandAlias} [link]</kbd>`,elements.commandHint2.innerHTML=`Request something using<br />\n    <kbd class="notranslate text-success cursor-pointer" onclick="editRequestCommand()">${PLAYLIST.requestCommand} [link]</kbd> or \n    <kbd class="notranslate text-success cursor-pointer" onclick="editRequestCommand(true)">${PLAYLIST.requestCommandAlias} [link]</kbd>`),updateWhoCanRequest(),checkCommands()}function saveSettings(){refreshData(),localStorage.setItem("USER",JSON.stringify(USER)),localStorage.setItem("PLAYLIST",JSON.stringify(PLAYLIST)),localStorage.setItem("PLAYLIST_REQUESTS",JSON.stringify(requests,replacer)),localStorage.setItem("PLAYLIST_HISTORY",JSON.stringify(history)),localStorage.setItem("darkTheme",darkTheme),updateSite()}function load_localStorage(){if(localStorage.getItem("USER")?(USER=JSON.parse(localStorage.getItem("USER")),elements.channelName.value=USER.channel):console.log("localStorage user info not found"),localStorage.getItem("PLAYLIST")?(PLAYLIST=JSON.parse(localStorage.getItem("PLAYLIST")),elements.autoplay.checked=PLAYLIST.autoplay??!0,elements.allowSpotifySongs.checked=PLAYLIST.allowSpotifySongs??!0,elements.allowStreamable.checked=PLAYLIST.allowStreamable??!0,elements.allowSupaVideo.checked=PLAYLIST.allowSupaVideo??!0,elements.allowSupaAudio.checked=PLAYLIST.allowSupaAudio??!0,elements.allowTwitchClips.checked=PLAYLIST.allowTwitchClips??!0,elements.allowTwitchStreams.checked=PLAYLIST.allowTwitchStreams??!0,elements.allowTwitchVODs.checked=PLAYLIST.allowTwitchVODs??!0,elements.allowYTStreams.checked=PLAYLIST.allowYTStreams??!0,elements.allowYTShorts.checked=PLAYLIST.allowYTShorts??!0,elements.allowYTVideos.checked=PLAYLIST.allowYTVideos??!0,elements.maxDuration.value=PLAYLIST.maxDuration||"",elements.maxDurationUnit.value=PLAYLIST.maxDurationUnit||"m",elements.maxLength.value=PLAYLIST.maxLength||"",elements.maxSize.value=PLAYLIST.maxSize||"",elements.minViewCount.value=PLAYLIST.minViewCount||"",elements.allowPlebs.checked=PLAYLIST.allowPlebs??!0,elements.allowSubs.checked=PLAYLIST.allowSubs??!0,elements.allowMods.checked=PLAYLIST.allowMods??!0,elements.allowVips.checked=PLAYLIST.allowVips??!0,elements.allowFirstTimeChatters.checked=PLAYLIST.allowFirstTimeChatters??!0,elements.plebLimit.value=PLAYLIST.plebLimit||"",elements.subLimit.value=PLAYLIST.subLimit||"",elements.modLimit.value=PLAYLIST.modLimit||"",elements.vipLimit.value=PLAYLIST.vipLimit||"",elements.firstTimeChatterLimit.value=PLAYLIST.firstTimeChatterLimit||"",elements.noCommand.checked=PLAYLIST.noCommand??!1,elements.requestCommand.value=PLAYLIST.requestCommand||"!request",elements.requestCommandAlias.value=PLAYLIST.requestCommandAlias||"!r",elements.allowVoteSkip.checked=PLAYLIST.allowVoteSkip??!1,elements.voteskipCommand.value=PLAYLIST.voteskipCommand||"!voteskip",elements.voteskipCommandAlias.value=PLAYLIST.voteskipCommandAlias||"!vs",elements.voteskipCount.value=PLAYLIST.voteskipCount||100,elements.enableBot.checked=PLAYLIST.enableBot??!1,elements.botCooldown.value=PLAYLIST.botCooldown||1,elements.songCommand.value=PLAYLIST.songCommand||"!song",elements.songCommandAlias.value=PLAYLIST.songCommandAlias||"!video",elements.playlistCommand.value=PLAYLIST.playlistCommand||"!playlist",elements.playlistCommandAlias.value=PLAYLIST.playlistCommandAlias||"!pl",elements.approvalQueue.checked=PLAYLIST.approvalQueue??!1,elements.openCommand.value=PLAYLIST.openCommand||"!open",elements.closeCommand.value=PLAYLIST.closeCommand||"!close",elements.playCommand.value=PLAYLIST.playCommand||"!play",elements.pauseCommand.value=PLAYLIST.pauseCommand||"!pause",elements.autoplayCommand.value=PLAYLIST.autoplayCommand||"!autoplay",elements.skipCommand.value=PLAYLIST.skipCommand||"!skip",elements.rewindCommand.value=PLAYLIST.rewindCommand||"!rewind",elements.deleteCommand.value=PLAYLIST.deleteCommand||"!delete",elements.modCommands.checked=PLAYLIST.modCommands??!0,elements.voteskipCommand.disabled=!PLAYLIST.allowVoteSkip,elements.voteskipCommandAlias.disabled=!PLAYLIST.allowVoteSkip,elements.voteskipCount.disabled=!PLAYLIST.allowVoteSkip,elements.botCooldown.disabled=!PLAYLIST.enableBot,elements.songCommand.disabled=!PLAYLIST.enableBot,elements.songCommandAlias.disabled=!PLAYLIST.enableBot,elements.playlistCommand.disabled=!PLAYLIST.enableBot,elements.playlistCommandAlias.disabled=!PLAYLIST.enableBot,elements.approvalTabButton.style.display=PLAYLIST.approvalQueue?"":"none",elements.voteSkipHint.innerHTML=`<strong>${PLAYLIST.voteskipCommand}</strong> or <strong>${PLAYLIST.voteskipCommandAlias}</strong>`,PLAYLIST.noCommand?(elements.commandHint.innerHTML="Add songs or videos to the playlist by posting a link in chat",elements.commandHint2.innerHTML="Request something by posting a link in chat"):(elements.commandHint.innerHTML=`Add songs or videos to the playlist using \n      <kbd class="notranslate text-success cursor-pointer" onclick="editRequestCommand()">${PLAYLIST.requestCommand}</kbd> or \n      <kbd class="notranslate text-success cursor-pointer" onclick="editRequestCommand(true)">${PLAYLIST.requestCommandAlias}</kbd>`,elements.commandHint2.innerHTML=`Request something using \n      <kbd class="notranslate text-success cursor-pointer" onclick="editRequestCommand()">${PLAYLIST.requestCommand} [link]</kbd> or \n      <kbd class="notranslate text-success cursor-pointer" onclick="editRequestCommand(true)">${PLAYLIST.requestCommandAlias} [link]</kbd>`),updateWhoCanRequest(),checkCommands()):console.log("localStorage settings not found"),localStorage.getItem("PLAYLIST_REQUESTS")){requests=JSON.parse(localStorage.getItem("PLAYLIST_REQUESTS"),reviver),requests instanceof Map!=!0&&(requests=new Map);for(let e of requests.values())addToPlaylist(e),updatePlaylist(e,!0);updateLength()}else console.log("localStorage playlist requests not found");if(localStorage.getItem("PLAYLIST_HISTORY")){history=JSON.parse(localStorage.getItem("PLAYLIST_HISTORY"));for(let e=0;e<history.length;e++)addToHistory(history[e],!0)}else console.log("localStorage playlist history not found")}function resetSettings(e=!1){return e&&(localStorage.setItem("USER",JSON.stringify({channel:"",twitchLogin:!1,access_token:"",userID:"",platform:""})),localStorage.setItem("PLAYLIST_REQUESTS",JSON.stringify(new Map,replacer)),localStorage.setItem("PLAYLIST_HISTORY",JSON.stringify([]))),localStorage.setItem("PLAYLIST",JSON.stringify({autoplay:!0,allowSpotifySongs:!0,allowStreamable:!0,allowSupaVideo:!0,allowSupaAudio:!0,allowTwitchClips:!0,allowTwitchStreams:!0,allowTwitchVODs:!0,allowYTStreams:!0,allowYTShorts:!0,allowYTVideos:!0,maxDuration:"",maxDurationUnit:"m",maxLength:"",maxSize:"",minViewCount:"",allowPlebs:!0,allowSubs:!0,allowMods:!0,allowVips:!0,allowFirstTimeChatters:!0,plebLimit:"",subLimit:"",modLimit:"",vipLimit:"",firstTimeChatterLimit:"",noCommand:!1,requestCommand:"!request",requestCommandAlias:"!r",allowVoteSkip:!1,voteskipCommand:"!voteskip",voteskipCommandAlias:"!vs",voteskipCount:100,enableBot:!1,botCooldown:1,songCommand:"!song",songCommandAlias:"!video",playlistCommand:"!playlist",playlistCommandAlias:"!pl",approvalQueue:!1,openCommand:"!open",closeCommand:"!close",playCommand:"!play",pauseCommand:"!pause",autoplayCommand:"!autoplay",skipCommand:"!skip",rewindCommand:"!rewind",deleteCommand:"!delete",modCommands:!0})),location.reload(),!1}function login(){return elements.topRight.innerHTML='<div class="btn-group" role="group" aria-label="log in button group">\n    <button type="button" class="btn btn-twitch"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></button>\n    <div class="btn-group" role="group">\n        <button id="btnGroupDropLogin" type="button" class="btn btn-twitch dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">\n      </button>\n        <ul class="dropdown-menu dropdown-menu-lg-end" aria-label="Log out">\n            <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n        </ul>\n    </div>\n</div>',window.open("/prompt.html","loginWindow","toolbar=0,status=0,scrollbars=0,width=500px,height=800px"),!1}function connect(){elements.status.innerHTML='\n  <h4>\n  <span class="badge bg-warning">Connecting... \n  <div class="spinner-border" style="width:18px;height:18px;" role="status"><span class="visually-hidden">Loading...</span></div>\n  </span>\n  </h4>',elements.topRight.innerHTML='\n  <div class="btn-group" role="group" aria-label="log in button group">\n  <button type="button" class="btn btn-twitch"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></button>\n  <div class="btn-group" role="group">\n  <button id="btnGroupDropLogin" type="button" class="btn btn-twitch dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false"></button>\n  <ul class="dropdown-menu dropdown-menu-lg-end" aria-label="Log out">\n  <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n  </ul>\n  </div>\n  </div>',refreshData(),loadBadges(USER.channel);let e={options:{clientId:CLIENT_ID,debug:!1},connection:{secure:!0,reconnect:!0},channels:[USER.channel]};client=new tmi.client(e),client.on("message",(async(e,t,n,o)=>{t["first-msg"]&&firstTimeChatters.push(t.username);let a=n.split(" ").filter(Boolean);if(PLAYLIST.noCommand&&playlist_open){let e=parseLink(a[0]);if(e&&linkTypeAllowed(e.type))return void addRequest(t,e,t.id);if(e&&!linkTypeAllowed(e.type))return void botReply(`⛔ ${e.type} links are not enabled`,t.id,!1)}let l=a[0].toLowerCase();switch(l){case PLAYLIST.requestCommand:case PLAYLIST.requestCommandAlias:if(!a[1])return;if(!playlist_open&&(Date.now()-currentTime)/1e3>10)return currentTime=Date.now(),togglePlaylistPopover.show(),void setTimeout((function(){togglePlaylistPopover.hide()}),2e3);if(!playlist_open)return;let e=parseLink(a[1]);if(!e)return;if(!linkTypeAllowed(e.type))return void botReply(`⛔ ${e.type} links are not enabled`,t.id,!1);addRequest(t,e,t.id);break;case PLAYLIST.voteskipCommand:case PLAYLIST.voteskipCommandAlias:voteSkip(t["user-id"]);break;case PLAYLIST.songCommand:case PLAYLIST.songCommandAlias:currentItem&&botReply(`Current song/video: ${currentItem.title} | Requested by @${currentItem.by[0].username} ${currentItem.by.length>1?`and ${currentItem.by.length-1} other ${currentItem.by.length-1==1?"user":"users"}`:""} | ${getItemLink(currentItem.type,currentItem.id)}`,t.id,!0);break;case PLAYLIST.playlistCommand:case PLAYLIST.playlistCommandAlias:USER.access_token&&botReply(`You can view the playlist here: https://playlist.chat.vote/${USER.channel}`,t.id,!0);break;default:break}if((Date.now()-botCooldown)/1e3>PLAYLIST.botCooldown&&(t.username==USER.channel||PLAYLIST.modCommands&&t.mod))switch(botCooldown=Date.now(),l){case PLAYLIST.openCommand:openPlaylist(t.id);break;case PLAYLIST.closeCommand:closePlaylist(t.id);break;case PLAYLIST.playCommand:playPlaylist(t.id);break;case PLAYLIST.pauseCommand:pausePlaylist(t.id);break;case PLAYLIST.autoplayCommand:toggleAutoplay(t.id);break;case PLAYLIST.skipCommand:nextItem(t.id);break;case PLAYLIST.rewindCommand:previousItem(t.id);break;case PLAYLIST.deleteCommand:deleteItem(a[1],t.id);break;default:break}})),client.on("timeout",((e,t,n,o,a)=>{})),client.on("messagedeleted",((e,t,n,o)=>{const a=findRequestKey("msgid",o["target-msg-id"]);a&&deleteRequest(a,!1)})),client.on("connected",(async(e,t)=>{console.log(`Connected to ${e}:${t}`),elements.status.innerHTML='<h4><span class="badge bg-success">Connected :)</span></h4>',saveSettings(),sendUsername("chat.vote/playlist",USER.channel,"twitch"==USER.platform?`twitch - ${USER.twitchLogin}`:"youtube"),await checkTags(USER.userID,USER.access_token)&&(elements.vtsLink.style.display=""),loadPFP()})),client.on("disconnected",(e=>{elements.status.innerHTML=`<h4><span class="badge bg-danger">Disconnected: ${e}</span></h4>`})),client.on("notice",((e,t,n)=>{elements.status.innerHTML=`<h4><span class="badge bg-danger">Disconnected: ${n}</span></h4>`})),client.connect().catch(console.error)}function getUser(e){const t=users.findIndex((t=>t.id===e["user-id"]));return-1==t?(users.push({id:e["user-id"],username:e.username,displayName:e["display-name"],mod:e?.mod||!1,sub:e?.subscriber||!1,vip:e?.vip||!1,firstTimeChatter:firstTimeChatters.includes(e.username),requestsCount:0,requestsDuration:0,badges:addBadges(e.badges,e["user-id"],firstTimeChatters.includes(e.username)),color:e.color||"#FFFFFF",requests:[]}),users.length-1):t}function checkRequestLimit(e){let t=0;if(!users[e].sub&&PLAYLIST.allowPlebs){if(""===PLAYLIST.plebLimit)return-1;t=Math.max(t,PLAYLIST.plebLimit)}if(users[e].sub&&PLAYLIST.allowSubs){if(""===PLAYLIST.subLimit)return-1;t=Math.max(t,PLAYLIST.subLimit)}if(users[e].mod&&PLAYLIST.allowMods){if(""===PLAYLIST.modLimit)return-1;t=Math.max(t,PLAYLIST.modLimit)}if(users[e].vip&&PLAYLIST.allowVips){if(""===PLAYLIST.vipLimit)return-1;t=Math.max(t,PLAYLIST.vipLimit)}if(users[e].firstTimeChatter&&PLAYLIST.allowFirstTimeChatters){if(""===PLAYLIST.firstTimeChatterLimit)return-1;t=Math.max(t,PLAYLIST.firstTimeChatterLimit)}return t}function findRequestKey(e,t){for(const[n,o]of requests.entries())if(o[e]===t)return n;return null}function addRequest(e,t,n=0){const o=getUser(e),a=checkRequestLimit(o);if(0===a)return void botReply("🚫 You are not allowed to send requests",e.id,!1);if(-1!==a&&users[o].requestsCount>=a)return void botReply("⚠ You used up all your requests",e.id,!1);if(users[o].requests.some((e=>e===t.id)))return void botReply("🚫 You already requested this",e.id,!1);users[o].requestsCount++,users[o].requests.push(t.id);let l=requests.get(t.id);if(l)l.by.push(users[o]),requests.set(t.id,l),updatePlaylist(l),botReply("⚠ Someone else already requested this",e.id,!1);else{let a={id:t.id,msgid:n,type:t.type,approved:!PLAYLIST.approvalQueue,title:"",channel:"",uri:"",duration:0,views:-1,thumbnail:"",time:Date.now(),by:[users[o]]};requests.set(t.id,a),addToPlaylist(a),getRequestInfo(a,e.id),updatePlaylist(a)}updateLength(),updateSite()}function deleteRequest(e,t=!0){const n=requests.get(e);if(t)for(let t=0;t<n.by.length;t++){const o=users.findIndex((e=>e.username===n.by[t].username));-1!=o&&(users[o].requestsCount--,users[o].requests.splice(users[o].requests.findIndex((function(t){return t.value===e})),1))}requests.delete(e),document.getElementById(`id${e}`).remove(),updateLength(),saveSettings()}function clearPlaylist(){playlist_playing=!1,total_duration=0,users=[],requests=new Map,resetVoteSkip(),resetPlayers(),elements.mainList.innerHTML="",elements.placeholder.style.display="",elements.nowPlaying.innerHTML='<span class="text-body-secondary">Nothing :)</span>',elements.nowPlayingRequester.innerHTML='<span class="text-body-secondary">No one :)</span>',updateLength(),saveSettings()}function clearHistory(){history=[],elements.historyList.innerHTML="",saveSettings()}function updateLength(){const e=requests.size;let t=0;for(let e of requests.values())-1!=e.duration&&(t+=e.duration);elements.playlistLength.innerHTML=`${secondsToTimeString(Math.round(t))||"00:00"} (${e} ${1==e?"item":"items"})`}function addToPlaylist(e,t="beforeend"){elements.mainList.insertAdjacentHTML(t,`<div class="container-fluid p-0 mb-1" id="id${e.id}">\n        <div class="row g-1">\n          <div class="col-auto thumbnail-div">\n            <div id="id${e.id}_thumbnail" class="request-thumbnail">\n              <div class="placeholder-glow" style="width: 160px; height: 90px">\n                <span class="placeholder col-12 rounded h-100"></span>\n              </div>\n            </div>\n            <span class="badge text-bg-dark duration-label" id="id${e.id}_duration">00:00</span>\n          </div>\n          <div class="col">\n            <div class="vstack h-100">\n              <div class="request-title mb-auto" id="id${e.id}_title" >\n                <span class="placeholder-glow">\n                  <span class="placeholder col-12"></span>\n                </span>\n                <span class="placeholder-glow">\n                  <span class="placeholder col-12"></span>\n                </span>\n              </div>\n              <small class="request-info text-body-secondary" id="id${e.id}_info" >\n                <span class="placeholder-glow">\n                  <span class="placeholder col-12"></span>\n                </span>\n              </small>\n              <small class="requested-by text-body-secondary" id="id${e.id}_by" >\n              Requested by: \n              ${e.by[0].badges}\n              <span style="color: ${e.by[0].color}">${e.by.map((e=>e.username)).join(" & ")}</span>\n              </small>\n            </div>\n          </div>\n          <div class="col-auto" style="align-self: center"><i class="material-icons notranslate delete-request" onclick="deleteRequest('${e.id}',false)">delete</i></div>\n        </div>\n      </div>`)}function addToHistory(e,t=!1){t||history.unshift(e),elements.historyList.insertAdjacentHTML(t?"beforeend":"afterbegin",`<div class="container-fluid p-0 mb-1">\n        <div class="row g-1">\n          <div class="col-auto thumbnail-div">\n            <div class="request-thumbnail">\n            <img src="${e.thumbnail}" alt="thumbnail" class="rounded" />\n            </div>\n            <span class="badge text-bg-dark duration-label">${-1==e.duration?"🔴live":secondsToTimeString(Math.round(e.duration))}</span>\n          </div>\n          <div class="col">\n            <div class="vstack h-100">\n              <div class="request-title mb-auto" title="${e.title}">\n                <a \n                class="link-body-emphasis link-underline-opacity-0" \n                href="${getItemLink(e.type,e.id)}" \n                target="_blank" \n                rel="noopener noreferrer"> \n                ${validator.escape(e.title)}\n                </a>\n              </div>\n              <small class="request-info text-body-secondary">\n              ${validator.escape(e.channel)} ${e.views>-1?` · ${formatViewCount(e.views)} ${1==e.views?"view":"views"}`:""}\n              </small>\n              <small class="requested-by text-body-secondary" title="Requested by @${e.by.map((e=>e.username)).join(" & ")}">\n              Requested by \n              ${e.by[0].badges}\n              <a \n              class="link-body-emphasis link-underline-opacity-0"\n              href="https://www.twitch.tv/popout/${USER.channel}/viewercard/${e.by[0].username}"\n              target="_blank"\n              rel="noopener noreferrer">\n              <span style="color: ${e.by[0].color}">${e.by[0].username}</span>\n              </a>\n              ${e.by.length>1?`and ${e.by.length-1} other ${e.by.length-1==1?"user":"users"}`:""}\n              </small>\n            </div>\n          </div>\n        </div>\n      </div>`)}function updatePlaylist(e,t=!1){e.thumbnail&&e.title?(document.getElementById(`id${e.id}_thumbnail`).innerHTML=`<img src="${e.thumbnail}" alt="thumbnail" class="rounded" />`,document.getElementById(`id${e.id}_title`).innerHTML=`\n    <a \n    class="link-body-emphasis link-underline-opacity-0"\n    href="${getItemLink(e.type,e.id)}"\n    target="_blank"\n    rel="noopener noreferrer">\n    ${validator.escape(e.title)}\n    </a>`,document.getElementById(`id${e.id}_title`).title=e.title,document.getElementById(`id${e.id}_info`).innerHTML=`\n    ${validator.escape(e.channel)} ${e.views>-1?` · ${formatViewCount(e.views)} ${1==e.views?"view":"views"}`:""}`,document.getElementById(`id${e.id}_info`).title=`\n    ${validator.escape(e.channel)} ${e.views>-1?` · ${formatViewCount(e.views)} ${1==e.views?"view":"views"}`:""}`,document.getElementById(`id${e.id}_duration`).innerText=-1==e.duration?"🔴live":secondsToTimeString(Math.round(e.duration)),document.getElementById(`id${e.id}_by`).innerHTML=`\n    Requested by \n    ${e.by[0].badges}\n    <a \n    class="link-body-emphasis link-underline-opacity-0"\n    href="https://www.twitch.tv/popout/${USER.channel}/viewercard/${e.by[0].username}"\n    target="_blank"\n    rel="noopener noreferrer">\n    <span style="color: ${e.by[0].color}">${e.by[0].username}</span>\n    </a>\n     ${e.by.length>1?`and ${e.by.length-1} other ${e.by.length-1==1?"user":"users"}`:""}`,document.getElementById(`id${e.id}_by`).title=`Requested by @${e.by.map((e=>e.username)).join(" & ")}`,playlist_playing||!PLAYLIST.autoplay||t||nextItem(),t||saveSettings()):document.getElementById(`id${e.id}_by`).innerText=`Requested by @${e.by[0].username} ${e.by.length>1?`and ${e.by.length-1} other ${e.by.length-1==1?"user":"users"}`:""}`}async function getRequestInfo(e,t){if(e.title)updatePlaylist(e);else{if("twitch clip"==e.type)try{let t=await fetch(`https://helper.donk.workers.dev/twitch/clips?id=${e.id}`,GETrequestOptions),n=await t.json();console.log(n),e.title=n.data[0].title||"(untitled)",e.channel=n.data[0].broadcaster_name||"(unknown)",e.thumbnail=n.data[0].thumbnail_url,e.duration=n.data[0].duration,e.views=n.data[0].view_count}catch(n){return deleteRequest(e.id),botReply("⚠ Your clip was removed because I could not find its info",t,!1),void console.log("getRequestInfo twitch clip error",n)}if("twitch vod"==e.type)try{let t=await fetch(`https://helper.donk.workers.dev/twitch/videos?id=${e.id}`,GETrequestOptions),n=await t.json();console.log(n),e.title=n.data[0].title||"(untitled)",e.channel=n.data[0].user_login||"(unknown)",e.thumbnail=n.data[0].thumbnail_url.replace("%{width}","320").replace("%{height}","180"),e.duration=convertTwitchVODDuration(n.data[0].duration),e.views=n.data[0].view_count}catch(n){return deleteRequest(e.id),botReply("⚠ Your video was removed because I could not find its info",t,!1),void console.log("getRequestInfo twitch vod error",n)}if("twitch stream"==e.type)try{let t=await fetch(`https://helper.donk.workers.dev/twitch/streams?user_login=${e.id}`,GETrequestOptions),n=await t.json();console.log(n),e.title=n.data[0].title||"(untitled)",e.channel=n.data[0].user_name||"(unknown)",e.thumbnail=n.data[0].thumbnail_url.replace("{width}","320").replace("{height}","180"),e.duration=-1}catch(n){return deleteRequest(e.id),botReply("⚠ Your stream was removed because I could not find its info",t,!1),void console.log("getRequestInfo twitch stream error",n)}if("spotify"==e.type)try{let n=await fetch(`https://helper.donk.workers.dev/spotify/tracks?ids=${e.id}`,GETrequestOptions),o=await n.json();if(console.log(o),e.title=o.tracks[0].name||"(untitled)",e.channel=o.tracks[0].artists[0].name||"(unknown)",e.thumbnail=o.tracks[0].album.images[0].url,e.duration=o.tracks[0].duration_ms/1e3,e.uri=o.tracks[0].uri,!o.tracks[0].is_playable)return deleteRequest(e.id),void botReply("⛔ Your song was removed because it is not playable",t,!1)}catch(n){return deleteRequest(e.id),botReply("⚠ Your song was removed because I could not find its info",t,!1),void console.log("getRequestInfo spotify error",n)}if("youtube"==e.type||"youtube short"==e.type)try{let n=await fetch(`https://helper.donk.workers.dev/youtube/videos?id=${e.id}`,GETrequestOptions),o=await n.json();if(console.log(o),e.title=o.items[0].snippet.title||"(untitled)",e.channel=o.items[0].snippet.channelTitle||"(unknown)",e.thumbnail=o.items[0].snippet.thumbnails.medium.url,e.duration=ISO8601ToSeconds(o.items[0].contentDetails.duration),e.views=o.items[0].statistics.viewCount,"none"!==o.items[0].snippet.liveBroadcastContent&&(0==e.duration&&(e.duration=-1),!PLAYLIST.allowYTStreams))return deleteRequest(e.id),void botReply("⛔ YouTube streams are not allowed",t,!1);if("ytAgeRestricted"==o.items[0].contentDetails?.contentRating?.ytRating||!o.items[0].status?.embeddable)return deleteRequest(e.id),void botReply("⛔ Your video was removed because it is age restricted or not embeddable",t,!1)}catch(n){return deleteRequest(e.id),botReply("⚠ Your video was removed because I could not find its info",t,!1),void console.log("getRequestInfo youtube error",n)}if("streamable"==e.type)try{let t=await fetch(`https://helper.donk.workers.dev/streamable/videos?id=${e.id}`,GETrequestOptions),n=await t.json();console.log(n),e.title=n.title||"(untitled)",e.channel="(unknown)",e.thumbnail=n.thumbnail_url,e.duration=n.files.mp4.duration,e.video=n.files.mp4.url}catch(n){return deleteRequest(e.id),botReply("⚠ Your video was removed because I could not find its info",t,!1),void console.log("getRequestInfo streamable error",n)}if("supa video/audio"==e.type||"supa video"==e.type||"supa audio"==e.type)try{let n=await fetch(`https://helper.donk.workers.dev/supa/info?id=${e.id}`,GETrequestOptions),o=await n.json();if(console.log(o),e.title=o?.name?.split(".")[0]||"(untitled)",e.channel="(unknown)",await checkImage(`https://i.supa.codes/t/${e.id}`)?e.thumbnail=`https://i.supa.codes/t/${e.id}`:e.thumbnail="https://chat.vote/pics/nothumbnail.png",e.duration=o?.mediainfo?.duration||0,o.type.startsWith("video")){if(!PLAYLIST.allowSupaVideo)return botReply("⛔ supa video links are not enabled",t,!1),void deleteRequest(e.id);e.type="supa video"}if(o.type.startsWith("audio")){if(!PLAYLIST.allowSupaVideo)return botReply("⛔ supa audio links are not enabled",t,!1),void deleteRequest(e.id);e.type="supa audio"}if(!o.type.startsWith("audio")&&!o.type.startsWith("video"))return deleteRequest(e.id),void botReply("⚠ Only video and audio files are allowed",t,!1)}catch(n){return deleteRequest(e.id),botReply("⚠ Your video was removed because I could not find its info",t,!1),void console.log("getRequestInfo supa error",n)}if(""!==PLAYLIST.maxDuration&&-1!==e.duration&&total_duration+e.duration>PLAYLIST.maxDuration*("m"==PLAYLIST.maxDurationUnit?60:3600))return playlist_open&&togglePlaylist(),deleteRequest(e.id),void botReply(`⛔ Your request was removed because the playlist's duration limit was reached (${PLAYLIST.maxDuration}${PLAYLIST.maxDurationUnit})`,t,!1);if(""!==PLAYLIST.maxLength&&-1!==e.duration&&e.duration>60*PLAYLIST.maxLength)return deleteRequest(e.id),void botReply(`⛔ Your request was removed because it's too long (${PLAYLIST.maxLength}m max)`,t,!1);if(""!==PLAYLIST.maxSize&&requests.size>PLAYLIST.maxSize)return playlist_open&&togglePlaylist(),deleteRequest(e.id),void botReply(`⛔ Your request was removed because the playlist's size limit was reached (${PLAYLIST.maxSize})`,t,!1);if(""!==PLAYLIST.minViewCount&&-1!==e.views&&e.views<PLAYLIST.minViewCount)return deleteRequest(e.id),void botReply(`⛔ Your request was removed because it does not meet the minimum view count (${PLAYLIST.minViewCount.toLocaleString()})`,t,!1);-1!==e.duration&&(total_duration+=e.duration),updatePlaylist(e),updateLength(),botReply(currentItem&&e?"✅ Your request has been added to the playlist "+(1==requests.size?`| Playing right after the current request (<${secondsToTimeString(currentItem.duration)})`:`| ${requests.size-1} ${requests.size-1==1?"request":"requests"} ahead of you (${secondsToTimeString(total_duration+currentItem.duration-e.duration)})`):"✅ Your request has been added to the playlist",t,!1)}}function parseLink(e){if(e.includes("twitch.tv")){if(e.includes("/clip/")||e.includes("clips.twitch.tv")){let t=new URL(e),n="clips.twitch.tv"===t.hostname?/^\/(\w+(?:\/[A-Z]\w+)?(?:[\-\w]*))(?:\/|$)/.exec(t.pathname):/^\/\w+\/clip\/(\w+(?:\/[A-Z]\w+)?(?:[\-\w]*))(?:\/|$)/.exec(t.pathname);return n&&n[1]?{type:"twitch clip",id:n[1]}:null}if(e.includes("/videos/")){const t=e.match(/\/videos\/(\d+)/);return t&&parseInt(t[1])?{type:"twitch vod",id:t[1]}:null}const t=e.match(/\/([a-zA-Z0-9_]{1,25})$/);return t?{type:"twitch stream",id:t[1]}:null}if(e.includes("youtube.com")||e.includes("youtu.be")){const t=/(youtu.*be.*)\/(watch\?v=|embed\/|v|shorts|)(.*?((?=[&#?])|$))/gm.exec(e)||null;return 11!=t[3]?.length?null:{type:e.includes("/shorts/")?"youtube short":"youtube",id:t[3]}}if(e.includes("spotify.com")){const t=/https?:\/\/(?:embed\.|open\.)(?:spotify\.com\/)(?:(album|track|playlist)\/|\?uri=spotify:track:)((\w|-){22})/;let n=e.match(t);return n[2]&&"track"===n[1]?{type:"spotify",id:n[2]}:null}if(e.includes("streamable.com")){const t=e.match(/streamable\.com\/([a-zA-Z0-9]+)/);return t[1]?{type:"streamable",id:t[1]}:null}if(e.includes("i.supa.codes")||e.includes("gachi.gay")||e.includes("kappa.lol")||e.includes("femboy.beauty")){const t=e.match(/\/([0-9a-zA-Z_-]{5,})(?:[?/.].*)?$/);return console.log(t),t[1]?{type:"supa video/audio",id:t[1]}:null}return null}function linkTypeAllowed(e){return!("twitch clip"==e&&!PLAYLIST.allowTwitchClips)&&(!("twitch vod"==e&&!PLAYLIST.allowTwitchVODs)&&(!("twitch stream"==e&&!PLAYLIST.allowTwitchStreams)&&(!("spotify"==e&&!PLAYLIST.allowSpotifySongs)&&(!("streamable"==e&&!PLAYLIST.allowStreamable)&&(!("supa video/audio"==e&&!PLAYLIST.allowSupaVideo&&!PLAYLIST.allowSupaAudio)&&(!("youtube"==e&&!PLAYLIST.allowYTStreams&&!PLAYLIST.allowYTVideos)&&!("youtube short"==e&&!PLAYLIST.allowYTShorts)))))))}function getItemLink(e,t){switch(e){case"youtube":return`https://youtu.be/${t}`;case"youtube short":return`https://youtube.com/shorts/${t}`;case"spotify":return`https://open.spotify.com/track/${t}`;case"twitch stream":return`https://www.twitch.tv/${t}`;case"twitch vod":return`https://www.twitch.tv/videos/${t}`;case"twitch clip":return`https://clips.twitch.tv/${t}`;case"streamable":return`https://streamable.com/${t}`;case"supa video":case"supa audio":case"supa video/audio":return`https://i.supa.codes/${t}`;default:return""}}function addLink(){if(!checkLogin())return;let e=parseLink(elements.link.value?.replace(/\s+/g,""));if(!e||!linkTypeAllowed(e.type))return showToast("Could not parse the provided link","warning",3e3),void(elements.link.value="");addRequest({id:null,"user-id":USER.userID,username:USER.channel,displayName:USER.channel,mod:!0,sub:!0,vip:!0,firstTimeChatter:!1,badges:"streamer",color:streamerColor},e),elements.link.value=""}let currentItem,voteskipTimeout,historyIndex=-1;function previousItem(e){if(0!=history.length){if(resetPlayers(),resetVoteSkip(),currentItem?.id==history[historyIndex+1]?.id&&historyIndex++,currentItem=history[++historyIndex],!currentItem)return playlist_playing=!1,elements.placeholder.style.display="",elements.nowPlaying.innerHTML='<span class="text-body-secondary">Nothing :)</span>',void(elements.nowPlayingRequester.innerHTML='<span class="text-body-secondary">No one :)</span>');e&&botReply("⏪ Rewinded",e,!1),console.log(currentItem),playItem(currentItem),updateLength(),saveSettings()}}function deleteItem(e,t){requests.get(e)?(deleteRequest(e,!1),botReply("✅ Request deleted",t,!1),updateLength(),saveSettings()):botReply("⚠ Request not found",t,!1)}function nextItem(e){if(resetPlayers(),resetVoteSkip(),e&&botReply("⏩ Skipped",e,!1),historyIndex>0)currentItem=history[--historyIndex];else{let e=requests.keys().next().value;currentItem=requests.get(e),requests.delete(e),historyIndex=-1,currentItem&&(addToHistory(currentItem),deleteRequest(currentItem.id,!1))}if(!currentItem)return playlist_playing=!1,elements.placeholder.style.display="",elements.nowPlaying.innerHTML='<span class="text-body-secondary">Nothing :)</span>',void(elements.nowPlayingRequester.innerHTML='<span class="text-body-secondary">No one :)</span>');console.log(currentItem),playItem(currentItem),updateLength(),saveSettings()}function playItem(e){switch(e.type){case"youtube":case"youtube short":elements.youtubeEmbedContainer.style.display="",youtubePlayer.loadVideoById(e.id);break;case"spotify":elements.spotifyEmbedContainer.style.display="",spotifyPlayer.loadUri(e.uri);break;case"twitch stream":elements.twitchEmbed.style.display="",twitchPlayer.setChannel(e.id);break;case"twitch vod":elements.twitchEmbed.style.display="",twitchPlayer.setVideo(e.id);break;case"twitch clip":elements.twitchClipsEmbed.style.display="",elements.twitchClipsEmbed.innerHTML=`<iframe src="https://clips.twitch.tv/embed?clip=${e.id}&parent=${window.location.hostname}&autoplay=true&muted=false" preload="auto" height="100%" width="100%"></iframe>`;break;case"streamable":elements.videoEmbed.style.display="",elements.videoEmbed.src=e.video;break;case"supa video":case"supa audio":elements.videoEmbed.style.display="",elements.videoEmbed.src=`https://i.supa.codes/${e.id}`;break;default:break}-1!==currentItem.duration&&(total_duration-=currentItem.duration),elements.nowPlaying.innerHTML=`\n  <a \n  class="link-body-emphasis link-underline-opacity-0"\n  href="${getItemLink(currentItem.type,currentItem.id)}"\n  target="_blank"\n  rel="noopener noreferrer">\n  ${validator.escape(currentItem.title)}\n  </a>`,elements.nowPlaying.title=currentItem.title,elements.nowPlayingRequester.innerHTML=`\n  ${currentItem.by[0].badges}\n  <a \n  class="link-body-emphasis link-underline-opacity-0"\n  href="https://www.twitch.tv/popout/${USER.channel}/viewercard/${currentItem.by[0].username}"\n  target="_blank"\n  rel="noopener noreferrer">\n  <span style="color: ${currentItem.by[0].color}">${currentItem.by[0].username}</span>\n  </a>\n  ${currentItem.by.length>1?`and ${currentItem.by.length-1} other ${currentItem.by.length-1==1?"user":"users"}`:""}`,elements.nowPlayingRequester.title=currentItem.by.map((e=>e.username)).join(" & "),playlist_playing=!0,updateMetadata()}function updateMetadata(){"mediaSession"in navigator&&(navigator.mediaSession.metadata=new MediaMetadata({title:currentItem.title,artist:currentItem.channel,album:`Requested By: ${currentItem.by.map((e=>e.username)).join(" & ")}`,artwork:[{src:currentItem.thumbnail}]}))}function resetPlayers(){elements.placeholder.style.display="none",elements.youtubeEmbedContainer.style.display="none",elements.spotifyEmbedContainer.style.display="none",elements.twitchEmbed.style.display="none",elements.twitchClipsEmbed.style.display="none",elements.videoEmbed.style.display="none",youtubePlayer.loadVideoById(""),spotifyPlayer.pause(),twitchPlayer.setChannel(""),elements.twitchClipsEmbed.innerHTML="",elements.videoEmbed.src=""}function voteSkip(e){if(!playlist_playing||!PLAYLIST.allowVoteSkip)return;if("none"==elements.voteSkipDiv.style.display&&(elements.voteSkipDiv.style.display="",anime({targets:"#voteSkipDiv",easing:"easeOutElastic",translateY:["-100%",0]})),clearTimeout(voteskipTimeout),voteskipTimeout=setTimeout((()=>{anime({targets:"#voteSkipDiv",easing:"easeOutBounce",duration:2e3,translateY:[0,"-100%"],complete:function(e){elements.voteSkipDiv.style.display="none"}})}),5e3),skippers.includes(e))return;skippers.push(e);let t=PLAYLIST.voteskipCount-skippers.length;elements.voteSkipVotes.innerHTML=`${t} ${1==t?"vote":"votes"}  needed to skip`,t<=0&&(nextItem(),resetVoteSkip())}function resetVoteSkip(){skippers=[],anime({targets:"#voteSkipDiv",easing:"easeOutBounce",translateY:[0,"-100%"],complete:function(e){elements.voteSkipDiv.style.display="none"}})}async function loadPFP(){if(!USER.channel)return void(elements.topRight.innerHTML='<div class="btn-group" role="group" aria-label="login options">\n    <a\n      role="button"\n      id="loginButton"\n      onclick="login()"\n      class="btn btn-twitch"\n      tabindex="0"\n      data-bs-container="body"\n      data-bs-custom-class="custom-popover"\n      data-bs-placement="bottom"\n      data-bs-trigger="manual"\n      data-bs-toggle="popover"\n      data-bs-title="Not signed in"\n      data-bs-content="You need sign in first before adding options or enabling voting/suggestions"\n      ><span class="twitch-icon"></span>Sign in with Twitch</a\n    >\n    <div class="btn-group" role="group">\n      <button\n        id="btnGroupDropLogin"\n        type="button"\n        class="btn btn-twitch dropdown-toggle"\n        data-bs-toggle="dropdown"\n        data-bs-auto-close="outside"\n        aria-label="other login option, connect manually"\n        aria-expanded="false"\n      ></button>\n      <div class="dropdown-menu dropdown-menu-end" aria-labelledby="btnGroupDropLogin">\n        <div class="p-3" style="width: 300px">\n          <label for="channelName" class="form-label">Connect to chat directly</label>\n          <div class="input-group mb-3">\n            <span class="input-group-text" id="directLoginChannel">twitch.tv/</span>\n            <input type="text" class="form-control" id="channelName" aria-describedby="directLoginChannel" />\n          </div>\n          <small class="text-body-secondary">Some features will not be available if you connect directly</small><br />\n          <button type="button" onclick="connect()" class="btn btn-primary float-end">Connect</button>\n        </div>\n      </div>\n    </div>\n  </div>');let e=await get7TVPFP(USER.userID);"/pics/donk.png"==e&&USER.access_token&&(e=await getTwitchPFP(USER.channel,USER.access_token)),elements.topRight.innerHTML=`\n  <div class="btn-group" role="group" aria-label="Button group with nested dropdown">\n  <button type="button" id="btnGroupDrop2" class="btn btn-${darkTheme?"dark":"secondary"}"><img src="${e}" alt="profile pic" style="height:2em;"></button>\n  <div class="btn-group" role="group">\n  <button id="btnGroupDrop1" type="button" class="btn btn-${darkTheme?"dark":"secondary"} dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">\n  ${USER.channel}\n  </button>\n  <ul class="dropdown-menu dropdown-menu-lg-end" aria-labelledby="btnGroupDrop1">\n  <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n  </ul>\n  </div>\n  </div>`}function checkLogin(){return!!USER.channel||(loginButton.show(),setTimeout((function(){loginButton.hide()}),4e3),!1)}function logout(){elements.topRight.innerHTML=' <div class="btn-group" role="group" aria-label="login options">\n  <a\n    role="button"\n    id="loginButton"\n    onclick="login()"\n    class="btn btn-twitch"\n    tabindex="0"\n    data-bs-container="body"\n    data-bs-custom-class="custom-popover"\n    data-bs-placement="bottom"\n    data-bs-trigger="manual"\n    data-bs-toggle="popover"\n    data-bs-title="Not signed in"\n    data-bs-content="You need sign in first before adding options or enabling voting/suggestions"\n    ><span class="twitch-icon"></span>Sign in with Twitch</a\n  >\n  <div class="btn-group" role="group">\n    <button\n      id="btnGroupDropLogin"\n      type="button"\n      class="btn btn-twitch dropdown-toggle"\n      data-bs-toggle="dropdown"\n      data-bs-auto-close="outside"\n      aria-label="other login option, connect manually"\n      aria-expanded="false"\n    ></button>\n    <div class="dropdown-menu dropdown-menu-end" aria-labelledby="btnGroupDropLogin">\n      <div class="p-3" style="width: 300px">\n        <label for="channelName" class="form-label">Connect to chat directly</label>\n        <div class="input-group mb-3">\n          <span class="input-group-text" id="directLoginChannel">twitch.tv/</span>\n          <input type="text" class="form-control" id="channelName" aria-describedby="directLoginChannel" />\n        </div>\n        <small class="text-body-secondary">Some features will not be available if you connect directly</small><br />\n        <button type="button" onclick="connect()" class="btn btn-primary float-end">Connect</button>\n      </div>\n    </div>\n  </div>\n</div>',resetSettings(!0)}async function loadAndConnect(){load_localStorage(),refreshData();const e=new Proxy(new URLSearchParams(window.location.search),{get:(e,t)=>e.get(t)});if(e.channel&&!USER.channel&&!USER.twitchLogin&&!USER.access_token&&!USER.userID){let t=e.channel.replace(/\s+/g,"").toLowerCase();elements.channelName.value=t,USER.channel=t,window.history.replaceState({},document.title,"/")}if(USER.twitchLogin&&!await checkToken(USER.access_token))return USER.channel="",void loginExpiredModal.show();USER.channel&&(connect(),elements.profileLink.value=`https://playlist.chat.vote/${USER.channel||""}`)}let updateCooldown,oldSliderValue,youtubePlayer,spotifyPlayer,twitchPlayer,botCooldown=Date.now();async function botReply(e,t,n){if(!USER.access_token||!PLAYLIST.enableBot||!t)return;if((Date.now()-botCooldown)/1e3<PLAYLIST.botCooldown&&n)return;botCooldown=Date.now();let o={method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({channel:USER.channel,id:t,msg:e,access_token:USER.access_token}),redirect:"follow"};try{let e=await fetch("https://api.chat.vote/reply",o);console.log(`botReply response: ${e.status}`)}catch(e){console.log("botReply error",e)}}async function updateSite(){clearTimeout(updateCooldown),USER.access_token&&(updateCooldown=setTimeout((()=>{updateSiteSend()}),3e3))}async function updateSiteSend(){let e=[];for(let t of requests.values())e.push(t);let t={method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({userid:USER.userID,username:USER.channel,access_token:USER.access_token,time:new Date,settings:PLAYLIST,playlist:e,currentitem:currentItem}),redirect:"follow"};try{let e=await fetch("https://playlist.chat.vote/update",t),n=await e.json();console.log(n)}catch(e){console.log("update error",e)}}function copyLink(){navigator.clipboard.writeText(`https://playlist.chat.vote/${USER.channel||""}`),copyLinkButton.show(),setTimeout((()=>{copyLinkButton.hide()}),1e3)}function switchTheme(e){document.documentElement.setAttribute("data-bs-theme",e?"dark":"light"),document.getElementById("twitchLogo").style.filter=`invert(${e?.25:.65})`,document.getElementById("btnGroupDrop1")&&document.getElementById("btnGroupDrop2")&&(document.getElementById("btnGroupDrop1").classList.remove(""+(e?"btn-secondary":"btn-dark")),document.getElementById("btnGroupDrop1").classList.add(""+(e?"btn-dark":"btn-secondary")),document.getElementById("btnGroupDrop2").classList.remove(""+(e?"btn-secondary":"btn-dark")),document.getElementById("btnGroupDrop2").classList.add(""+(e?"btn-dark":"btn-secondary")))}function toggleEveryone(e){elements.allowPlebs.checked=e,elements.allowSubs.checked=e,elements.allowMods.checked=e,elements.allowVips.checked=e,elements.allowFirstTimeChatters.checked=e}function updateWhoCanRequest(){let e={"Non subscribers":{allowed:PLAYLIST.allowPlebs,limit:PLAYLIST.plebLimit},Subscribers:{allowed:PLAYLIST.allowSubs,limit:PLAYLIST.subLimit},Mods:{allowed:PLAYLIST.allowMods,limit:PLAYLIST.modLimit},VIPs:{allowed:PLAYLIST.allowVips,limit:PLAYLIST.vipLimit},"First time chatters":{allowed:PLAYLIST.allowFirstTimeChatters,limit:PLAYLIST.firstTimeChatterLimit}},t=[],n=[],o=[];for(let[a,l]of Object.entries(e))if(l.allowed){t.push(a);let e=""===l.limit?"unlimited":l.limit;n.push(`${a} can make ${e} ${1==e?"request":"requests"}`),o.push(e)}0!=t.length?elements.whoCanRequest.innerHTML=`${1==t.length?"Only":""} ${5==t.length?"Everyone":t.join(", ")} will be able to request.<br>\n  ${o.every((e=>e===o[0]))?`${o.length==Object.keys(e).length?"Everyone":"Viewers that can request"} will get ${o[0]} ${1==o[0]?"request":"requests"}.`:n.join(" - ")}`:elements.whoCanRequest.innerHTML='<span class="text-danger">No one will be able to request</span>'}function checkCommands(){let e=[elements.requestCommand,elements.requestCommandAlias,elements.voteskipCommand,elements.voteskipCommandAlias,elements.songCommand,elements.songCommandAlias,elements.playlistCommand,elements.playlistCommandAlias,elements.openCommand,elements.closeCommand,elements.playCommand,elements.pauseCommand,elements.autoplayCommand,elements.skipCommand,elements.rewindCommand,elements.deleteCommand],t=e.map((e=>e.value.replace(/\s+/g,"").toLowerCase())),n=t.filter(((e,n)=>t.indexOf(e.replace(/\s+/g,"").toLowerCase())!==n)),o=e.filter((e=>n.includes(e.value.replace(/\s+/g,"").toLowerCase()))),a=!1;for(let e=0;e<o.length;e++)o[e].value=o[e].dataset.default,PLAYLIST[o[e].id]=o[e].dataset.default,a=!0;a&&showToast("Commands must be unique","warning",2e3)}function editRequestCommand(e=!1){settingsOffcanvas.show(),setTimeout((()=>{e?(elements.requestCommandAlias.focus(),elements.requestCommandAlias.select()):(elements.requestCommand.focus(),elements.requestCommand.select())}),500)}function toggleMute(){"volume_off"==elements.volumeSliderIcon.innerHTML?(0==oldSliderValue&&(elements.volumeSliderIcon.innerHTML="volume_mute"),oldSliderValue>0&&oldSliderValue<50&&(elements.volumeSliderIcon.innerHTML="volume_down"),oldSliderValue>=50&&(elements.volumeSliderIcon.innerHTML="volume_up"),elements.volumeSlider.value=oldSliderValue,elements.volumeSliderValue.innerHTML=oldSliderValue):(oldSliderValue=elements.volumeSlider.value,elements.volumeSliderIcon.innerHTML="volume_off",elements.volumeSlider.value=0,elements.volumeSliderValue.innerHTML=0)}function changeVolume(e){elements.volumeSliderValue.innerHTML=e.value,0==e.value&&(elements.volumeSliderIcon.innerHTML="volume_mute"),e.value>0&&e.value<50&&(elements.volumeSliderIcon.innerHTML="volume_down"),e.value>=50&&(elements.volumeSliderIcon.innerHTML="volume_up")}function togglePlaylist(){checkLogin()&&(playlist_open=!playlist_open,playlist_open?(elements.togglePlaylist.classList="btn btn-danger",elements.togglePlaylist.innerHTML="Close Playlist"):(elements.togglePlaylist.classList="btn btn-success",elements.togglePlaylist.innerHTML="Open Playlist"))}function openPlaylist(e){playlist_open?botReply("✅ The playlist already open",e,!1):(playlist_open=!0,elements.togglePlaylist.classList="btn btn-danger",elements.togglePlaylist.innerHTML="Close Playlist",botReply("✅ The playlist is now open",e,!1))}function closePlaylist(e){playlist_open?(playlist_open=!1,elements.togglePlaylist.classList="btn btn-success",elements.togglePlaylist.innerHTML="Open Playlist",botReply("⛔ The playlist is now closed",e,!1)):botReply("⛔ The playlist already closed",e,!1)}function playPlaylist(e){if(currentItem){switch(currentItem.type){case"youtube":case"youtube short":youtubePlayer.playVideo();break;case"spotify":spotifyPlayer.play();break;case"twitch stream":case"twitch vod":twitchPlayer.play();break;case"streamable":case"supa video":case"supa audio":elements.videoEmbed.play();break;default:break}e&&("twitch clip"==currentItem.type?botReply("⚠ Twitch clip playback can't be controlled",e,!1):botReply("▶ Playlist is now playing",e,!1))}else botReply("⚠ Nothing is playing",e,!1)}function pausePlaylist(e){if(currentItem){switch(currentItem.type){case"youtube":case"youtube short":youtubePlayer.pauseVideo();break;case"spotify":spotifyPlayer.pause();break;case"twitch stream":case"twitch vod":twitchPlayer.pause();break;case"streamable":case"supa video":case"supa audio":elements.videoEmbed.pause();break;default:break}e&&("twitch clip"==currentItem.type?botReply("⚠ Twitch clip playback can't be controlled",e,!1):botReply("⏸ Playlist is now paused",e,!1))}else botReply("⚠ Nothing is playing",e,!1)}function toggleAutoplay(e){let t=elements.autoplay.checked;elements.autoplay.checked=!t,botReply(`${t?"🚫":"✅"} autoplay is now ${t?"disabled":"enabled"}`,e,!1),saveSettings()}function onYouTubeIframeAPIReady(){console.log("onYouTubeIframeAPIReady"),youtubePlayer=new YT.Player("youtubeEmbed",{height:"100%",width:"100%",playerVars:{autoplay:1,enablejsapi:1,playsinline:1,fs:0,rel:0,origin:"chat.vote"},events:{onStateChange:youtubePlayerOnStateChange,onError:youtubePlayerOnError,onAutoplayBlocked:youtubePlayerOnAutoplayBlocked}})}function youtubePlayerOnStateChange(e){console.log(e),e.data==YT.PlayerState.ENDED&&PLAYLIST.autoplay&&nextItem()}function youtubePlayerOnError(e){console.log(e)}function youtubePlayerOnAutoplayBlocked(e){console.log(e)}function enableTwitchEmbed(){twitchPlayer=new Twitch.Player("twitchEmbed",{width:"100%",height:"100%",channel:"chatvote",parent:["chat.vote"]}),twitchPlayer.addEventListener(Twitch.Player.ENDED,(function(e){PLAYLIST.autoplay&&nextItem()})),twitchPlayer.addEventListener(Twitch.Player.PAUSE,(function(e){console.log(e)}))}function videoEmbedEventListeners(){elements.videoEmbed.addEventListener("ended",(e=>{PLAYLIST.autoplay&&nextItem()}))}window.onload=function(){darkTheme="true"===(localStorage.getItem("darkTheme")||"true"),elements.darkTheme.checked=darkTheme??!0,switchTheme(elements.darkTheme.checked),loadAndConnect(),loginExpiredModal=new bootstrap.Modal(elements.loginExpiredModal),resetSettingsModal=new bootstrap.Modal(elements.resetSettingsModal),clearPlaylistModal=new bootstrap.Modal(elements.clearPlaylistModal),settingsOffcanvas=new bootstrap.Offcanvas(elements.settingsOffcanvas),copyLinkButton=new bootstrap.Popover(elements.copyLinkButton),togglePlaylistPopover=new bootstrap.Popover(elements.togglePlaylist),playlistTab=new bootstrap.Tab(elements.playlistTab),approvalTab=new bootstrap.Tab(elements.approvalTab),historyTab=new bootstrap.Tab(elements.historyTab),USER.channel||(loginButton=new bootstrap.Popover(elements.loginButton)),elements.darkTheme.onchange=function(){switchTheme(this.checked),saveSettings()},elements.approvalQueue.onchange=function(){saveSettings(),elements.approvalTab.classList.contains("active")&&playlistTab.show()},elements.selectAll.addEventListener("click",(e=>{toggleEveryone(!0),saveSettings()})),elements.unselectAll.addEventListener("click",(e=>{toggleEveryone(!1),saveSettings()})),elements.link.addEventListener("keydown",(e=>{"Enter"===e.key&&addLink()})),elements.link.addEventListener("focus",(async function(){!streamerColor&&USER.userID&&(streamerColor=await getStreamerColor(USER.userID))})),"mediaSession"in navigator&&(navigator.mediaSession.setActionHandler("previoustrack",(()=>{previousItem()})),navigator.mediaSession.setActionHandler("nexttrack",(()=>{nextItem()}))),enableTooltips(),enableTwitchEmbed(),videoEmbedEventListeners()},window.onSpotifyIframeApiReady=e=>{console.log("onSpotifyIframeApiReady");e.createController(elements.spotifyEmbed,{},(e=>{spotifyPlayer=e,e.addListener("playback_update",(e=>{e.data.position==e.data.duration&&e.data.duration>0&&PLAYLIST.autoplay&&nextItem()}))}))};