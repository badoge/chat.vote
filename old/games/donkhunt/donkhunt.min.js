let loginButton,loginExpiredModal,aboutModal,voters=[],elements={grid:document.getElementById("grid"),gameDiv:document.getElementById("gameDiv"),loginExpiredModal:document.getElementById("loginExpiredModal"),aboutModal:document.getElementById("aboutModal"),status:document.getElementById("status"),topRight:document.getElementById("topRight"),loginButton:document.getElementById("loginButton"),channelName:document.getElementById("channelName"),darkTheme:document.getElementById("darkTheme"),toastContainer:document.getElementById("toastContainer")},darkTheme=!0,USER={channel:"",twitchLogin:!1,access_token:"",userID:"",platform:""};function handleMessage(e,t,n,a){let o=n.split(" ").filter(Boolean)[0].toLowerCase();voters.includes(t.username)||o in DONKHUNT.results&&(voters.push(t.username),DONKHUNT.results[o].data+=1,updateGraph())}function initGraph(){DONKHUNT.chart&&DONKHUNT.chart.destroy(),DONKHUNT.chart=new Chart(DONKHUNT.ctx,{type:"bar",data:{labels:[],datasets:[{label:"score",data:[],borderWidth:2}]},options:{indexAxis:"y",maintainAspectRatio:!1,scales:{x:{ticks:{textStrokeColor:"rgba(0,0,0,1)",textStrokeWidth:2,color:"white"},beginAtZero:!0},y:{ticks:{textStrokeColor:"rgba(0,0,0,1)",textStrokeWidth:3,color:"white",mirror:!0,font:{size:32},z:1},beginAtZero:!0}},plugins:{tooltip:{enabled:!1},legend:{display:!1}}}})}function updateGraph(){let e=Object.values(DONKHUNT.results),t=e.map((e=>`${e.label} - ${e.data} ${1==e.data?"vote":"votes"} (${Math.round(e.data/voters.length*100)||0}%)`)),n=e.map((e=>e.data)),a=e.map((e=>e.c1)),o=e.map((e=>e.c2));DONKHUNT.html.totalVotesCount.innerHTML=`Total votes: ${n.reduce(((e,t)=>e+t),0)}`,DONKHUNT.chart.data.labels=t,DONKHUNT.chart.data.datasets.forEach((e=>{e.data=n,e.backgroundColor=a,e.borderColor=o})),DONKHUNT.chart.update()}window.onload=function(){darkTheme="true"===(localStorage.getItem("darkTheme")||"true"),elements.darkTheme.checked=darkTheme??!0,switchTheme(elements.darkTheme.checked),loadAndConnect(),USER.channel||(loginButton=new bootstrap.Popover(elements.loginButton)),loginExpiredModal=new bootstrap.Modal(elements.loginExpiredModal),aboutModal=new bootstrap.Modal(elements.aboutModal),enableTooltips(),enablePopovers(),elements.channelName.addEventListener("keydown",(e=>{"Enter"===e.key&&connect()})),elements.darkTheme.onchange=function(){switchTheme(this.checked),saveSettings()},initGraph(),DONKHUNT.listeners()};class HuntUnit{constructor(e,t,n){if(!["hunter","target"].includes(e))throw new Error("Invalid type: "+e);this.type=e,this.cell=n,this.row=t}moveTo(e,t){console.log(`Action: move ${this.type} to [${e},${t}]`),DONKHUNT.field[this.row][this.cell]="",this.cell=t,this.row=e,DONKHUNT.field[this.row][this.cell]=this.type}getLocation(){return[this.row,this.cell]}}class HuntHunter extends HuntUnit{constructor(e,t,n=""){super("hunter",e,t),this.marker=n}isAbleToMove(){switch(this.row){case 0:return!1;case 1:return""===DONKHUNT.field[0][1];default:return""===DONKHUNT.field[this.row-1][this.cell]}}getValidMoveList(){if(!this.isAbleToMove())return[];switch(this.row){case 1:return[0,1];default:return[this.row-1,this.cell]}}}class HuntTarget extends HuntUnit{constructor(e,t){super("target",e,t)}getValidMoveList(){const e=[];switch(this.row){case 0:DONKHUNT.field[1].forEach(((t,n)=>e.push([1,n])));break;default:this.cell>0&&e.push([this.row,this.cell-1]),this.cell<2&&e.push([this.row,this.cell+1]),e.push([this.row+1,this.cell]),e.push([this.row-1,this.cell]),1===this.row&&e.push([0,1])}return e.filter((e=>""===DONKHUNT.field[e[0]][e[1]]))}}let DONKHUNT={consts:{ARROWS_MAP:{up:"↑",down:"↓",right:"→",left:"←"},MEGALUL:'<img src="/games/pics/megalul.png" alt="MEGALUL" class="icon">',DONK:'<img src="/games/pics/donk.png" alt="Donk" class="icon">',FEELSDONKMAN:'<img src="/games/pics/feelsdonkman.png" alt="FeelsDonkMan" class="icon">',CLAP:'<img src="/games/pics/clap.gif" alt="Clap" class="icon">',KNIFE:'<img src="/games/pics/forsenknife.png" alt="Knife" class="icon">',FORSENO:'<img src="/games/pics/forseno.png" alt="Real Forsen" class="icon">'},html:{fieldRows:Array.from(document.querySelectorAll("div#dhfield div.dh-field-row")).map((e=>Array.from(e.querySelectorAll("div.dh-field-cell")))),allSettingControls:Array.from(document.querySelectorAll(".dhsettings")),startBtn:document.querySelector("#startdh"),gameResult:{h2:document.querySelector(".dhgameResult h2"),h4:document.querySelector(".dhgameResult h4"),_all:Array.from(document.querySelectorAll(".dhgameResult"))},status:document.querySelector("#adviceFriend"),chartDiv:document.getElementById("dhchartdiv"),totalVotesCount:document.getElementById("totalvotesdh")},ctx:document.getElementById("dhchartCanvas").getContext("2d"),chart:null,results:{},colors:["#f44336","#f4c236","#a8f436","#4336f4"],game:{hunters:[new HuntHunter(3,0,"1"),new HuntHunter(3,1,"2"),new HuntHunter(3,2,"3")],target:new HuntTarget(2,0),turn:0,active:!1},player:{move1:null,side:null},settings:{dhplayer:"target",dhfirst:"player"},field:[["wall","","wall"],["","",""],["","",""],["","",""],["","",""]],functions:{getHunterReference:function(e,t){let n=null;return DONKHUNT.game.hunters.forEach((a=>{a.row===e&&a.cell===t&&(n=a)})),n||console.warn(`Cell [${e}, ${t}] does not correspond to any Hunter!`),n},whoGoes:function(){return DONKHUNT.game.turn%2?"hunter":"target"},resetField:function(){DONKHUNT.field[0][1]="",[1,2,3].forEach((e=>DONKHUNT.field[e].forEach(((e,t,n)=>n[t]="")))),DONKHUNT.game.hunters.forEach(((e,t)=>e.moveTo(3,t))),DONKHUNT.game.target.moveTo(2,1)},drawField:function(e=!1){if(DONKHUNT.html.fieldRows.forEach(((t,n)=>{t.forEach(((t,a)=>{t.classList.toggle("dh-p-wall","wall"===DONKHUNT.field[n][a]),t.classList.toggle("dh-p-hunter","hunter"===DONKHUNT.field[n][a]),t.classList.toggle("dh-p-target","target"===DONKHUNT.field[n][a]),t.classList.remove("dh-event-target"),e&&(t.classList.remove("dh-field-winpath"),t.classList.remove("dh-p-invert"))}))})),DONKHUNT.game.hunters.forEach((e=>{e.cell>DONKHUNT.game.target.cell&&DONKHUNT.html.fieldRows[e.row][e.cell].classList.add("dh-p-invert"),e.cell<DONKHUNT.game.target.cell&&DONKHUNT.html.fieldRows[e.row][e.cell].classList.remove("dh-p-invert")})),DONKHUNT.game.active&&DONKHUNT.functions.whoGoes()===DONKHUNT.player.side)switch(DONKHUNT.player.side){case"hunter":let e=0;DONKHUNT.game.hunters.forEach((t=>{t.isAbleToMove()&&(DONKHUNT.html.fieldRows[t.row][t.cell].classList.add("dh-event-target"),e+=1),t.cell>DONKHUNT.game.target.cell&&DONKHUNT.html.fieldRows[t.row][t.cell].classList.add("dh-p-invert"),t.cell<DONKHUNT.game.target.cell&&DONKHUNT.html.fieldRows[t.row][t.cell].classList.remove("dh-p-invert")})),e<1&&setTimeout((()=>{showToast("Hunters have no valid moves! Skipping turn.","warning",3e3),DONKHUNT.functions.turn(1)}),50);break;case"target":DONKHUNT.game.target.getValidMoveList().forEach((e=>{DONKHUNT.html.fieldRows[e[0]][e[1]].classList.add("dh-event-target")}));break}},turn:function(e=0){if(DONKHUNT.game.turn+=e,DONKHUNT.game.target.getValidMoveList().length<1)DONKHUNT.functions.endGame("hunter","Target is surrounded and has no way to escape!");else{let e=!0;for(let t=DONKHUNT.game.target.row+1;t<DONKHUNT.field.length;t++)DONKHUNT.field[t][DONKHUNT.game.target.cell]&&(e=!1);if(e){for(let e=DONKHUNT.game.target.row;e<DONKHUNT.field.length;e++)DONKHUNT.html.fieldRows[e][DONKHUNT.game.target.cell].classList.add("dh-field-winpath");DONKHUNT.html.fieldRows[DONKHUNT.field.length-1][1].classList.add("dh-field-winpath"),DONKHUNT.functions.endGame("target","Target found a way to escape!")}}if(DONKHUNT.game.active){if(DONKHUNT.player.side===DONKHUNT.functions.whoGoes())switch(DONKHUNT.html.chartDiv.classList.add("blur"),DONKHUNT.functions.whoGoes()){case"hunter":DONKHUNT.html.status.innerHTML=`Click on a ${DONKHUNT.consts.MEGALUL} to move it forward.`;break;case"target":DONKHUNT.html.status.innerHTML=`Move ${DONKHUNT.consts.DONK} by clicking on a free cell.`;break}else DONKHUNT.html.status.innerText="Please wait until chat decides on next move.",DONKHUNT.html.chartDiv.classList.remove("blur"),DONKHUNT.results=DONKHUNT.functions.buildChatOptions();DONKHUNT.functions.drawField(DONKHUNT.game.turn<2),updateGraph()}else DONKHUNT.html.status.innerText='Press "Start new game" to begin'},endGame:function(e,t){switch(e){case"hunter":DONKHUNT.html.gameResult.h2.innerHTML=`${DONKHUNT.consts.FORSENO}${DONKHUNT.consts.KNIFE} Hunters win!`,DONKHUNT.html.gameResult.h4.innerText=t;break;case"target":DONKHUNT.html.gameResult.h2.innerHTML=`${DONKHUNT.consts.FEELSDONKMAN}${DONKHUNT.consts.CLAP} Target wins!`,DONKHUNT.html.gameResult.h4.innerText=t;break;default:DONKHUNT.html.gameResult.h2.innerHTML=`${DONKHUNT.consts.DONK} Wait, what?`,DONKHUNT.html.gameResult.h4.innerText=t||"Something went wrong, this should never happen.";break}DONKHUNT.html.gameResult._all.forEach((e=>e.style.visibility="visible")),DONKHUNT.html.allSettingControls.forEach((e=>e.disabled=!1)),DONKHUNT.game.active=!1,DONKHUNT.functions.drawField(),DONKHUNT.html.chartDiv.classList.add("blur")},emulateOpponentAction:function(){switch(DONKHUNT.functions.whoGoes()){case"hunter":const e=DONKHUNT.game.hunters.filter((e=>e.isAbleToMove()));if(e.length){let t=Math.floor(Math.random()*e.length);e[t].row>1?e[t].moveTo(e[t].row-1,e[t].cell):e[t].moveTo(0,1)}else console.warn("Bot: Hunters cannot move!"),showToast("Hunters have no valid moves - they skip their turn.","warning",3e3);break;case"target":const t=DONKHUNT.game.target.getValidMoveList();if(!t.length)return void console.warn("Bot: Target has nowhere to move!");let n=Math.floor(Math.random()*t.length);DONKHUNT.game.target.moveTo(t[n][0],t[n][1]);break}DONKHUNT.functions.turn(1)},buildChatOptions:function(){const e={};switch(DONKHUNT.player.side){case"hunter":{const t=["left","up","right","down"],n=DONKHUNT.game.target.getValidMoveList(),a=DONKHUNT.game.target.getLocation(),o=n.map((e=>e.map(((e,t)=>e-a[t]))));switch(a[0]){case 0:for(let t=0;t<o.length;t++){const a=o[t];if(a[0]>0)switch(a[1]){case 0:e.down=n[t];break;case-1:e.left=n[t];break;case 1:e.right=n[t];break}}break;default:for(let t=0;t<o.length;t++){const a=o[t];0!==a[0]?e[a[0]>0?"down":"up"]=n[t]:e[a[1]>0?"right":"left"]=n[t]}break}for(const n in e){const a=DONKHUNT.colors[t.indexOf(n)],o=e[n];e[n]={label:n,data:0,c1:a,c2:a,_chosenCell:o},DONKHUNT.html.fieldRows[o[0]][o[1]].innerHTML=`<b>${DONKHUNT.consts.ARROWS_MAP[n]}</b>`}break}case"target":{let t=0;DONKHUNT.game.hunters.forEach(((n,a)=>{if(n.isAbleToMove()){const o=DONKHUNT.colors[a];e[n.marker]={label:n.marker,data:0,c1:o,c2:o,_chosenUnit:a},t+=1,DONKHUNT.html.fieldRows[n.row][n.cell].innerHTML=`<b>${n.marker}</b>`}})),t<1&&setTimeout((()=>{showToast("Hunters have no valid moves! Skipping turn.","warning",3e3),DONKHUNT.functions.turn(1)}),50)}}return e}},start:function(){DONKHUNT.html.gameResult._all.forEach((e=>e.style.visibility="hidden")),DONKHUNT.html.allSettingControls.forEach((e=>e.disabled=!0)),DONKHUNT.functions.resetField(),DONKHUNT.game.turn=0,DONKHUNT.player.side=DONKHUNT.settings.dhplayer,DONKHUNT.game.active=!0,console.log("Hunt: game has begun.");const e="player"===DONKHUNT.settings.dhfirst!=("target"===DONKHUNT.settings.dhplayer);DONKHUNT.functions.turn(Number(e))},reset:function(){DONKHUNT.html.gameResult._all.forEach((e=>e.style.visibility="hidden")),DONKHUNT.html.allSettingControls.forEach((e=>e.disabled=!1)),DONKHUNT.game.active=!1,DONKHUNT.functions.resetField(),DONKHUNT.functions.drawField()},playTurn:function(){if(voters.length<1)return;voters.length=0,DONKHUNT.html.chartDiv.classList.add("blur"),DONKHUNT.html.totalVotesCount.innerHTML="Total votes: 0";let e={data:-1};for(const t in DONKHUNT.results){const n=DONKHUNT.results[t];e.data<n.data&&(e=n)}DONKHUNT.results={},updateGraph();for(const e of DONKHUNT.html.fieldRows)for(const t of e)t.innerHTML="";switch(DONKHUNT.functions.whoGoes()){case"hunter":{const t=DONKHUNT.game.hunters;let n=e._chosenUnit;t[n].row>1?t[n].moveTo(t[n].row-1,t[n].cell):t[n].moveTo(0,1);break}case"target":{const t=e._chosenCell;DONKHUNT.game.target.moveTo(t[0],t[1]);break}}DONKHUNT.functions.turn(1)},listeners:function(){DONKHUNT.html.fieldRows.forEach((e=>e.forEach((e=>e.addEventListener("click",(function(e){if(!DONKHUNT.game.active)return void console.debug("Click ignored: game has not started yet.");if(!e.target.classList.contains("dh-event-target"))return void console.debug("Click ignored: target is not defined as a valid playmove cell.");if(DONKHUNT.player.side!=DONKHUNT.functions.whoGoes())return void console.debug("Click ignored: it is not player's turn to act.");const t={row:parseInt(e.target.parentNode.dataset.rowcount,10),cell:parseInt(e.target.dataset.colcount,10)};switch(DONKHUNT.field[t.row][t.cell]){case"hunter":const e=DONKHUNT.functions.getHunterReference(t.row,t.cell);if(!e.isAbleToMove())return void console.debug("Click ignored: Hunter cannot move!");e.row>1?e.moveTo(e.row-1,e.cell):e.moveTo(0,1);break;default:DONKHUNT.game.target.getValidMoveList().forEach((e=>{e[0]==t.row&&e[1]==t.cell&&DONKHUNT.game.target.moveTo(e[0],e[1])}));break}DONKHUNT.functions.turn(1)}))))));const e=function(e){const t=e.target,n=t.name,a=t.value;DONKHUNT.settings[n]=a};DONKHUNT.html.allSettingControls.forEach((t=>{t.checked=DONKHUNT.settings[t.name]===t.value,t.addEventListener("change",e)}))}};