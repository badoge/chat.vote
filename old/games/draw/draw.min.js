let loginButton,loginExpiredModal,aboutModal,settingsOffcanvas,timer,allEmotes={twitchGlobal:[],bttvGlobal:[],ffzGlobal:[],seventvGlobal:[],twitch:[],bttv:[],ffz:[],seventv:[],emoji:[]},elements={grid:document.getElementById("grid"),gameDiv:document.getElementById("gameDiv"),loginExpiredModal:document.getElementById("loginExpiredModal"),aboutModal:document.getElementById("aboutModal"),status:document.getElementById("status"),topRight:document.getElementById("topRight"),loginButton:document.getElementById("loginButton"),channelName:document.getElementById("channelName"),darkTheme:document.getElementById("darkTheme"),toastContainer:document.getElementById("toastContainer"),drawemotecardbody:document.getElementById("drawemotecardbody"),drawoutput:document.getElementById("drawoutput"),drawlblist:document.getElementById("drawlblist"),twitchGlobal:document.getElementById("twitchGlobal"),bttvGlobal:document.getElementById("bttvGlobal"),ffzGlobal:document.getElementById("ffzGlobal"),seventvGlobal:document.getElementById("seventvGlobal"),twitch:document.getElementById("twitch"),bttv:document.getElementById("bttv"),ffz:document.getElementById("ffz"),seventv:document.getElementById("seventv"),emoji:document.getElementById("emoji"),drawscoring1:document.getElementById("drawscoring1"),drawscoring2:document.getElementById("drawscoring2"),turnLength:document.getElementById("turnLength"),timerReveal:document.getElementById("timerReveal"),points:document.getElementById("points"),pointsTarget:document.getElementById("pointsTarget"),twitchGlobalCount:document.getElementById("twitchGlobalCount"),bttvGlobalCount:document.getElementById("bttvGlobalCount"),ffzGlobalCount:document.getElementById("ffzGlobalCount"),seventvGlobalCount:document.getElementById("seventvGlobalCount"),emojiCount:document.getElementById("emojiCount"),twitchCount:document.getElementById("twitchCount"),bttvCount:document.getElementById("bttvCount"),ffzCount:document.getElementById("ffzCount"),seventvCount:document.getElementById("seventvCount"),color:document.getElementById("color"),LineWidth:document.getElementById("LineWidth"),LineWidthLabel:document.getElementById("LineWidthLabel"),clearCanvas:document.getElementById("clearCanvas"),redo:document.getElementById("redo"),undo:document.getElementById("undo"),settingsOffcanvas:document.getElementById("settingsOffcanvas"),countdown:document.getElementById("countdown"),countdownValue:document.getElementById("countdownValue")},darkTheme=!0,USER={channel:"",twitchLogin:!1,access_token:"",userID:"",platform:""},DRAW={gameActive:!1,answer:"",answerURL:"",answerDesc:"",turn:0,winner:null,canvas:null,redo_list:[],undo_list:[],state:null,twitchGlobal:!1,bttvGlobal:!1,ffzGlobal:!1,seventvGlobal:!1,twitch:!1,bttv:!1,ffz:!1,seventv:!1,emoji:!1,firstOnly:!1,turnLength:0,timerReveal:!1,points:10,pointsTarget:100,correctUsers:0,users:{},usedEmotes:[]};async function start(){let e=[];if(DRAW.twitchGlobal&&allEmotes.twitchGlobal.forEach((t=>{e.push(t)})),DRAW.bttvGlobal&&allEmotes.bttvGlobal.forEach((t=>{e.push(t)})),DRAW.ffzGlobal&&allEmotes.ffzGlobal.forEach((t=>{e.push(t)})),DRAW.seventvGlobal&&allEmotes.seventvGlobal.forEach((t=>{e.push(t)})),DRAW.twitch&&allEmotes.twitch.forEach((t=>{e.push(t)})),DRAW.bttv&&allEmotes.bttv.forEach((t=>{e.push(t)})),DRAW.ffz&&allEmotes.ffz.forEach((t=>{e.push(t)})),DRAW.seventv&&allEmotes.seventv.forEach((t=>{e.push(t)})),DRAW.emoji&&allEmotes.emoji.forEach((t=>{e.push(t)})),DRAW.usedEmotes.forEach((t=>{e=e.filter((e=>e.name!==t))})),e.length<2)return showToast("Not enough emotes selected","warning",3e3),void settingsOffcanvas.show();let t=e[Math.floor(Math.random()*e.length)];elements.drawemotecardbody.innerHTML=`\n  ${"emoji"==t.url?t.name:`<img src="${t.url}" alt="${t.name}" title="${t.name}" class="draw-emote">`}<br>\n  ${"emoji"==t.url?t.desc:t.name}`,"emoji"==t.url&&twemoji.parse(elements.drawemotecardbody),DRAW.answer=t.name,DRAW.answerURL=t.url,DRAW.answerDesc=t.desc,DRAW.usedEmotes.push(t.name),DRAW.canvas.clear(),elements.drawoutput.innerHTML="",DRAW.winner=null,DRAW.correctUsers=0,startTimer(),DRAW.turn++,DRAW.gameActive=!0}function correct(e){if(DRAW.correctUsers>=DRAW.points)return showToast("No more points left; starting new round","warning",3e3),void start();if(DRAW.users[e.username]){if(DRAW.users[e.username].lastTurn==DRAW.turn)return;if(DRAW.firstOnly&&!DRAW.winner)DRAW.users[e.username].score+=DRAW.points,DRAW.users[e.username].lastTurn=DRAW.turn,DRAW.correctUsers++;else{if(DRAW.firstOnly)return;DRAW.users[e.username].score+=DRAW.points-DRAW.correctUsers,DRAW.users[e.username].lastTurn=DRAW.turn,DRAW.correctUsers++}}else{let t=e.username==e.displayname.toLowerCase()?`${e.displayname}`:`${e.displayname} (${e.username})`,n=e.color?e.color:"#FFFFFF",s=addBadges(e.badges,e.id,e.firstmsg);if(DRAW.firstOnly&&!DRAW.winner)e.score=DRAW.points,e.lastTurn=DRAW.turn,e.badges=s,e.name=t,e.color=n,DRAW.users[e.username]=e,DRAW.correctUsers++;else{if(DRAW.firstOnly)return;e.score=DRAW.points-DRAW.correctUsers,e.lastTurn=DRAW.turn,e.badges=s,e.name=t,e.color=n,DRAW.users[e.username]=e,DRAW.correctUsers++}}let t="";Object.keys(DRAW.users).sort((function(e,t){return DRAW.users[t].score-DRAW.users[e].score})).forEach((e=>{t+=`<li id="${DRAW.users[e].name}_draw" class="list-group-item">${DRAW.users[e].badges}<span style="color:${DRAW.users[e].color};"> ${DRAW.users[e].name}</span>: ${DRAW.users[e].score} point </li>`})),elements.drawlblist.innerHTML=t,DRAW.winner||(DRAW.winner=e.username,DRAW.timerReveal&&!DRAW.firstOnly||(elements.drawoutput.innerHTML=`\n      <div class="card border-success">\n      <div class="card-body">\n      <h4>${e.username} was the first to get it right</h4><br>\n      ${"emoji"==DRAW.answerURL?DRAW.answer:`<img src="${DRAW.answerURL}" alt="${DRAW.answer}" title="${DRAW.answer}" class="draw-emote">`}<br>\n      ${"emoji"==DRAW.answerURL?DRAW.answerDesc:DRAW.answer}<br>\n      <button type="button" onclick="start()" class="btn btn-success"><i class="material-icons notranslate">navigate_next</i>Next round</button>\n      </div>\n      </div>`,"emoji"==DRAW.answerURL&&twemoji.parse(elements.drawoutput),stopTimer())),DRAW.users[e.username].score>=DRAW.pointsTarget&&(elements.drawoutput.innerHTML=`\n  <div class="card border-success">\n  <div class="card-body">\n  <h4>Game over! ${e.username} Won by reaching the points target (${DRAW.pointsTarget})</h4><br>\n  ${"emoji"==DRAW.answerURL?DRAW.answer:`<img src="${DRAW.answerURL}" alt="${DRAW.answer}" title="${DRAW.answer}" class="draw-emote">`}<br>\n  ${"emoji"==DRAW.answerURL?DRAW.answerDesc:DRAW.answer}<br>\n  <button type="button" onclick="reset(true)" class="btn btn-warning"><i class="material-icons notranslate">replay</i>Play again</button>\n  </div>\n  </div>`,"emoji"==DRAW.answerURL&&twemoji.parse(elements.drawoutput),stopTimer(),DRAW.gameActive=!1)}function reset(e=!1){DRAW.gameActive=!1,DRAW.turn=0,DRAW.correctUsers=0,DRAW.answer="",elements.drawemotecardbody.innerHTML='<span style="font-size: 4vh;">Place your facecam here<br><i class="material-icons notranslate" style="font-size: 6vh;">photo_camera</i></span>',DRAW.canvas.clear(),DRAW.redo_list=[],DRAW.undo_list=[],DRAW.users={},DRAW.state=null,elements.drawlblist.innerHTML="",elements.drawoutput.innerHTML="",stopTimer(),e?start():(DRAW.firstOnly=!1,DRAW.turnLength=0,DRAW.timerReveal=!1,DRAW.points=10,DRAW.pointsTarget=100,elements.drawscoring1.checked=!0,elements.turnLength.value=0,elements.timerReveal.checked=DRAW.timerReveal,elements.points.value=10,elements.pointsTarget.value=100,DRAW.twitchGlobal=!1,DRAW.bttvGlobal=!1,DRAW.ffzGlobal=!1,DRAW.seventvGlobal=!1,DRAW.twitch=!1,DRAW.bttv=!1,DRAW.ffz=!1,DRAW.seventv=!1,DRAW.emoji=!1,elements.twitchGlobal.checked=!1,elements.bttvGlobal.checked=!1,elements.ffzGlobal.checked=!1,elements.seventvGlobal.checked=!1,elements.twitch.checked=!1,elements.bttv.checked=!1,elements.ffz.checked=!1,elements.seventv.checked=!1,elements.emoji.checked=!1,DRAW.usedEmotes=[])}function changeColor(){DRAW.canvas.freeDrawingBrush.color=this.value,elements.color.value=this.value;let e=document.getElementsByClassName("brushsvg");Array.from(e).forEach((e=>{e.style.fill=this.value}))}function changeBrush(e){DRAW.canvas.freeDrawingBrush.width=parseInt(e.value,10)||1,elements.LineWidth.value=parseInt(e.value,10)||1,elements.LineWidthLabel.innerHTML=parseInt(e.value,10)||1}function replay(e,t,n,s){t.push(DRAW.state),DRAW.state=e.pop();let a=elements[n],o=elements[s.id];a.disabled=!0,o.disabled=!0,DRAW.canvas.clear(),DRAW.canvas.loadFromJSON(DRAW.state,(function(){DRAW.canvas.renderAll(),a.disabled=!1,e.length&&(o.disabled=!1)}))}function save(){DRAW.redo_list=[],elements.redo.disabled=!0,DRAW.state&&(DRAW.undo_list.push(DRAW.state),elements.undo.disabled=!1),DRAW.state=JSON.stringify(DRAW.canvas)}function handleMessage(e,t,n,s){n.trim()===DRAW.answer&&DRAW.gameActive&&correct({id:t["user-id"],username:t.username,displayname:t["display-name"],color:t.color,badges:t.badges,firstmsg:t["first-msg"]})}function startTimer(){isNaN(DRAW.turnLength)||0==DRAW.turnLength||(timer&&timer.isRunning()&&(timer.reset(),timer.stop()),timer=new easytimer.Timer,timer.addEventListener("secondTenthsUpdated",(function(e){elements.countdownValue.innerHTML=timer.getTimeValues().toString(["minutes","seconds","secondTenths"])})),timer.addEventListener("targetAchieved",(function(e){elements.countdown.style.display="none",timer.reset(),timer.stop(),(DRAW.timerReveal&&DRAW.winner||!elements.drawoutput.innerHTML)&&(elements.drawoutput.innerHTML=`\n      <div class="card border-success">\n      <div class="card-body">\n      <h4>${DRAW.winner} was the first to get it right</h4><br>\n      ${"emoji"==DRAW.answerURL?DRAW.answer:`<img src="${DRAW.answerURL}" alt="${DRAW.answer}" title="${DRAW.answer}" class="draw-emote">`}<br>\n      ${"emoji"==DRAW.answerURL?DRAW.answerDesc:DRAW.answer}<br>\n      <button type="button" onclick="start()" class="btn btn-success"><i class="material-icons notranslate">navigate_next</i>Next round</button>\n      </div>\n      </div>`,"emoji"==DRAW.answerURL&&twemoji.parse(elements.drawoutput)),DRAW.winner||(elements.drawoutput.innerHTML=`\n      <div class="card border-danger">\n      <div class="card-body">\n      <h4>No one got the emote</h4><br>\n      ${"emoji"==DRAW.answerURL?DRAW.answer:`<img src="${DRAW.answerURL}" alt="${DRAW.answer}" title="${DRAW.answer}" class="draw-emote">`}<br>\n      ${"emoji"==DRAW.answerURL?DRAW.answerDesc:DRAW.answer}<br>\n      <button type="button" onclick="start()" class="btn btn-success"><i class="material-icons notranslate">navigate_next</i>Next round</button>\n      </div>\n      </div>`,"emoji"==DRAW.answerURL&&twemoji.parse(elements.drawoutput))})),elements.countdownValue.innerHTML=timer.getTimeValues().toString(["minutes","seconds","secondTenths"]),elements.countdown.style.display="",timer.start({countdown:!0,precision:"secondTenths",startValues:{seconds:DRAW.turnLength}}))}function stopTimer(){timer&&timer.isRunning()&&(timer.reset(),timer.stop()),elements.countdown.style.display="none"}window.onload=async function(){darkTheme="true"===(localStorage.getItem("darkTheme")||"true"),elements.darkTheme.checked=darkTheme??!0,switchTheme(elements.darkTheme.checked),loadAndConnect(),USER.channel||(loginButton=new bootstrap.Popover(elements.loginButton)),loginExpiredModal=new bootstrap.Modal(elements.loginExpiredModal),aboutModal=new bootstrap.Modal(elements.aboutModal),settingsOffcanvas=new bootstrap.Offcanvas(elements.settingsOffcanvas),enableTooltips(),enablePopovers(),elements.channelName.addEventListener("keydown",(e=>{"Enter"===e.key&&connect()})),elements.darkTheme.onchange=function(){switchTheme(this.checked),saveSettings()},DRAW.canvas=new fabric.Canvas("canvas",{isDrawingMode:!0}),DRAW.canvas.on("mouse:up",(function(){save()})),elements.undo.addEventListener("click",(function(){replay(DRAW.undo_list,DRAW.redo_list,"redo",this)})),elements.redo.addEventListener("click",(function(){replay(DRAW.redo_list,DRAW.undo_list,"undo",this)})),fabric.Object.prototype.transparentCorners=!1,elements.clearCanvas.onclick=function(){DRAW.canvas.clear()},elements.color.oninput=function(){let e=DRAW.canvas.freeDrawingBrush;e.color=this.value,e.width=parseInt(elements.LineWidth.value,10)||1;let t=document.getElementsByClassName("brushsvg");Array.from(t).forEach((e=>{e.style.fill=parseInt(this.value,10)}))},elements.LineWidth.oninput=function(){elements.LineWidthLabel.innerHTML=this.value,DRAW.canvas.freeDrawingBrush.width=parseInt(this.value,10)||1,this.previousSibling.innerHTML=parseInt(this.value,10)},DRAW.canvas.freeDrawingBrush&&(DRAW.canvas.freeDrawingBrush.color=elements.color.value,DRAW.canvas.freeDrawingBrush.width=parseInt(elements.LineWidth.value,10)||1);let e=document.getElementsByClassName("colorpreset");Array.from(e).forEach((function(e){e.addEventListener("click",changeColor)})),elements.twitchGlobal.onchange=function(){DRAW.twitchGlobal=this.checked},elements.bttvGlobal.onchange=function(){DRAW.bttvGlobal=this.checked},elements.ffzGlobal.onchange=function(){DRAW.ffzGlobal=this.checked},elements.seventvGlobal.onchange=function(){DRAW.seventvGlobal=this.checked},elements.twitch.onchange=function(){DRAW.twitch=this.checked},elements.bttv.onchange=function(){DRAW.bttv=this.checked},elements.ffz.onchange=function(){DRAW.ffz=this.checked},elements.seventv.onchange=function(){DRAW.seventv=this.checked},elements.emoji.onchange=function(){DRAW.emoji=this.checked},elements.turnLength.onchange=function(){DRAW.turnLength=parseInt(this.value,10)},elements.timerReveal.onchange=function(){DRAW.timerReveal=this.checked},elements.drawscoring1.onchange=function(){DRAW.firstOnly=!this.checked},elements.drawscoring2.onchange=function(){DRAW.firstOnly=this.checked},elements.points.onchange=function(){DRAW.points=parseInt(this.value,10)},elements.pointsTarget.onchange=function(){DRAW.pointsTarget=parseInt(this.value,10)},allEmotes.twitchGlobal=await getGlobalTwitchEmotes(!0),allEmotes.bttvGlobal=await getGlobalBTTVEmotes(!0),allEmotes.ffzGlobal=await getGlobalFFZEmotes(!0),allEmotes.seventvGlobal=await getGlobal7TVEmotes(!0),allEmotes.emoji=await getEmoji(),elements.twitchGlobalCount.innerHTML=`<br>${allEmotes.twitchGlobal.length} emotes`,elements.bttvGlobalCount.innerHTML=`<br>${allEmotes.bttvGlobal.length} emotes`,elements.ffzGlobalCount.innerHTML=`<br>${allEmotes.ffzGlobal.length} emotes`,elements.seventvGlobalCount.innerHTML=`<br>${allEmotes.seventvGlobal.length} emotes`,elements.emojiCount.innerHTML=`<br>${allEmotes.emoji.length} emoji`,USER.channel&&(allEmotes.twitch=await getChannelTwitchEmotes(USER.channel,!0),allEmotes.bttv=await getChannelBTTVEmotes(USER.userID,!0),allEmotes.ffz=await getChannelFFZEmotes(USER.userID,!0),allEmotes.seventv=await getChannel7TVEmotes(USER.userID,!0),elements.twitchCount.innerHTML=`<br>${allEmotes.twitch.length} emotes`,elements.bttvCount.innerHTML=`<br>${allEmotes.bttv.length} emotes`,elements.ffzCount.innerHTML=`<br>${allEmotes.ffz.length} emotes`,elements.seventvCount.innerHTML=`<br>${allEmotes.seventv.length} emotes`)};