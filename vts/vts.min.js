const icon="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";let client,EventSub,apiClient,loginButton,connectVTSModal,resetModal,addCommandModal,addExistingRewardModal,createNewRewardModal,editCommandModal,editRewardModal,confirmDeletionModal,loginExpiredModal,addSubAlertModal,editSubAlertModal,addGiftedSubAlertModal,editGiftedSubAlertModal,addBitsAlertModal,editBitsAlertModal,addRewardModal,youtubeModal,YT_STREAM_ID,YT_CHAT_ID,readChatTimeout,elements={connectVTSModal:document.getElementById("connectVTSModal"),resetModal:document.getElementById("resetModal"),addCommandModal:document.getElementById("addCommandModal"),addExistingRewardModal:document.getElementById("addExistingRewardModal"),createNewRewardModal:document.getElementById("createNewRewardModal"),editCommandModal:document.getElementById("editCommandModal"),editRewardModal:document.getElementById("editRewardModal"),confirmDeletionModal:document.getElementById("confirmDeletionModal"),loginExpiredModal:document.getElementById("loginExpiredModal"),addSubAlertModal:document.getElementById("addSubAlertModal"),editSubAlertModal:document.getElementById("editSubAlertModal"),addGiftedSubAlertModal:document.getElementById("addGiftedSubAlertModal"),editGiftedSubAlertModal:document.getElementById("editGiftedSubAlertModal"),addBitsAlertModal:document.getElementById("addBitsAlertModal"),editBitsAlertModal:document.getElementById("editBitsAlertModal"),addRewardModal:document.getElementById("addRewardModal"),youtubeModal:document.getElementById("youtubeModal"),modal9footer:document.getElementById("modal9footer"),modal9body:document.getElementById("modal9body"),youtubeModalBody:document.getElementById("youtubeModalBody"),youtubeModalTitle:document.getElementById("youtubeModalTitle"),port:document.getElementById("port"),commandName:document.getElementById("commandName"),commandNameEdit:document.getElementById("commandNameEdit"),commandCooldown:document.getElementById("commandCooldown"),commandCooldownEdit:document.getElementById("commandCooldownEdit"),addCommandSubmit:document.getElementById("addCommandSubmit"),modal7body:document.getElementById("modal7body"),modal7footer:document.getElementById("modal7footer"),addRewardSubmit:document.getElementById("addRewardSubmit"),newRewardName:document.getElementById("newRewardName"),newRewardDesc:document.getElementById("newRewardDesc"),newRewardCost:document.getElementById("newRewardCost"),newRewardColor:document.getElementById("newRewardColor"),newRewardCooldown:document.getElementById("newRewardCooldown"),newRewardCooldownUnit:document.getElementById("newRewardCooldownUnit"),newRewardLimit:document.getElementById("newRewardLimit"),newRewardUserLimit:document.getElementById("newRewardUserLimit"),createRewardSubmit:document.getElementById("createRewardSubmit"),modal8body:document.getElementById("modal8body"),modal8footer:document.getElementById("modal8footer"),existingRewardsList:document.getElementById("existingRewardsList"),subAlertMonths:document.getElementById("subAlertMonths"),subAlertMonthsEdit:document.getElementById("subAlertMonthsEdit"),addSubAlertSubmit:document.getElementById("addSubAlertSubmit"),modal12footer:document.getElementById("modal12footer"),giftedSubsNumber:document.getElementById("giftedSubsNumber"),giftedSubsNumberEdit:document.getElementById("giftedSubsNumberEdit"),addGiftedSubAlertSubmit:document.getElementById("addGiftedSubAlertSubmit"),modal14footer:document.getElementById("modal14footer"),bitsNumber:document.getElementById("bitsNumber"),bitsNumberEdit:document.getElementById("bitsNumberEdit"),addBitsAlertSubmit:document.getElementById("addBitsAlertSubmit"),modal16footer:document.getElementById("modal16footer"),VTSstatus:document.getElementById("VTSstatus"),chatStatus:document.getElementById("chatStatus"),eventsubStatus:document.getElementById("eventsubStatus"),topright1:document.getElementById("topright1"),topright2:document.getElementById("topright2"),topright3:document.getElementById("topright3"),darkTheme:document.getElementById("darkTheme"),createChannelPointsButton:document.getElementById("createChannelPointsButton"),addSubAlert:document.getElementById("addSubAlert"),addGiftedSubAlert:document.getElementById("addGiftedSubAlert"),addBitsAlert:document.getElementById("addBitsAlert"),commandCooldownGlobal:document.getElementById("commandCooldownGlobal"),hideDefault:document.getElementById("hideDefault"),backupInput:document.getElementById("backupInput"),commandsList:document.getElementById("commandsList"),rewardsListHeader:document.getElementById("rewardsListHeader"),rewardsList:document.getElementById("rewardsList"),subsListHeader:document.getElementById("subsListHeader"),subsList:document.getElementById("subsList"),giftsListHeader:document.getElementById("giftsListHeader"),giftsList:document.getElementById("giftsList"),bitsListHeader:document.getElementById("bitsListHeader"),bitsList:document.getElementById("bitsList"),logs:document.getElementById("logs"),toastContainer:document.getElementById("toastContainer")},cooldowns={global:0},retried=!1,darkTheme=!0;const defaultModels=["Akari","Hijiki","Hiyori_A","Tororo","Wanko"];let VTS={userID:"",channel:"",access_token:"",refresh_token:"",token:"",port:8001,platform:"",commandCooldownGlobal:0,hideDefault:!0,commands:{},rewards:{},subs:{},gifts:{},bits:{}},availableModels=[],hotkeysLoaded=!1;async function createReward(){checkLogin()&&(elements.newRewardName.value="",elements.newRewardDesc.value="Powered by chat.vote/vts :)",elements.newRewardCost.value="",elements.newRewardColor.value="#22b14c",elements.newRewardCooldown.value="",elements.newRewardLimit.value="",elements.newRewardUserLimit.value="",elements.newRewardCooldownUnit.value="minutes",await loadHotkeys(),createNewRewardModal.show(),elements.createRewardSubmit.onclick=async function(){let e=elements.newRewardName.value,t=elements.newRewardDesc.value,n=parseInt(elements.newRewardCost.value,10),o=elements.newRewardColor.value,a=parseInt(elements.newRewardCooldown.value,10),s=elements.newRewardCooldownUnit.value,l=parseInt(elements.newRewardLimit.value,10),d=parseInt(elements.newRewardUserLimit.value,10);if(!e)return void showToast("Reward name is required","warning",3e3);if(!n||n<1)return void showToast("Reward cost is required","warning",3e3);if("days"==s&&a>7||"hours"==s&&a>168||"minutes"==s&&a>10080)return void showToast("Redemption cooldown must be less than 7 days","warning",3e3);let i=[];if(availableModels.forEach((e=>{document.querySelector(`input[name="${e.modelID}hotkeylist2"]:checked`)&&i.push(e)})),!i.length)return void showToast("No reward action selected","warning",5e3);let r=new Headers;r.append("Authorization",`Bearer ${VTS.access_token}`),r.append("Client-Id",CLIENT_ID),r.append("Content-Type","application/x-www-form-urlencoded");let c=new URLSearchParams;if(c.append("title",e),c.append("cost",n),c.append("prompt",t),c.append("background_color",o),isNaN(l)||(c.append("is_max_per_stream_enabled","true"),c.append("max_per_stream",l)),isNaN(d)||(c.append("is_max_per_user_per_stream_enabled","true"),c.append("max_per_user_per_stream",d)),!isNaN(a)){switch(s){case"days":a*=86400;break;case"hours":a*=3600;break;case"minutes":a*=60;break;default:break}c.append("is_global_cooldown_enabled","true"),c.append("global_cooldown_seconds",a)}let m={method:"POST",headers:r,body:c,redirect:"follow"};try{let e=await fetch(`https://api.twitch.tv/helix/channel_points/custom_rewards?broadcaster_id=${VTS.userID}`,m);if(200!==e.status)return void showToast("Could not create reward","danger",5e3);let t=await e.json();VTS.rewards[t.data[0].id]={rewardid:t.data[0].id,rewardtitle:t.data[0].title,triggers:[]};for(let e=0,n=availableModels.length;e<n;e++){let n=document.querySelector(`input[name="${availableModels[e].modelID}hotkeylist2"]:checked`);n?VTS.rewards[t.data[0].id].triggers.push({modelid:availableModels[e].modelID,modelname:availableModels[e].modelName,name:n.dataset.name,description:n.dataset.description,file:n.dataset.file,hotkeyid:n.value}):defaultModels.includes(availableModels[e].modelName)||showToast(`No hotkey selected for "${availableModels[e].modelName}"`,"warning",5e3)}loadLists(),saveSettings(),createNewRewardModal.hide()}catch(e){console.log("error",e)}})}async function updateRewards(){let e=new Headers;e.append("Authorization",`Bearer ${VTS.access_token}`),e.append("Client-Id",CLIENT_ID),e.append("Content-Type","application/x-www-form-urlencoded");let t={method:"GET",headers:e,redirect:"follow"};try{let e=await fetch(`https://api.twitch.tv/helix/channel_points/custom_rewards?broadcaster_id=${VTS.userID}`,t);if(200!==e.status)return void showToast("Could not update rewards","danger",5e3);let n=await e.json(),o=n.data;for(const[e,t]of Object.entries(VTS.rewards)){let a=n.data.findIndex((t=>t.id===e));-1==a?showToast(`The "${t.rewardtitle}" reward does not exist on Twitch`,"danger",6e3):t.rewardtitle!=o[a].title&&(VTS.rewards[e].rewardtitle=o[a].title)}let a='<div class="accordion" id="rewardsAccordion">',s='<div class="list-group">';for(let e=0,t=o.length;e<t;e++){let t=o[e].default_image.url_1x;o[e].image&&(t=o[e].image.url_1x),s+=`\n      <label class="list-group-item">\n      <input class="form-check-input" type="radio" id="${o[e].id}_rewardslist" name="existingRewardsList"\n      value="${o[e].id}" data-title="${o[e].title}" data-prompt="${o[e].prompt}" \n      data-cost="${o[e].cost}">\n      <img src="${t}" alt="reward image" style="height:2em;"> ${o[e].title}<br>\n      Prompt: ${o[e].prompt}<br>\n      Cost: ${o[e].cost} ${1==o[e].cost?"point":"points"}\n      </label>`}s+="</div>",a+=`\n    <div class="accordion-item">\n    <h2 class="accordion-header" id="rewardsAccordionHeading">\n    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#rewardsAccordionCollapse" \n    aria-expanded="true" aria-controls="rewardsAccordionCollapse">\n    Rewards\n    </button>\n    </h2>\n    <div id="rewardsAccordionCollapse" class="accordion-collapse collapse" aria-labelledby="rewardsAccordionHeading" data-bs-parent="#rewardsAccordion">\n    <div class="accordion-body">${s}</div>\n    </div>\n    </div>\n    </div>`,elements.existingRewardsList.innerHTML=a,loadLists(),saveSettings()}catch(e){console.log("error",e)}}function openRewardsPage(){window.open(`https://dashboard.twitch.tv/u/${VTS.channel}/viewer-rewards/channel-points/rewards`,"_blank")}async function addCommand(){checkLogin()&&(elements.commandName.value="",elements.commandCooldown.value=0,await loadHotkeys(),addCommandModal.show(),elements.addCommandSubmit.onclick=async function(){let e=elements.commandName.value.replace(/\s+/g,""),t=parseInt(elements.commandCooldown.value,10)||0;if(e)if(VTS.commands[e])showToast("Command name already in use","warning",5e3);else{(t>3600||t<0)&&(t=0),VTS.commands[e]={command:e,cooldown:t,triggers:[]};for(let t=0,n=availableModels.length;t<n;t++){let n=document.querySelector(`input[name="${availableModels[t].modelID}hotkeylist0"]:checked`);n?VTS.commands[e].triggers.push({modelid:availableModels[t].modelID,modelname:availableModels[t].modelName,name:n.dataset.name,description:n.dataset.description,file:n.dataset.file,hotkeyid:n.value}):defaultModels.includes(availableModels[t].modelName)||showToast(`No hotkey selected for "${availableModels[t].modelName}"`,"warning",5e3)}if(!VTS.commands[e].triggers.length)return delete VTS.commands[e],void showToast("No command action selected","warning",5e3);loadLists(),saveSettings(),addCommandModal.hide()}else showToast("Invalid command name","warning",5e3)})}async function addReward(){checkLogin()&&(await updateRewards(),await loadHotkeys(),addExistingRewardModal.show(),elements.addRewardSubmit.onclick=async function(){let e=document.querySelector('input[name="existingRewardsList"]:checked');if(!e)return void showToast("No reward selected","danger",5e3);let t=e.value;if(VTS.rewards[t])showToast("Reward already in use","warning",5e3);else if(t){VTS.rewards[t]={rewardid:t,rewardtitle:e.dataset.title,triggers:[]};for(let e=0,n=availableModels.length;e<n;e++){let n=document.querySelector(`input[name="${availableModels[e].modelID}hotkeylist1"]:checked`);n?VTS.rewards[t].triggers.push({modelid:availableModels[e].modelID,modelname:availableModels[e].modelName,name:n.dataset.name,description:n.dataset.description,file:n.dataset.file,hotkeyid:n.value}):defaultModels.includes(availableModels[e].modelName)||showToast(`No hotkey selected for "${availableModels[e].modelName}"`,"warning",5e3)}if(!VTS.rewards[t].triggers.length)return delete VTS.rewards[t],void showToast("No reward action selected","warning",5e3);loadLists(),saveSettings(),addExistingRewardModal.hide()}else showToast("No reward ID found","warning",5e3)})}async function addSubAlert(){checkLogin()&&(await loadHotkeys(),addSubAlertModal.show(),elements.subAlertMonths.value=1,elements.addSubAlertSubmit.onclick=async function(){let e=parseInt(elements.subAlertMonths.value,10);if(e<1)return void showToast("Invalid number of months","warning",5e3);let t=[];for(const e in VTS.subs)VTS.subs.hasOwnProperty(e)&&t.push(parseInt(e,10));if(t.includes(e))showToast(`There is already an alert that triggers when someone subs for ${e} months or more`,"warning",5e3);else{VTS.subs[e]={number:e,triggers:[]};for(let t=0,n=availableModels.length;t<n;t++){let n=document.querySelector(`input[name="${availableModels[t].modelID}hotkeylist5"]:checked`);n?VTS.subs[e].triggers.push({modelid:availableModels[t].modelID,modelname:availableModels[t].modelName,name:n.dataset.name,description:n.dataset.description,file:n.dataset.file,hotkeyid:n.value}):defaultModels.includes(availableModels[t].modelName)||showToast(`No hotkey selected for "${availableModels[t].modelName}"`,"warning",5e3)}if(!VTS.subs[e].triggers.length)return delete VTS.subs[e],void showToast("No hotkeys selected","warning",5e3);loadLists(),saveSettings(),addSubAlertModal.hide()}})}async function addGiftedSubAlert(){checkLogin()&&(await loadHotkeys(),addGiftedSubAlertModal.show(),elements.giftedSubsNumber.value=1,elements.addGiftedSubAlertSubmit.onclick=async function(){let e=parseInt(elements.giftedSubsNumber.value,10);if(e<1||e>100)return void showToast('Invalid number of gifted subs"',"warning",5e3);let t=[];for(const e in VTS.gifts)VTS.gifts.hasOwnProperty(e)&&t.push(parseInt(e,10));if(t.includes(e))showToast(`There is already an alert that triggers when someone gifts ${e} or more subs`,"warning",5e3);else{VTS.gifts[e]={number:e,triggers:[]};for(let t=0,n=availableModels.length;t<n;t++){let n=document.querySelector(`input[name="${availableModels[t].modelID}hotkeylist7"]:checked`);n?VTS.gifts[e].triggers.push({modelid:availableModels[t].modelID,modelname:availableModels[t].modelName,name:n.dataset.name,description:n.dataset.description,file:n.dataset.file,hotkeyid:n.value}):defaultModels.includes(availableModels[t].modelName)||showToast(`No hotkey selected for "${availableModels[t].modelName}"`,"warning",5e3)}if(!VTS.gifts[e].triggers.length)return delete VTS.gifts[e],void showToast("No hotkeys selected","warning",5e3);loadLists(),saveSettings(),addGiftedSubAlertModal.hide()}})}async function addBitsAlert(){checkLogin()&&(await loadHotkeys(),addBitsAlertModal.show(),elements.bitsNumber.value=1,elements.addBitsAlertSubmit.onclick=async function(){let e=parseInt(elements.bitsNumber.value,10);if(e<1||e>1e5)return void showToast('Invalid number of bits"',"warning",5e3);let t=[];for(const e in VTS.bits)VTS.bits.hasOwnProperty(e)&&t.push(parseInt(e,10));if(t.includes(e))showToast(`There is already an alert that triggers when someone cheers ${e} or more bits`,"warning",5e3);else{VTS.bits[e]={bits:e,triggers:[]};for(let t=0,n=availableModels.length;t<n;t++){let n=document.querySelector(`input[name="${availableModels[t].modelID}hotkeylist9"]:checked`);n?VTS.bits[e].triggers.push({modelid:availableModels[t].modelID,modelname:availableModels[t].modelName,name:n.dataset.name,description:n.dataset.description,file:n.dataset.file,hotkeyid:n.value}):defaultModels.includes(availableModels[t].modelName)||showToast(`No hotkey selected for "${availableModels[t].modelName}"`,"warning",5e3)}if(!VTS.bits[e].triggers.length)return delete VTS.bits[e],void showToast("No hotkeys selected","warning",5e3);loadLists(),saveSettings(),addBitsAlertModal.hide()}})}async function editCommand(e){await loadHotkeys(),editCommandModal.show();let t=setInterval((()=>{if(hotkeysLoaded){clearInterval(t);let n=VTS.commands[e];for(let e=0,t=n.triggers.length;e<t;e++)document.getElementById(`${n.triggers[e].hotkeyid}hotkeylist3`)?document.getElementById(`${n.triggers[e].hotkeyid}hotkeylist3`).checked=!0:showToast(`The "${n.triggers[e].name}" hotkey for the "${n.triggers[e].modelname}" model was not found`,"danger",6e3);elements.commandNameEdit.value=e,elements.commandCooldownEdit.value=VTS.commands[e].cooldown||0,elements.modal7footer.innerHTML=`\n      <button type="button" class="btn btn-danger" onclick=deleteCommand("${e}")><i class="material-icons notranslate">delete</i>Delete command</button>\n      <button type="button" class="btn btn-primary" onclick=editCommandSubmit("${e}")><i class="material-icons notranslate">edit</i>Edit</button>`}}),100)}async function editReward(e){await loadHotkeys(),editRewardModal.show();let t=setInterval((()=>{if(hotkeysLoaded){clearInterval(t);let n=VTS.rewards[e];for(let e=0,t=n.triggers.length;e<t;e++)document.getElementById(`${n.triggers[e].hotkeyid}hotkeylist4`)?document.getElementById(`${n.triggers[e].hotkeyid}hotkeylist4`).checked=!0:showToast(`The "${n.triggers[e].name}" hotkey for the "${n.triggers[e].modelname}" model was not found`,"danger",6e3);elements.modal8footer.innerHTML=`\n      <button type="button" class="btn btn-danger" onclick=deleteReward("${e}")><i class="material-icons notranslate">delete</i>Delete reward</button>\n      <button type="button" class="btn btn-primary" onclick=editRewardSubmit("${e}")><i class="material-icons notranslate">edit</i>Edit</button>`}}),100)}async function editSubAlert(e){await loadHotkeys(),editSubAlertModal.show();let t=setInterval((()=>{if(hotkeysLoaded){clearInterval(t);let n=VTS.subs[e];for(let e=0,t=n.triggers.length;e<t;e++)document.getElementById(`${n.triggers[e].hotkeyid}hotkeylist6`)?document.getElementById(`${n.triggers[e].hotkeyid}hotkeylist6`).checked=!0:showToast(`The "${n.triggers[e].name}" hotkey for the "${n.triggers[e].modelname}" model was not found`,"danger",6e3);elements.subAlertMonthsEdit.value=e,elements.modal12footer.innerHTML=`\n      <button type="button" class="btn btn-danger" onclick=deleteSubAlert("${e}")><i class="material-icons notranslate">delete</i>Delete sub alert</button>\n      <button type="button" class="btn btn-primary" onclick=editSubAlertSubmit("${e}")><i class="material-icons notranslate">edit</i>Edit</button>`}}),100)}async function editGiftedSubAlert(e){await loadHotkeys(),editGiftedSubAlertModal.show();let t=setInterval((()=>{if(hotkeysLoaded){clearInterval(t);let n=VTS.gifts[e];for(let e=0,t=n.triggers.length;e<t;e++)document.getElementById(`${n.triggers[e].hotkeyid}hotkeylist8`)?document.getElementById(`${n.triggers[e].hotkeyid}hotkeylist8`).checked=!0:showToast(`The "${n.triggers[e].name}" hotkey for the "${n.triggers[e].modelname}" model was not found`,"danger",6e3);elements.giftedSubsNumberEdit.value=e,elements.modal14footer.innerHTML=`\n      <button type="button" class="btn btn-danger" onclick=deleteGiftedSubAlert("${e}")><i class="material-icons notranslate">delete</i>Delete gifted sub alert</button>\n      <button type="button" class="btn btn-primary" onclick=editGiftedSubAlertSubmit("${e}")><i class="material-icons notranslate">edit</i>Edit</button>`}}),100)}async function editBitsAlert(e){await loadHotkeys(),editBitsAlertModal.show();let t=setInterval((()=>{if(hotkeysLoaded){clearInterval(t);let n=VTS.bits[e];for(let e=0,t=n.triggers.length;e<t;e++)document.getElementById(`${n.triggers[e].hotkeyid}hotkeylist10`)?document.getElementById(`${n.triggers[e].hotkeyid}hotkeylist10`).checked=!0:showToast(`The "${n.triggers[e].name}" hotkey for the "${n.triggers[e].modelname}" model was not found`,"danger",6e3);elements.bitsNumberEdit.value=e,elements.modal16footer.innerHTML=`\n      <button type="button" class="btn btn-danger" onclick=deleteBitsAlert("${e}")><i class="material-icons notranslate">delete</i>Delete bits alert</button>\n      <button type="button" class="btn btn-primary" onclick=editBitsAlertSubmit("${e}")><i class="material-icons notranslate">edit</i>Edit</button>`}}),100)}async function editCommandSubmit(e){let t=elements.commandNameEdit.value.replace(/\s+/g,""),n=parseInt(elements.commandCooldownEdit.value,10)||0;if(t)if(VTS.commands[t]&&e!=t)showToast("Command name already in use","warning",5e3);else{(n>3600||n<0)&&(n=0),VTS.commands[t].cooldown=n,e!=t&&(delete Object.assign(VTS.commands,{[t]:VTS.commands[e]})[e],VTS.commands[t].command=t),VTS.commands[t].triggers=[];for(let e=0,n=availableModels.length;e<n;e++){let n=document.querySelector(`input[name="${availableModels[e].modelID}hotkeylist3"]:checked`);n?VTS.commands[t].triggers.push({modelid:availableModels[e].modelID,modelname:availableModels[e].modelName,name:n.dataset.name,description:n.dataset.description,file:n.dataset.file,hotkeyid:n.value}):defaultModels.includes(availableModels[e].modelName)||showToast(`No hotkey selected for "${availableModels[e].modelName}"`,"warning",5e3)}if(!VTS.commands[t].triggers.length)return delete VTS.commands[t],void showToast("No hotkeys selected","warning",5e3);loadLists(),saveSettings(),editCommandModal.hide()}else showToast("Invalid command name","warning",5e3)}async function editRewardSubmit(e){VTS.rewards[e].triggers=[];for(let t=0,n=availableModels.length;t<n;t++){let n=document.querySelector(`input[name="${availableModels[t].modelID}hotkeylist4"]:checked`);n?VTS.rewards[e].triggers.push({modelid:availableModels[t].modelID,modelname:availableModels[t].modelName,name:n.dataset.name,description:n.dataset.description,file:n.dataset.file,hotkeyid:n.value}):defaultModels.includes(availableModels[t].modelName)||showToast(`No hotkey selected for "${availableModels[t].modelName}"`,"warning",5e3)}if(!VTS.rewards[e].triggers.length)return delete VTS.rewards[e],void showToast("No hotkeys selected","warning",5e3);updateRewards(),saveSettings(),editRewardModal.hide()}async function editSubAlertSubmit(e){let t=parseInt(elements.subAlertMonthsEdit.value,10);if(t<1)return void showToast('Invalid number of gifted subs"',"warning",5e3);let n=[];for(const e in VTS.subs)VTS.subs.hasOwnProperty(e)&&n.push(parseInt(e,10));if(n.includes(t)&&e!=t)showToast(`There is already an alert that triggers when someone subs for ${t} months or more`,"warning",5e3);else{e!=t&&(delete Object.assign(VTS.subs,{[t]:VTS.subs[e]})[e],VTS.subs[t].number=t),VTS.subs[t].triggers=[];for(let e=0,n=availableModels.length;e<n;e++){let n=document.querySelector(`input[name="${availableModels[e].modelID}hotkeylist6"]:checked`);n?VTS.subs[t].triggers.push({modelid:availableModels[e].modelID,modelname:availableModels[e].modelName,name:n.dataset.name,description:n.dataset.description,file:n.dataset.file,hotkeyid:n.value}):defaultModels.includes(availableModels[e].modelName)||showToast(`No hotkey selected for "${availableModels[e].modelName}"`,"warning",5e3)}if(!VTS.subs[t].triggers.length)return delete VTS.subs[t],void showToast("No hotkeys selected","warning",5e3);loadLists(),saveSettings(),editSubAlertModal.hide()}}async function editGiftedSubAlertSubmit(e){let t=parseInt(elements.giftedSubsNumberEdit.value,10);if(t<1||t>100)return void showToast('Invalid number of gifted subs"',"warning",5e3);let n=[];for(const e in VTS.gifts)VTS.gifts.hasOwnProperty(e)&&n.push(parseInt(e,10));if(n.includes(t)&&e!=t)showToast(`There is already an alert that triggers when someone gifts ${t} or more subs`,"warning",5e3);else{e!=t&&(delete Object.assign(VTS.gifts,{[t]:VTS.gifts[e]})[e],VTS.gifts[t].number=t),VTS.gifts[t].triggers=[];for(let e=0,n=availableModels.length;e<n;e++){let n=document.querySelector(`input[name="${availableModels[e].modelID}hotkeylist8"]:checked`);n?VTS.gifts[t].triggers.push({modelid:availableModels[e].modelID,modelname:availableModels[e].modelName,name:n.dataset.name,description:n.dataset.description,file:n.dataset.file,hotkeyid:n.value}):defaultModels.includes(availableModels[e].modelName)||showToast(`No hotkey selected for "${availableModels[e].modelName}"`,"warning",5e3)}if(!VTS.gifts[t].triggers.length)return delete VTS.gifts[t],void showToast("No hotkeys selected","warning",5e3);loadLists(),saveSettings(),editGiftedSubAlertModal.hide()}}async function editBitsAlertSubmit(e){let t=parseInt(elements.bitsNumberEdit.value,10);if(t<1||t>1e5)return void showToast('Invalid number of bits"',"warning",5e3);let n=[];for(const e in VTS.bits)VTS.bits.hasOwnProperty(e)&&n.push(parseInt(e,10));if(n.includes(t)&&e!=t)showToast(`There is already an alert that triggers when someone cheers ${t} or more bits`,"warning",5e3);else{e!=t&&(delete Object.assign(VTS.bits,{[t]:VTS.bits[e]})[e],VTS.bits[t].bits=t),VTS.bits[t].triggers=[];for(let e=0,n=availableModels.length;e<n;e++){let n=document.querySelector(`input[name="${availableModels[e].modelID}hotkeylist10"]:checked`);n?VTS.bits[t].triggers.push({modelid:availableModels[e].modelID,modelname:availableModels[e].modelName,name:n.dataset.name,description:n.dataset.description,file:n.dataset.file,hotkeyid:n.value}):defaultModels.includes(availableModels[e].modelName)||showToast(`No hotkey selected for "${availableModels[e].modelName}"`,"warning",5e3)}if(!VTS.bits[t].triggers.length)return delete VTS.bits[t],void showToast("No hotkeys selected","warning",5e3);loadLists(),saveSettings(),editBitsAlertModal.hide()}}function deleteCommand(e){editCommandModal.hide(),elements.modal9footer.innerHTML=`<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>\n    <button type="button" class="btn btn-danger" data-bs-dismiss="modal" onclick=deleteCommandSubmit("${e}")>Delete the "${e}" command</button>`,elements.modal9body.innerHTML=`Are you sure you want to delete the "${e}" command?`,confirmDeletionModal.show()}function deleteReward(e){editRewardModal.hide(),elements.modal9footer.innerHTML=`<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>\n    <button type="button" class="btn btn-danger" data-bs-dismiss="modal" onclick=deleteRewardSubmit("${e}")>Delete the "${VTS.rewards[e].rewardtitle}" reward</button>`,elements.modal9body.innerHTML=`Are you sure you want to delete the "${VTS.rewards[e].rewardtitle}" reward?\n    <br><br> Make sure to delete the reward on Twitch also <button class="btn btn-twitch" onclick="openRewardsPage()"><span class="twitch-icon"></span> Delete reward on Twitch</button>`,confirmDeletionModal.show()}function deleteSubAlert(e){editSubAlertModal.hide(),elements.modal9footer.innerHTML=`<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>\n    <button type="button" class="btn btn-danger" data-bs-dismiss="modal" onclick=deleteSubAlertSubmit("${e}")>Delete the alert for ${e} months or more</button>`,elements.modal9body.innerHTML=`Are you sure you want to delete the alert for ${e} or more subbed months?`,confirmDeletionModal.show()}function deleteGiftedSubAlert(e){editGiftedSubAlertModal.hide(),elements.modal9footer.innerHTML=`<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>\n    <button type="button" class="btn btn-danger" data-bs-dismiss="modal" onclick=deleteGiftedSubAlertSubmit("${e}")>Delete the ${e} or more gifted subs alert</button>`,elements.modal9body.innerHTML=`Are you sure you want to delete the alert for ${e} or more gifted subs?`,confirmDeletionModal.show()}function deleteBitsAlert(e){editBitsAlertModal.hide(),elements.modal9footer.innerHTML=`<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>\n    <button type="button" class="btn btn-danger" data-bs-dismiss="modal" onclick=deleteBitsAlertSubmit("${e}")>Delete the ${e} or more bits alert</button>`,elements.modal9body.innerHTML=`Are you sure you want to delete the alert for ${e} or more bits?`,confirmDeletionModal.show()}function deleteCommandSubmit(e){try{delete VTS.commands[e],showToast(`Deleted the "${e}" command`,"info",3e3),loadLists(),saveSettings()}catch(e){console.log(e)}}function deleteRewardSubmit(e){let t=VTS.rewards[e].rewardtitle;try{delete VTS.rewards[e],showToast(`Deleted the "${t}" reward`,"info",3e3),loadLists(),saveSettings()}catch(e){console.log(e)}}function deleteSubAlertSubmit(e){try{delete VTS.subs[e],showToast(`Deleted the ${e} or more months subbed alert`,"info",3e3),loadLists(),saveSettings()}catch(e){console.log(e)}}function deleteGiftedSubAlertSubmit(e){try{delete VTS.gifts[e],showToast(`Deleted the ${e} or more gifted sub alert`,"info",3e3),loadLists(),saveSettings()}catch(e){console.log(e)}}function deleteBitsAlertSubmit(e){try{delete VTS.bits[e],showToast(`Deleted the ${e} or more bits alert`,"info",3e3),loadLists(),saveSettings()}catch(e){console.log(e)}}async function triggerHotkey(e){try{let t=await apiClient.currentModel(),n=e.triggers.find((e=>e.modelid==t.modelID));if(n){let e=await apiClient.hotkeyTrigger({hotkeyID:n.hotkeyid});console.log(e)}}catch(e){showToast(e?.message||"Could not trigger hotkey","warning",3e3),console.log("triggerHotkey error",e)}}async function testHotkey(e,t){try{await apiClient.hotkeyTrigger({hotkeyID:e})}catch(e){showToast(e?.message||"Could not test hotkey","warning",3e3),console.log("testHotkey error",e)}}async function loadModel(e){try{await apiClient.modelLoad({modelID:e})}catch(e){showToast(e?.message||"Could not load model","warning",3e3),console.error("loadModel error",e)}await loadHotkeys()}async function loadHotkeys(){hotkeysLoaded=!1;let e=[],t=document.querySelectorAll(".hotkeyList"),n=await apiClient.availableModels();availableModels=n.availableModels;for(let t=0;t<availableModels.length;t++){let n=await apiClient.hotkeysInCurrentModel({modelID:availableModels[t].modelID});e.push(n)}for(let n=0;n<t.length;n++){let o=`<div class="accordion" id="hotkeyAccordion${n}">`;for(let t=0;t<e.length;t++){let a=e[t];if(defaultModels.includes(a.modelName)&&VTS.hideDefault)continue;let s=`\n        <p>Hotkey to trigger when the "${a.modelName}" model is loaded</p>\n        <div class="list-group">`;if(a.availableHotkeys){for(let e=0;e<a.availableHotkeys.length;e++){let t=a.availableHotkeys[e];s+=`\n          <label class="list-group-item">\n          <input class="form-check-input" type="radio" id="${t.hotkeyID}hotkeylist${n}" name="${a.modelID}hotkeylist${n}"\n          value="${t.hotkeyID}" data-name="${t.name?t.name:"unnamed hotkey"}" data-description="${t.description}" data-file="${t.file}">\n          ${t.name?t.name:"unnamed hotkey"} - ${t.description} ${t.file?"- "+t.file:""}\n          <button type="button" onclick="testHotkey('${t.hotkeyID}','${a.modelID}')" class="btn btn-secondary float-end float-top">Test</button>\n          </label>`}s+="</div>",o+=`\n      <div class="accordion-item">\n      <div class="container">\n      <div class="row">\n      <div class="col p-0">\n      <h2 class="accordion-header" id="hotkeyAccordion${n}Heading${t}">\n      <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#hotkeyAccordion${n}Collapse${t}" \n      aria-expanded="true" aria-controls="hotkeyAccordion${n}Collapse${t}">\n      ${a.modelName} - ${a.availableHotkeys.length} hotkeys ${a.modelLoaded?"(current model)":""}\n      </button>\n      </h2>\n      </div>\n      <div class="col-1 dankcol">\n      <button class="btn btn-secondary float-start load-model-btn" onclick="loadModel('${a.modelID}')" type="button">Load</button>\n      </div>\n      </div>\n      </div>\n      <div id="hotkeyAccordion${n}Collapse${t}" class="accordion-collapse collapse" aria-labelledby="hotkeyAccordion${n}Heading${t}" \n      data-bs-parent="#hotkeyAccordion${n}">\n      <div class="accordion-body">\n      ${s}\n      </div>\n      </div>\n      </div>`}}o+="</div>",t[n].innerHTML=`\n      <h3>Hotkeys</h3>\n      <small class="text-body-secondary">Select a hotkey for each model so that the command/reward/alert always does something</small>\n      ${o}`}hotkeysLoaded=!0}function loadLists(){elements.commandsList.innerHTML="nothing here :)",elements.rewardsList.innerHTML="nothing here :)",elements.subsList.innerHTML="nothing here :)",elements.giftsList.innerHTML="nothing here :)",elements.bitsList.innerHTML="nothing here :)";for(const e in VTS.commands)if(VTS.commands.hasOwnProperty(e)){let t=`\n      <li class="list-group-item">\n      <b>Command:</b> ${VTS.commands[e].command}<br>\n      <b>Cooldown:</b> ${VTS.commands[e].cooldown||0}s<br>\n      <b>Actions:</b><br>`;VTS.commands[e].triggers.forEach((e=>{t+=`\n        <ul class="list-unstyled">\n        <ul>\n        <li><b>${e.modelname}</b>\n        <ul>\n        <li>Hotkey: ${e.name} - ${e.description} ${e.file?"- "+e.file:""}</li>\n        </ul>\n        </li>\n        </ul>\n        </ul>`})),t+=`<i class="material-icons notranslate editbtn float-end" title="edit command" onclick="editCommand('${e}')">edit</i></li>`,"nothing here :)"==elements.commandsList.innerHTML&&(elements.commandsList.innerHTML=""),elements.commandsList.innerHTML=t+elements.commandsList.innerHTML}for(const e in VTS.rewards)if(VTS.rewards.hasOwnProperty(e)){let t=`\n      <li class="list-group-item">\n      <b>Reward:</b> ${VTS.rewards[e].rewardtitle}<br>\n      <b>Actions:</b><br>`;VTS.rewards[e].triggers.forEach((e=>{t+=`\n        <ul class="list-unstyled">\n        <ul>\n        <li><b>${e.modelname}</b>\n        <ul>\n        <li>Hotkey: ${e.name} - ${e.description} ${e.file?"- "+e.file:""}</li>\n        </ul>\n        </li>\n        </ul>\n        </ul>`})),t+=`<i class="material-icons notranslate editbtn float-end" title="edit reward" onclick="editReward('${e}')">edit</i></li>`,"nothing here :)"==elements.rewardsList.innerHTML&&(elements.rewardsList.innerHTML=""),elements.rewardsList.innerHTML=t+elements.rewardsList.innerHTML}for(const e in VTS.subs)if(VTS.subs.hasOwnProperty(e)){let t=`\n      <li class="list-group-item">\n      ${e} or more months:<br>\n      <b>Actions:</b><br>`;VTS.subs[e].triggers.forEach((e=>{t+=`\n        <ul class="list-unstyled">\n        <ul>\n        <li><b>${e.modelname}</b>\n        <ul>\n        <li>Hotkey: ${e.name} - ${e.description} ${e.file?"- "+e.file:""}</li>\n        </ul>\n        </li>\n        </ul>\n        </ul>`})),t+=`<i class="material-icons notranslate editbtn float-end" title="edit sub alert" onclick="editSubAlert('${e}')">edit</i></li>`,"nothing here :)"==elements.subsList.innerHTML&&(elements.subsList.innerHTML=""),elements.subsList.innerHTML=t+elements.subsList.innerHTML}for(const e in VTS.gifts)if(VTS.gifts.hasOwnProperty(e)){let t=`\n      <li class="list-group-item">\n      ${e} or more gifted subs:<br>\n      <b>Actions:</b><br>`;VTS.gifts[e].triggers.forEach((e=>{t+=`\n        <ul class="list-unstyled">\n        <ul>\n        <li><b>${e.modelname}</b>\n        <ul>\n        <li>Hotkey: ${e.name} - ${e.description} ${e.file?"- "+e.file:""}</li>\n        </ul>\n        </li>\n        </ul>\n        </ul>`})),t+=`<i class="material-icons notranslate editbtn float-end" title="edit gifted sub alert" onclick="editGiftedSubAlert('${e}')">edit</i></li>`,"nothing here :)"==elements.giftsList.innerHTML&&(elements.giftsList.innerHTML=""),elements.giftsList.innerHTML=t+elements.giftsList.innerHTML}for(const e in VTS.bits)if(VTS.bits.hasOwnProperty(e)){let t=`\n      <li class="list-group-item">\n      ${e} or more bits:<br>\n      <b>Actions:</b><br>`;VTS.bits[e].triggers.forEach((e=>{t+=`\n        <ul class="list-unstyled">\n        <ul>\n        <li><b>${e.modelname}</b>\n        <ul>\n        <li>Hotkey: ${e.name} - ${e.description} ${e.file?"- "+e.file:""}</li>\n        </ul>\n        </li>\n        </ul>\n        </ul>`})),t+=`<i class="material-icons notranslate editbtn float-end" title="edit bits alert" onclick="editBitsAlert('${e}')">edit</i></li>`,"nothing here :)"==elements.bitsList.innerHTML&&(elements.bitsList.innerHTML=""),elements.bitsList.innerHTML=t+elements.bitsList.innerHTML}}function checkLogin(){return!!VTS.channel||(loginButton.show(),setTimeout((function(){loginButton.hide()}),4e3),!1)}async function loadYTPFP(){if(!VTS.access_token)return elements.topright2.innerHTML='<a\n    role="button"\n    id="loginButton"\n    onclick="login()"\n    class="btn btn-twitch"\n    tabindex="0"\n    data-bs-container="body"\n    data-bs-custom-class="custom-popover"\n    data-bs-placement="bottom"\n    data-bs-trigger="manual"\n    data-bs-toggle="popover"\n    data-bs-title="Not signed in"\n    data-bs-content="You need sign in first before connecting to VTS or adding commands/rewards/alerts"\n    ><span class="twitch-icon"></span>Sign in with Twitch</a\n  >',elements.topright3.innerHTML='<a role="button" id="YTloginButton" onclick="YTlogin()" class="btn btn-youtube" tabindex="0"><span class="youtube-icon"></span>Sign in with YouTube</a>',elements.topright2.style.display="block",void(elements.topright3.style.display="block");let e=new Headers;e.append("Authorization",`Bearer ${VTS.access_token}`),e.append("Accept","application/json");let t={method:"GET",headers:e,redirect:"follow"};try{let e=await fetch(`https://youtube.googleapis.com/youtube/v3/channels?part=snippet%2CcontentDetails%2Cstatistics&maxResults=50&mine=true&key=${API_KEY_YT}`,t),n=await e.json();if(200!=e.status&&!retried)return retried=!0,await refreshYTtoken(),void await loadYTPFP();if(!n.items)return elements.youtubeModalTitle.innerHTML="Error",401==n.error.code?elements.youtubeModalBody.innerHTML="Login expired or revoked":elements.youtubeModalBody.innerHTML="Could not find any YouTube channels on your Google account",void youtubeModal.show();if(n.items.length>1)return void console.log("found more than 1 channel");VTS.userID=n.items[0].id,VTS.channel=n.items[0].snippet.title,localStorage.setItem("VTS",JSON.stringify(VTS)),elements.topright3.innerHTML=`\n    <div class="btn-group" role="group" aria-label="log in button group">\n    <button type="button" id="btnGroupDropYTlogin2" class="btn btn-${darkTheme?"dark":"secondary"}"><img src="${n.items[0].snippet.thumbnails.default.url}" alt="profile pic" style="height:2em;"></button>\n    <div class="btn-group" role="group">\n    <button id="btnGroupDropYTlogin" type="button"  class="btn btn-${darkTheme?"dark":"secondary"} dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">\n    ${n.items[0].snippet.title}\n    </button>\n    <ul class="dropdown-menu dropdown-menu-lg-end" aria-labelledby="btnGroupDropYTlogin">\n    <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n    </ul>\n    </div>\n    </div>`,elements.topright2.style.display="none",loadYTStreams(),sendUsername("chat.vote/vts",VTS.channel,VTS.platform,YT_STREAM_ID)}catch(e){console.log("loadYTPFP error",e)}}async function refreshAfter(e){isNaN(e)||(console.log("refreshing YT token in "+1e3*e),setTimeout((()=>{refreshYTtoken()}),1e3*e))}async function refreshYTtoken(){let e=new Headers;e.append("Content-Type","application/json");let t={method:"POST",headers:e,body:JSON.stringify({access_token:VTS.access_token,refresh_token:VTS.refresh_token}),redirect:"follow"};try{let e=await fetch("https://helper.donk.workers.dev/youtube/refresh",t),n=await e.json();if(n.error)return elements.youtubeModalTitle.innerHTML="API error",elements.youtubeModalBody.innerHTML=n.error_description||"Could not log in",void youtubeModal.show();VTS.access_token=n.access_token,console.log("YT token refreshed"),refreshAfter(parseInt(n.expires_in,10)-60)}catch(e){console.log("refreshYTtoken error",e)}}async function loadYTStreams(e=!1){clearTimeout(readChatTimeout);let t=new Headers;t.append("Authorization",`Bearer ${VTS.access_token}`),t.append("Accept","application/json");let n={method:"GET",headers:t,redirect:"follow"};try{let t=await fetch(`https://youtube.googleapis.com/youtube/v3/liveBroadcasts?part=snippet%2CcontentDetails%2Cstatus&broadcastType=all&mine=true&key=${API_KEY_YT}&maxResults=50`,n),o=await t.json();if(200!=t.status)return elements.youtubeModalTitle.innerHTML="API error",elements.youtubeModalBody.innerHTML=o.error.message||"Could not find any live streams on your channel",void youtubeModal.show();if(!o.items)return elements.youtubeModalTitle.innerHTML="Error",elements.youtubeModalBody.innerHTML="Could not find any live streams on your channel",void youtubeModal.show();let a=["created","live","liveStarting","ready","testStarting","testing"],s=[];for(let e=0;e<o.items.length;e++)a.includes(o.items[e].status.lifeCycleStatus)&&s.push(o.items[e]);if(s.length<1)return elements.youtubeModalTitle.innerHTML="Error",elements.youtubeModalBody.innerHTML="Could not find any active/upcoming streams on your channel",void youtubeModal.show();if(1!=s.length||e){let e="";for(let t=0;t<s.length;t++){let n=new Intl.RelativeTimeFormat("en"),o=-(new Date-new Date(s[t].snippet.scheduledStartTime))/6e4,a="minutes";Math.abs(o)>60&&Math.abs(o)<1440?(a="hours",o/=60):Math.abs(o)>=1440&&(a="days",o/=1440);let l=n.format(o,a);e+=`\n        <div class="card streamcard">\n        <div class="card-body">\n        <div class="row">\n        <div class="col-xl-4">\n        <img src="${s[t].snippet.thumbnails.default.url}" class="stream-thumbnail" alt="stream thumbnail"\n         height="${s[t].snippet.thumbnails.default.height}" width="${s[t].snippet.thumbnails.default.width}">\n         <button type="button" class="btn btn-success select-stream" data-bs-dismiss="modal" \n         onclick="selectStream('${s[t].id}','${s[t].snippet.liveChatId}','${s[t].snippet.title}')">\n         Select\n         </button>\n         </div>\n         <div class="col-xl-8">\n         <b>Title:</b> ${s[t].snippet.title}<br>\n         <b>Scheduled start time:</b> ${l}<br>\n         <b>Status:</b> ${s[t].status.lifeCycleStatus}<br>\n         <b>Link:</b> <a href="https://youtu.be/${s[t].id}" target="_blank" rel="noopener noreferrer">youtu.be/${s[t].id}</a><br>\n         </div>\n         </div>\n         </div>\n         </div>`}return elements.youtubeModalTitle.innerHTML="Select which stream to connect to",elements.youtubeModalBody.innerHTML=e,void youtubeModal.show()}selectStream(s[0].id,s[0].snippet.liveChatId,s[0].snippet.title)}catch(e){console.log("loadYTStreams error",e)}}function selectStream(e,t,n){YT_STREAM_ID=e,YT_CHAT_ID=t,readYTChat(),elements.eventsubStatus.style.display="none",elements.chatStatus.innerHTML=`<h4>\n  <span class="badge bg-success">\n  Connected to chat: <a class="truncate" style="display: inline-block;" target="_blank" rel="noopener noreferrer" href="https://www.youtube.com/watch?v=${e}">${n}</a>\n  <button type="button" onclick="loadYTStreams(true)" class="btn btn-primary change-stream">Change</button>\n  </span>\n  </h4>`,sendUsername("chat.vote/vts",VTS.channel,VTS.platform,YT_STREAM_ID)}async function loadPFP(){if(!VTS.channel)return elements.topright2.innerHTML='<a\n    role="button"\n    id="loginButton"\n    onclick="login()"\n    class="btn btn-twitch"\n    tabindex="0"\n    data-bs-container="body"\n    data-bs-custom-class="custom-popover"\n    data-bs-placement="bottom"\n    data-bs-trigger="manual"\n    data-bs-toggle="popover"\n    data-bs-title="Not signed in"\n    data-bs-content="You need sign in first before connecting to VTS or adding commands/rewards/alerts"\n    ><span class="twitch-icon"></span>Sign in with Twitch</a\n  >',elements.topright3.innerHTML='<a role="button" id="YTloginButton" onclick="YTlogin()" class="btn btn-youtube" tabindex="0"><span class="youtube-icon"></span>Sign in with YouTube</a>',elements.topright2.style.display="block",void(elements.topright3.style.display="block");let e=await get7TVPFP(VTS.userID);"/pics/donk.png"==e&&VTS.access_token&&(e=await getTwitchPFP(VTS.channel,VTS.access_token)),elements.topright2.innerHTML=`\n  <div class="btn-group" role="group" aria-label="Button group with nested dropdown">\n  <button type="button" id="btnGroupDrop2" class="btn btn-${darkTheme?"dark":"secondary"}"><img src="${e}" alt="profile pic" style="height:2em;"></button>\n  <div class="btn-group" role="group">\n  <button id="btnGroupDrop1" type="button" class="btn btn-${darkTheme?"dark":"secondary"} dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">\n  ${VTS.channel}\n  </button>\n  <ul class="dropdown-menu dropdown-menu-lg-end" aria-labelledby="btnGroupDrop1">\n  <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n  </ul>\n  </div>\n  </div>`,elements.topright3.style.display="none"}function login(){return elements.topright2.innerHTML='<div class="btn-group" role="group" aria-label="log in button group">\n    <button type="button" class="btn btn-twitch"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></button>\n    <div class="btn-group" role="group">\n        <button id="btnGroupDroplogin" type="button" class="btn btn-twitch dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">\n      </button>\n        <ul class="dropdown-menu dropdown-menu-lg-end" aria-labelledby="btnGroupDroplogin">\n            <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n        </ul>\n    </div>\n</div>',window.open("/vts/prompt.html","loginWindow","toolbar=0,status=0,scrollbars=0,width=500px,height=800px"),elements.topright3.style.display="none",!1}function YTlogin(){return elements.topright3.innerHTML='<div class="btn-group" role="group" aria-label="log in button group">\n    <button type="button" class="btn btn-youtube"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></button>\n    <div class="btn-group" role="group">\n        <button id="btnGroupDropYTlogin" type="button" class="btn btn-youtube dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">\n      </button>\n        <ul class="dropdown-menu dropdown-menu-lg-end" aria-labelledby="btnGroupDropYTlogin">\n            <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n        </ul>\n    </div>\n</div>',window.open("/vts/ytlogin.html","loginWindow","toolbar=0,status=0,scrollbars=0,width=500px,height=800px"),elements.topright2.style.display="none",!1}function loginVTS(){checkLogin()&&(elements.topright1.innerHTML='\n    <a role="button" id="connectvtsbtn" onclick="loginVTS()" class="btn btn-vts" tabindex="0" data-bs-container="body" \n    data-bs-custom-class="custom-popover" data-bs-placement="bottom" data-bs-trigger="manual" data-bs-toggle="popover" data-bs-title="VTS not connected"\n    data-bs-content="You need connect VTube Studio before adding commands/rewards">\n    <div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></a>',connectVTSModal.show())}function logout(){elements.topright2.innerHTML='<a\n  role="button"\n  id="loginButton"\n  onclick="login()"\n  class="btn btn-twitch"\n  tabindex="0"\n  data-bs-container="body"\n  data-bs-custom-class="custom-popover"\n  data-bs-placement="bottom"\n  data-bs-trigger="manual"\n  data-bs-toggle="popover"\n  data-bs-title="Not signed in"\n  data-bs-content="You need sign in first before connecting to VTS or adding commands/rewards/alerts"\n  ><span class="twitch-icon"></span>Sign in with Twitch</a\n>',elements.topright3.innerHTML='<a role="button" id="YTloginButton" onclick="YTlogin()" class="btn btn-youtube" tabindex="0"><span class="youtube-icon"></span>Sign in with YouTube</a>',elements.topright2.style.display="block",elements.topright3.style.display="block","youtube"==VTS.platform&&revokeYT(),resetSettings()}async function revokeYT(){let e=new Headers;e.append("Content-Type","application/x-www-form-urlencoded");let t={method:"POST",headers:e,redirect:"follow"};try{let e=await fetch(`https://oauth2.googleapis.com/revoke?token=${VTS.access_token}`,t);console.log("revokeYT response code",e.status)}catch(e){console.log("revokeYT error",e)}}function cancelVTSlogin(){elements.topright1.innerHTML='<a role="button" id="connectvtsbtn" onclick="loginVTS()" class="btn btn-vts"\n    tabindex="0" data-bs-container="body" data-bs-custom-class="custom-popover" data-bs-placement="bottom" data-bs-trigger="manual"\n    data-bs-toggle="popover" data-bs-title="VTS not connected" data-bs-content="You need connect VTube Studio before adding commands/rewards">\n    <span class="vts-icon"></span>Connect VTube Studio</a>'}function setAuthToken(e){console.log("vts token saved"),VTS.token=e,saveSettings()}function getAuthToken(){return VTS.token}function connectVTS(){if(!checkLogin())return;let e=parseInt(elements.port.value,10)||8001;elements.VTSstatus.innerHTML='\n  <h4><span class="badge bg-warning">\n  VTS connecting... \n  <div class="spinner-border" style="width:18px;height:18px;" role="status"><span class="visually-hidden">Loading...</span></div>\n  </span></h4>';try{const t={authTokenGetter:getAuthToken,authTokenSetter:setAuthToken,pluginName:"chat.vote/vts",pluginDeveloper:"badoge",pluginIcon:icon,port:e};apiClient=new vtubestudio.ApiClient(t),apiClient.on("connect",(async()=>{elements.VTSstatus.innerHTML='<h4><span class="badge bg-success">VTS connected :)</span></h4>',connectVTSModal.hide(),document.getElementById("connectvtsbtn").style.display="none"})),apiClient.on("disconnect",(async()=>{elements.VTSstatus.innerHTML='<h4><span class="badge bg-danger">VTS disconnected :(</span></h4>'})),apiClient.on("error",(async e=>{showToast(e,"warning",3e3)}))}catch(e){console.log(e)}}function connectTwitchChat(){refreshData(),VTS.channel&&(loadBadges(VTS.channel),elements.chatStatus.innerHTML='\n  <h4><span class="badge bg-warning">\n  Chat connecting... <div class="spinner-border" style="width:18px;height:18px;" role="status"><span class="visually-hidden">Loading...</span></div>\n  </span></h4>',elements.topright2.innerHTML='<div class="btn-group" role="group" aria-label="log in button group">\n    <button type="button" class="btn btn-twitch"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></button>\n    <div class="btn-group" role="group">\n        <button id="btnGroupDroplogin" type="button" class="btn btn-twitch dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">\n      </button>\n        <ul class="dropdown-menu dropdown-menu-lg-end" aria-labelledby="btnGroupDrop1">\n            <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n        </ul>\n    </div>\n</div>',client=new tmi.Client({connection:{reconnect:!0,secure:!0},channels:[VTS.channel]}),client.connect().catch(console.error),changeSiteLinkTarget("_blank"),client.on("connected",((e,t)=>{console.log(`Connected to ${e}:${t}`),elements.chatStatus.innerHTML='<h4><span class="badge bg-success">Chat connected :)</span></h4>',saveSettings(),sendUsername("chat.vote/vts",VTS.channel,VTS.platform,YT_STREAM_ID),sendData("chat.vote/vts",VTS.channel,VTS.platform,{commands:VTS.commands,rewards:VTS.rewards,subs:VTS.subs,gifts:VTS.gifts,bits:VTS.bits},YT_STREAM_ID),loadPFP()})),client.on("disconnected",(e=>{elements.chatStatus.innerHTML=`<h4><span class="badge bg-danger">Chat disconnected: ${e}</span></h4>`})),client.on("notice",((e,t,n)=>{elements.chatStatus.innerHTML=`<h4><span class="badge bg-danger">Chat disconnected: ${n}</span></h4>`})),client.on("message",((e,t,n,o)=>{let a=n.split(" ").filter(Boolean)[0].toLowerCase();if(VTS.commands[a]){if((Date.now()-cooldowns.global)/1e3<VTS.commandCooldownGlobal)return;if(cooldowns[a]&&(Date.now()-cooldowns[a])/1e3<VTS.commands[a].cooldown)return;cooldowns[VTS.commands[a].command]=Date.now(),cooldowns.global=Date.now(),triggerHotkey(VTS.commands[a]),log({action:`Used command: "${a}"`,id:t["user-id"],username:t.username,displayname:t["display-name"],firstmsg:t["first-msg"],color:t.color,badges:t.badges})}})),client.on("subscription",((e,t,n,o,a)=>{let s=Object.keys(VTS.subs);for(let e=0;e<s.length;e++)s[e]=parseInt(s[e]);let l=parseInt(a["msg-param-cumulative-months"],10)||1;if(s=s.sort(((e,t)=>e-t)),s.length>0){let e=parseInt(l,10)||1,t=0;for(let n=0;n<s.length;n++)e>=s[n]&&(t=s[n]);triggerHotkey(VTS.subs[t]),log({action:a["system-msg"],id:a["user-id"],username:a.login,displayname:a["display-name"],firstmsg:!1,color:a.color,badges:a.badges})}})),client.on("resub",((e,t,n,o,a,s)=>{let l=Object.keys(VTS.subs);for(let e=0;e<l.length;e++)l[e]=parseInt(l[e]);if(l=l.sort(((e,t)=>e-t)),l.length>0){let e=parseInt(a["msg-param-cumulative-months"],10)||1,t=0;for(let n=0;n<l.length;n++)e>=l[n]&&(t=l[n]);triggerHotkey(VTS.subs[t]),log({action:a["system-msg"],id:a["user-id"],username:a.login,displayname:a["display-name"],firstmsg:!1,color:a.color,badges:a.badges})}})),client.on("submysterygift",((e,t,n,o,a)=>{let s=Object.keys(VTS.gifts);for(let e=0;e<s.length;e++)s[e]=parseInt(s[e]);if(s=s.sort(((e,t)=>e-t)),s.length>0){let e=parseInt(n,10),t=0;for(let n=0;n<s.length;n++)e>=s[n]&&(t=s[n]);triggerHotkey(VTS.gifts[t]),log({action:a["system-msg"],id:a["user-id"],username:a.login,displayname:a["display-name"],firstmsg:!1,color:a.color,badges:a.badges})}})),client.on("anonsubmysterygift",((e,t,n,o)=>{let a=Object.keys(VTS.gifts);for(let e=0;e<a.length;e++)a[e]=parseInt(a[e]);if(a=a.sort(((e,t)=>e-t)),a.length>0){let e=parseInt(t,10),n=0;for(let t=0;t<a.length;t++)e>=a[t]&&(n=a[t]);triggerHotkey(VTS.gifts[n]),log({action:o["system-msg"],id:o["user-id"],username:o.login,displayname:o["display-name"],firstmsg:!1,color:o.color,badges:o.badges})}})),client.on("cheer",((e,t,n)=>{let o=Object.keys(VTS.bits);for(let e=0;e<o.length;e++)o[e]=parseInt(o[e]);if(o=o.sort(((e,t)=>e-t)),o.length>0){let e=parseInt(t.bits,10),n=0;for(let t=0;t<o.length;t++)e>=o[t]&&(n=o[t]);triggerHotkey(VTS.bits[n]),log({action:`Cheered ${t.bits} ${1==t.bits?"bit":"bits"}`,id:t["user-id"],username:t.username,displayname:t["display-name"],firstmsg:t["first-msg"],color:t.color,badges:t.badges})}})))}async function readYTChat(e=null){if(YT_STREAM_ID&&YT_CHAT_ID)if(VTS.access_token){var t=new Headers;t.append("Accept","application/json"),t.append("Authorization",`Bearer ${VTS.access_token}`);var n={method:"GET",headers:t,redirect:"follow"};try{let t=await fetch(`https://youtube.googleapis.com/youtube/v3/liveChat/messages?key=${API_KEY_YT}&liveChatId=${YT_CHAT_ID}&part=id,snippet,authorDetails&maxResults=2000${e?"&pageToken="+e:""}`,n),o=await t.json();if(o.error)return loadYTStreams(!0),void showToast("failed to fetch new chat messages","danger",5e3);if(o.offlineAt)return elements.youtubeModalTitle.innerHTML="Stream ended",elements.youtubeModalBody.innerHTML="Refresh if you did not go offline",void youtubeModal.show();if(o.items?.length>0&&e)for(let e=0,t=o.items.length;e<t;e++){if("chatEndedEvent"==o.items[e].snippet.type)return elements.youtubeModalTitle.innerHTML="Stream ended",elements.youtubeModalBody.innerHTML="Refresh if you did not go offline",void youtubeModal.show();if("textMessageEvent"==o.items[e].snippet.type){let t=o.items[e].snippet.textMessageDetails.messageText.split(" ").filter(Boolean)[0].toLowerCase();if(VTS.commands[t]){if((Date.now()-cooldowns.global)/1e3<VTS.commandCooldownGlobal)continue;if(cooldowns[t]&&(Date.now()-cooldowns[t])/1e3<VTS.commands[t].cooldown)continue;cooldowns[VTS.commands[t].command]=Date.now(),cooldowns.global=Date.now(),triggerHotkey(VTS.commands[t]),logYT({action:`Used command: "${t}"`,username:o.items[e].authorDetails.displayName,channelUrl:o.items[e].authorDetails.channelUrl,isChatModerator:o.items[e].authorDetails.isChatModerator,isChatOwner:o.items[e].authorDetails.isChatOwner,isChatSponsor:o.items[e].authorDetails.isChatSponsor,isVerified:o.items[e].authorDetails.isVerified,profileImageUrl:o.items[e].authorDetails.profileImageUrl})}}}readChatTimeout=setTimeout((()=>{readYTChat(o.nextPageToken)}),o.pollingIntervalMillis)}catch(e){console.log("readYTChat error",e)}}else console.log("not authorized");else console.log("no stream selected")}function log(e){let t=e.username==e.displayname.toLowerCase()?`${e.displayname}`:`${e.displayname} (${e.username})`,n=e.color?e.color:"#FFFFFF",o="";e.badges&&Object.keys(e.badges).length>0&&(o=addBadges(e.badges,e.id,e.firstmsg)),"nothing here :)"==elements.logs.innerHTML.trim()&&(elements.logs.innerHTML=""),elements.logs.innerHTML=`<li class="list-group-item">${(new Date).toLocaleTimeString()} ${o}<span style="color:${n};"> ${t}</span>: ${e.action}</li>`+elements.logs.innerHTML}function logYT(e){"nothing here :)"==elements.logs.innerHTML.trim()&&(elements.logs.innerHTML="");let t=`<img src="${e.profileImageUrl}" class="ytpfp" alt="profile picture" height="24" width="24">`;elements.logs.innerHTML=`<li class="list-group-item">${(new Date).toLocaleTimeString()} ${t} <a target="_blank" rel="noopener noreferrer" href="${e.channelUrl}">${e.username}</a>: ${e.action}</li>`+elements.logs.innerHTML}function load_localStorage(){localStorage.getItem("VTS")?(VTS=JSON.parse(localStorage.getItem("VTS")),elements.commandCooldownGlobal.value=VTS.commandCooldownGlobal??0,elements.hideDefault.checked=VTS.hideDefault??!0,elements.port.value=VTS.port||8001,"youtube"==VTS.platform&&hideTwitchSettings()):console.log("VTS localStorage not found")}function hideTwitchSettings(){elements.createChannelPointsButton.style.display="none",elements.addSubAlert.style.display="none",elements.addGiftedSubAlert.style.display="none",elements.addBitsAlert.style.display="none",elements.rewardsList.style.display="none",elements.subsList.style.display="none",elements.giftsList.style.display="none",elements.bitsList.style.display="none",elements.rewardsListHeader.style.display="none",elements.subsListHeader.style.display="none",elements.giftsListHeader.style.display="none",elements.bitsListHeader.style.display="none"}function refreshData(){darkTheme=elements.darkTheme.checked??!0,VTS.commandCooldownGlobal=parseInt(elements.commandCooldownGlobal.value,10)||0,(VTS.commandCooldownGlobal>3600||VTS.commandCooldownGlobal<0)&&(VTS.commandCooldownGlobal=0),VTS.hideDefault=elements.hideDefault.checked,VTS.port=parseInt(elements.port.value,10)||8001}function saveSettings(){refreshData(),localStorage.setItem("VTS",JSON.stringify(VTS)),localStorage.setItem("darkTheme",darkTheme)}async function loadAndConnect(){if(load_localStorage(),VTS.access_token&&VTS.channel&&"twitch"==VTS.platform&&!await checkToken(VTS.access_token))return VTS.channel="",void loginExpiredModal.show();loadLists(),(VTS.channel||VTS.access_token)&&("twitch"==VTS.platform&&(connectTwitchChat(),connectTwitchEventSub()),"youtube"==VTS.platform&&loadYTPFP()),VTS.token&&setTimeout((()=>{connectVTS()}),1e3)}function resetSettings(){localStorage.setItem("VTS",JSON.stringify({userID:"",channel:"",access_token:"",refresh_token:"",token:"",port:8001,platform:"",commandCooldownGlobal:0,hideDefault:!0,commands:{},rewards:{},subs:{},gifts:{},bits:{}})),apiClient?.isConnected&&apiClient.disconnect(),location.reload()}function exportBackup(){if(!checkLogin())return;let e=structuredClone(VTS);delete e.access_token,delete e.channel,delete e.commandCooldownGlobal,delete e.hideDefault,delete e.platform,delete e.refresh_token,delete e.token,delete e.userID;const t=JSON.stringify(e);let n=document.createElement("a");n.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(t)),n.setAttribute("download","chatvote vts backup.json"),n.style.display="none",document.body.appendChild(n),n.click(),document.body.removeChild(n)}function importBackup(){let e=elements.backupInput.files[0];if(!e)return void showToast("No file provided","warning",3e3);if("application/json"!==e.type)return void showToast("Invalid file provided","warning",3e3);let t=new FileReader;t.onload=function(e){let t=JSON.parse(e.target.result);if(!(t.hasOwnProperty("commands")&&t.hasOwnProperty("rewards")&&t.hasOwnProperty("subs")&&t.hasOwnProperty("gifts")&&t.hasOwnProperty("bits")))return void showToast("Invalid file provided","warning",3e3);VTS.commands=structuredClone(t.commands),VTS.rewards=structuredClone(t.rewards),VTS.subs=structuredClone(t.subs),VTS.gifts=structuredClone(t.gifts),VTS.bits=structuredClone(t.bits),saveSettings(),showToast("Successfully restored settings from backup, reloading page...","success",3e3),setTimeout((()=>{location.reload()}),3e3)},t.readAsText(e)}async function connectTwitchEventSub(){try{elements.eventsubStatus.innerHTML='\n  <h4><span class="badge bg-warning">\n  Channel points connecting... <div class="spinner-border" style="width:18px;height:18px;" role="status"><span class="visually-hidden">Loading...</span></div>\n  </span></h4>',EventSub=new TES({identity:{id:CLIENT_ID,accessToken:VTS.access_token},listener:{type:"websocket"}});const e=await EventSub.getSubscriptions();console.log(e);for(let t=0;t<e.data.length;t++)await EventSub.unsubscribe(e.data[t].id);const t=await EventSub.subscribe("channel.channel_points_custom_reward_redemption.add",{broadcaster_user_id:VTS.userID});console.log(t),"enabled"==t.status&&(elements.eventsubStatus.innerHTML='<h4><span class="badge bg-success">Channel points connected :)</span></h4>'),EventSub.on("channel.channel_points_custom_reward_redemption.add",((e,t)=>{console.log(e),console.log(t);let n=e.reward.id,o=e.reward.title,a=e.user_id,s=e.user_login,l=e.user_name;VTS.rewards&&VTS.rewards[n]&&(triggerHotkey(VTS.rewards[n]),log({action:`Redeemed ${o} <img src="/pics/donk.png" alt="reward image" style="height:1.2em;"> ${e?.user_input?"| Message: "+e.user_input+'"':""} | ${e.reward.cost.toLocaleString()} ${1==e.reward.cost?"point":"points"}`,id:a,username:s,displayname:l,firstmsg:null,color:null,badges:null}))})),EventSub.on("revocation",(e=>{elements.eventsubStatus.innerHTML='<h4><span class="badge bg-danger">Channel points disconnected :(</span></h4>',console.log(e)})),EventSub.on("connection_lost",(e=>{elements.eventsubStatus.innerHTML='<h4><span class="badge bg-danger">Channel points disconnected :(</span></h4>',console.log(e),connectTwitchChat()}))}catch(e){console.log(e),elements.eventsubStatus.innerHTML='<h4><span class="badge bg-danger">Channel points disconnected :(</span></h4>'}}function switchTheme(e){document.documentElement.setAttribute("data-bs-theme",e?"dark":"light"),document.getElementById("twitchLogo").style.filter=`invert(${e?.25:.65})`,document.getElementById("btnGroupDrop1")&&document.getElementById("btnGroupDrop2")&&(document.getElementById("btnGroupDrop1").classList.remove(""+(e?"btn-secondary":"btn-dark")),document.getElementById("btnGroupDrop1").classList.add(""+(e?"btn-dark":"btn-secondary")),document.getElementById("btnGroupDrop2").classList.remove(""+(e?"btn-secondary":"btn-dark")),document.getElementById("btnGroupDrop2").classList.add(""+(e?"btn-dark":"btn-secondary"))),document.getElementById("btnGroupDropYTlogin")&&document.getElementById("btnGroupDropYTlogin2")&&(document.getElementById("btnGroupDropYTlogin").classList.remove(""+(e?"btn-secondary":"btn-dark")),document.getElementById("btnGroupDropYTlogin").classList.add(""+(e?"btn-dark":"btn-secondary")),document.getElementById("btnGroupDropYTlogin2").classList.remove(""+(e?"btn-secondary":"btn-dark")),document.getElementById("btnGroupDropYTlogin2").classList.add(""+(e?"btn-dark":"btn-secondary")))}window.onload=function(){darkTheme="true"===(localStorage.getItem("darkTheme")||"true"),elements.darkTheme.checked=darkTheme??!0,switchTheme(elements.darkTheme.checked),loadAndConnect(),connectVTSModal=new bootstrap.Modal(elements.connectVTSModal),resetModal=new bootstrap.Modal(elements.resetModal),addCommandModal=new bootstrap.Modal(elements.addCommandModal),addExistingRewardModal=new bootstrap.Modal(elements.addExistingRewardModal),createNewRewardModal=new bootstrap.Modal(elements.createNewRewardModal),editCommandModal=new bootstrap.Modal(elements.editCommandModal),editRewardModal=new bootstrap.Modal(elements.editRewardModal),confirmDeletionModal=new bootstrap.Modal(elements.confirmDeletionModal),loginExpiredModal=new bootstrap.Modal(elements.loginExpiredModal),addSubAlertModal=new bootstrap.Modal(elements.addSubAlertModal),editSubAlertModal=new bootstrap.Modal(elements.editSubAlertModal),addGiftedSubAlertModal=new bootstrap.Modal(elements.addGiftedSubAlertModal),editGiftedSubAlertModal=new bootstrap.Modal(elements.editGiftedSubAlertModal),addBitsAlertModal=new bootstrap.Modal(elements.addBitsAlertModal),editBitsAlertModal=new bootstrap.Modal(elements.editBitsAlertModal),addRewardModal=new bootstrap.Modal(elements.addRewardModal),youtubeModal=new bootstrap.Modal(elements.youtubeModal),VTS.channel||(loginButton=new bootstrap.Popover(document.getElementById("loginButton"))),enableTooltips(),enablePopovers(),elements.darkTheme.onchange=function(){switchTheme(this.checked),saveSettings()}};