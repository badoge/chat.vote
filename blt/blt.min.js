let elements={loginExpiredModal:document.getElementById("loginExpiredModal"),tierlistEditorModal:document.getElementById("tierlistEditorModal"),tierlistEditor:document.getElementById("tierlistEditor"),previewModal:document.getElementById("previewModal"),previewModalBody:document.getElementById("previewModalBody"),generateChatModal:document.getElementById("generateChatModal"),playlist:document.getElementById("playlist"),generateModal:document.getElementById("generateModal"),generateBracketType:document.getElementById("generateBracketType"),spotifyplaylistSettings:document.getElementById("spotifyplaylistSettings"),tiermakerSettings:document.getElementById("tiermakerSettings"),clipsSettings:document.getElementById("clipsSettings"),emotesSettings:document.getElementById("emotesSettings"),uwufufuSettings:document.getElementById("uwufufuSettings"),ytchannelSettings:document.getElementById("ytchannelSettings"),ytplaylistSettings:document.getElementById("ytplaylistSettings"),publishedModal:document.getElementById("publishedModal"),bracketCode:document.getElementById("bracketCode"),bracketLink:document.getElementById("bracketLink"),spotifyPlaylistLink:document.getElementById("spotifyPlaylistLink"),spotifyPlaylistPreview:document.getElementById("spotifyPlaylistPreview"),tiermakerLink:document.getElementById("tiermakerLink"),tiermakerPreview:document.getElementById("tiermakerPreview"),clipsChannel:document.getElementById("clipsChannel"),clipsPreview:document.getElementById("clipsPreview"),emotesChannel:document.getElementById("emotesChannel"),emotesPreview:document.getElementById("emotesPreview"),uwufufuLink:document.getElementById("uwufufuLink"),uwufufuPreview:document.getElementById("uwufufuPreview"),ytchannelLink:document.getElementById("ytchannelLink"),ytchannelPreview:document.getElementById("ytchannelPreview"),ytplaylistLink:document.getElementById("ytplaylistLink"),ytplaylistPreview:document.getElementById("ytplaylistPreview"),communityModal:document.getElementById("communityModal"),communityModalBody:document.getElementById("communityModalBody"),shareCode:document.getElementById("shareCode"),importModal:document.getElementById("importModal"),importModalBody:document.getElementById("importModalBody"),myBracketsModal:document.getElementById("myBracketsModal"),myBracketsModalBody:document.getElementById("myBracketsModalBody"),startModal:document.getElementById("startModal"),formatSelect:document.getElementById("formatSelect"),optionLimit:document.getElementById("optionLimit"),bracketSettings:document.getElementById("bracketSettings"),tierlistSettings:document.getElementById("tierlistSettings"),changeCommand:document.getElementById("changeCommand"),changeCommandCopy:document.getElementById("changeCommandCopy"),highestTier:document.getElementById("highestTier"),averageTier:document.getElementById("averageTier"),keepVotingEnabled:document.getElementById("keepVotingEnabled"),keepVotingEnabledCopy:document.getElementById("keepVotingEnabledCopy"),disableAnimations:document.getElementById("disableAnimations"),disableAnimationsCopy:document.getElementById("disableAnimationsCopy"),spotifyWarning:document.getElementById("spotifyWarning"),startTriviaModal:document.getElementById("startTriviaModal"),status:document.getElementById("status"),topRight:document.getElementById("topRight"),loginButton:document.getElementById("loginButton"),channelName:document.getElementById("channelName"),darkTheme:document.getElementById("darkTheme"),myBrackets:document.getElementById("myBrackets"),myTrivia:document.getElementById("myTrivia"),importBracket:document.getElementById("importBracket"),importTrivia:document.getElementById("importTrivia"),bracketEditor:document.getElementById("bracketEditor"),bracketEditorHeader:document.getElementById("bracketEditorHeader"),bracketTitle:document.getElementById("bracketTitle"),bracketDescription:document.getElementById("bracketDescription"),bracketOptionsContainer:document.getElementById("bracketOptionsContainer"),triviaEditor:document.getElementById("triviaEditor"),triviaEditorHeader:document.getElementById("triviaEditorHeader"),triviaTitle:document.getElementById("triviaTitle"),triviaDescription:document.getElementById("triviaDescription"),triviaQuestionsContainer:document.getElementById("triviaQuestionsContainer"),addBracketOption:document.getElementById("addBracketOption"),addTriviaQuestion:document.getElementById("addTriviaQuestion"),editor:document.getElementById("editor"),toastContainer:document.getElementById("toastContainer"),bracket:document.getElementById("bracket"),centerTitle:document.getElementById("centerTitle"),title:document.getElementById("title"),round:document.getElementById("round"),winnerTitle:document.getElementById("winnerTitle"),winner:document.getElementById("winner"),left_container:document.getElementById("left_container"),right_container:document.getElementById("right_container"),left_title:document.getElementById("left_title"),right_title:document.getElementById("right_title"),left_card:document.getElementById("left_card"),left_card_header:document.getElementById("left_card_header"),right_card:document.getElementById("right_card"),right_card_header:document.getElementById("right_card_header"),left_card_zoom_icon:document.getElementById("left_card_zoom_icon"),right_card_zoom_icon:document.getElementById("right_card_zoom_icon"),left_name:document.getElementById("left_name"),right_name:document.getElementById("right_name"),left_score:document.getElementById("left_score"),right_score:document.getElementById("right_score"),left_command:document.getElementById("left_command"),right_command:document.getElementById("right_command"),left_value:document.getElementById("left_value"),text_image_left:document.getElementById("text_image_left"),youtubeEmbedContainer_left:document.getElementById("youtubeEmbedContainer_left"),youtubeEmbed_left:document.getElementById("youtubeEmbed_left"),spotifyEmbedContainer_left:document.getElementById("spotifyEmbedContainer_left"),spotifyEmbed_left:document.getElementById("spotifyEmbed_left"),twitchClipsEmbed_left:document.getElementById("twitchClipsEmbed_left"),videoEmbed_left:document.getElementById("videoEmbed_left"),right_value:document.getElementById("right_value"),text_image_right:document.getElementById("text_image_right"),youtubeEmbedContainer_right:document.getElementById("youtubeEmbedContainer_right"),youtubeEmbed_right:document.getElementById("youtubeEmbed_right"),spotifyEmbedContainer_right:document.getElementById("spotifyEmbedContainer_right"),spotifyEmbed_right:document.getElementById("spotifyEmbed_right"),twitchClipsEmbed_right:document.getElementById("twitchClipsEmbed_right"),videoEmbed_right:document.getElementById("videoEmbed_right"),left_info:document.getElementById("left_info"),right_info:document.getElementById("right_info"),restart:document.getElementById("restart"),hideScore:document.getElementById("hideScore"),hideScoreIcon:document.getElementById("hideScoreIcon"),enableVoting:document.getElementById("enableVoting"),pickWinner:document.getElementById("pickWinner"),enableVotingTierlist:document.getElementById("enableVotingTierlist"),tierlist:document.getElementById("tierlist"),tierlistContainer:document.getElementById("tierlistContainer"),upcoming:document.getElementById("upcoming"),upcoming_thumbnails:document.getElementById("upcoming_thumbnails"),tierlistItem:document.getElementById("tierlistItem"),tierlistItemDrag:document.getElementById("tierlistItemDrag"),tierlistLabel0:document.getElementById("tierlistLabel0"),tierlistLabel1:document.getElementById("tierlistLabel1"),tierlistLabel2:document.getElementById("tierlistLabel2"),tierlistLabel3:document.getElementById("tierlistLabel3"),tierlistLabel4:document.getElementById("tierlistLabel4"),tierlistLabel5:document.getElementById("tierlistLabel5"),tierlistScore0:document.getElementById("tierlistScore0"),tierlistScore1:document.getElementById("tierlistScore1"),tierlistScore2:document.getElementById("tierlistScore2"),tierlistScore3:document.getElementById("tierlistScore3"),tierlistScore4:document.getElementById("tierlistScore4"),tierlistScore5:document.getElementById("tierlistScore5"),currentTierlistItemName:document.getElementById("currentTierlistItemName"),currentTierlistItem:document.getElementById("currentTierlistItem"),pickWinnerTierlist:document.getElementById("pickWinnerTierlist"),hideScoreTierlist:document.getElementById("hideScoreTierlist"),hideScoreTierlistIcon:document.getElementById("hideScoreTierlistIcon"),text_image_tierlist:document.getElementById("text_image_tierlist"),youtubeEmbedContainer_tierlist:document.getElementById("youtubeEmbedContainer_tierlist"),youtubeEmbed_tierlist:document.getElementById("youtubeEmbed_tierlist"),spotifyEmbedContainer_tierlist:document.getElementById("spotifyEmbedContainer_tierlist"),spotifyEmbed_tierlist:document.getElementById("spotifyEmbed_tierlist"),twitchClipsEmbed_tierlist:document.getElementById("twitchClipsEmbed_tierlist"),videoEmbed_tierlist:document.getElementById("videoEmbed_tierlist"),triviaPoints:document.getElementById("triviaPoints"),questionTimerDiv:document.getElementById("questionTimerDiv"),questionTimerValue:document.getElementById("questionTimerValue"),questionTimer:document.getElementById("questionTimer"),triviaScoring:document.getElementById("triviaScoring"),oneChance:document.getElementById("oneChance"),showHint:document.getElementById("showHint"),triviaSettingsWarning:document.getElementById("triviaSettingsWarning"),dismissTriviaSettingsButton:document.getElementById("dismissTriviaSettingsButton"),startTriviaButton:document.getElementById("startTriviaButton"),trivia:document.getElementById("trivia"),triviaTitleCard:document.getElementById("triviaTitleCard"),triviaDescriptionCard:document.getElementById("triviaDescriptionCard"),questionNumber:document.getElementById("questionNumber"),triviaTimerDiv:document.getElementById("triviaTimerDiv"),triviaTimer:document.getElementById("triviaTimer"),question:document.getElementById("question"),triviaAnswer:document.getElementById("triviaAnswer"),triviaChoices:document.getElementById("triviaChoices"),choice1A:document.getElementById("choice1A"),choice1B:document.getElementById("choice1B"),choice2A:document.getElementById("choice2A"),choice2B:document.getElementById("choice2B"),choice3A:document.getElementById("choice3A"),choice3B:document.getElementById("choice3B"),choice4A:document.getElementById("choice4A"),choice4B:document.getElementById("choice4B"),triviaUsersDiv:document.getElementById("triviaUsersDiv"),triviaUsers:document.getElementById("triviaUsers"),triviaMedia:document.getElementById("triviaMedia"),image_trivia:document.getElementById("image_trivia"),youtubeEmbedContainer_trivia:document.getElementById("youtubeEmbedContainer_trivia"),youtubeEmbed_trivia:document.getElementById("youtubeEmbed_trivia"),spotifyEmbedContainer_trivia:document.getElementById("spotifyEmbedContainer_trivia"),spotifyEmbed_trivia:document.getElementById("spotifyEmbed_trivia"),twitchClipsEmbed_trivia:document.getElementById("twitchClipsEmbed_trivia"),videoEmbed_trivia:document.getElementById("videoEmbed_trivia")};const{animate:animate,createTimeline:createTimeline,utils:utils,createDraggable:createDraggable}=anime,icons={text:'<i class="material-icons notranslate">description</i>',image:'<i class="material-icons notranslate">image</i>',youtube:'<i class="material-icons notranslate">play_arrow</i>',twitch:'<i class="material-icons notranslate">movie_creation</i>',spotify:'<i class="material-icons notranslate">audiotrack</i>',streamable:'<i class="material-icons notranslate">play_arrow</i>'},spotifyURLRegex=/https?:\/\/(?:embed\.|open\.)(?:spotify\.com\/)(?:(album|track|playlist|episode)\/|\?uri=spotify:track:)((\w|-){22})/;let client,loginButton,loginExpiredModal,tierlistEditorModal,previewModal,generateChatModal,generateModal,communityModal,startModal,startTriviaModal,publishedModal,importModal,votePopover,votePopoverTierlist,currentFormat,startID,triviaPoints,darkTheme=!0,currentBracket={},currentTierlist={},voters=[],voting_enabled=!1,currentTime=0,vote_results={left:0,right:0},USER={channel:"",twitchLogin:!1,access_token:"",userID:"",platform:""},BRACKETS={brackets:[]},TRIVIA={trivia:[]};function resetSettings(){return localStorage.setItem("USER",JSON.stringify({channel:"",twitchLogin:!1,access_token:"",userID:"",platform:""})),localforage.setItem("BRACKETS_TIERLISTS",JSON.stringify([])),localforage.setItem("TRIVIA",JSON.stringify([])),location.reload(),!1}async function refreshData(){darkTheme=elements.darkTheme.checked??!0,USER.twitchLogin||(USER.channel=escapeString(elements.channelName.value.replace(/\s+/g,"").toLowerCase()),USER.platform="twitch"),!USER.userID&&USER.channel&&(USER.userID=await getUserID(USER.channel))}function saveSettings(){refreshData(),localStorage.setItem("USER",JSON.stringify(USER)),localforage.setItem("BRACKETS_TIERLISTS",JSON.stringify(BRACKETS)),localforage.setItem("TRIVIA",JSON.stringify(TRIVIA)),localStorage.setItem("darkTheme",darkTheme)}async function loadAndConnect(){await load_localStorage(),refreshData();const e=new Proxy(new URLSearchParams(window.location.search),{get:(e,t)=>e.get(t)});if(e.channel&&!USER.channel&&!USER.twitchLogin&&!USER.access_token&&!USER.userID){let t=e.channel.replace(/\s+/g,"").toLowerCase();elements.channelName.value=t,USER.channel=t,window.history.replaceState({},document.title,"/")}if(USER.twitchLogin&&!await checkToken(USER.access_token))return USER.channel="",void loginExpiredModal.show();USER.channel&&connect()}async function load_localStorage(){localStorage.getItem("USER")?(USER=JSON.parse(localStorage.getItem("USER")),elements.channelName.value=USER.channel):console.log("localStorage user info not found"),localforage.config({driver:localforage.INDEXEDDB,name:"chat.vote/blt",version:1,storeName:"blt",description:"brackets, tierlists and trivia"});try{const e=await localforage.getItem("BRACKETS_TIERLISTS");e?(BRACKETS=JSON.parse(e),loadBrackets()):(console.log("localStorage brackets/tierlists not found"),elements.myBrackets.innerHTML='<span class="text-body-secondary">Nothing here</span>')}catch(e){console.log(e)}try{const e=await localforage.getItem("TRIVIA");e?(TRIVIA=JSON.parse(e),loadTrivia()):(console.log("localStorage trivia not found"),elements.myTrivia.innerHTML='<span class="text-body-secondary">Nothing here</span>')}catch(e){console.log(e)}}async function loadPFP(){if(!USER.channel)return void(elements.topRight.innerHTML=' <div class="btn-group" role="group" aria-label="login options">\n      <a\n        role="button"\n        id="loginButton"\n        onclick="login()"\n        class="btn btn-twitch"\n        tabindex="0"\n        data-bs-container="body"\n        data-bs-custom-class="custom-popover"\n        data-bs-placement="bottom"\n        data-bs-trigger="manual"\n        data-bs-toggle="popover"\n        data-bs-title="Not signed in"\n        data-bs-content="You need sign in first"\n        ><span class="twitch-icon"></span>Sign in with Twitch</a\n      >\n      <div class="btn-group" role="group">\n        <button\n          id="btnGroupDropLogin"\n          type="button"\n          class="btn btn-twitch dropdown-toggle"\n          data-bs-toggle="dropdown"\n          data-bs-auto-close="outside"\n          aria-label="other login option, connect manually"\n          aria-expanded="false"\n        ></button>\n        <div class="dropdown-menu dropdown-menu-end" aria-labelledby="btnGroupDropLogin">\n          <div class="p-3" style="width: 300px">\n            <label for="channelName" class="form-label">Connect to chat directly</label>\n            <div class="input-group mb-3">\n              <span class="input-group-text" id="directLoginChannel">twitch.tv/</span>\n              <input type="text" class="form-control" id="channelName" aria-describedby="directLoginChannel" />\n            </div>\n            <small class="text-body-secondary">Some features will not be available if you connect directly</small><br />\n            <button type="button" onclick="connect()" class="btn btn-primary float-end">Connect</button>\n          </div>\n        </div>\n      </div>\n    </div>');let e=await get7TVPFP(USER.userID);"/pics/donk.png"==e&&USER.access_token&&(e=await getTwitchPFP(USER.channel,USER.access_token)),elements.topRight.innerHTML=`\n    <div class="btn-group" role="group" aria-label="Button group with nested dropdown">\n    <button type="button" id="btnGroupDrop2" class="btn btn-${darkTheme?"dark":"secondary"}"><img src="${e}" alt="profile pic" style="height:2em;"></button>\n    <div class="btn-group" role="group">\n    <button id="btnGroupDrop1" type="button" class="btn btn-${darkTheme?"dark":"secondary"} dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">\n    ${USER.channel}\n    </button>\n    <ul class="dropdown-menu dropdown-menu-lg-end" aria-labelledby="btnGroupDrop1">\n    <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n    </ul>\n    </div>\n    </div>`}function login(){return elements.topRight.innerHTML='<div class="btn-group" role="group" aria-label="log in button group">\n      <button type="button" class="btn btn-twitch"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></button>\n      <div class="btn-group" role="group">\n          <button id="btnGroupDropLogin" type="button" class="btn btn-twitch dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">\n        </button>\n          <ul class="dropdown-menu dropdown-menu-lg-end" aria-labelledby="btnGroupDropLogin">\n              <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n          </ul>\n      </div>\n  </div>',window.open("/prompt.html","loginWindow","toolbar=0,status=0,scrollbars=0,width=500px,height=800px"),!1}function checkLogin(){return!!USER.channel||(loginButton.show(),setTimeout((function(){loginButton.hide()}),4e3),!1)}function logout(){elements.topRight.innerHTML='<div class="btn-group" role="group" aria-label="login options">\n    <a\n      role="button"\n      id="loginButton"\n      onclick="login()"\n      class="btn btn-twitch"\n      tabindex="0"\n      data-bs-container="body"\n      data-bs-custom-class="custom-popover"\n      data-bs-placement="bottom"\n      data-bs-trigger="manual"\n      data-bs-toggle="popover"\n      data-bs-title="Not signed in"\n      data-bs-content="You need sign in first"\n      ><span class="twitch-icon"></span>Sign in with Twitch</a\n    >\n    <div class="btn-group" role="group">\n      <button\n        id="btnGroupDropLogin"\n        type="button"\n        class="btn btn-twitch dropdown-toggle"\n        data-bs-toggle="dropdown"\n        data-bs-auto-close="outside"\n        aria-label="other login option, connect manually"\n        aria-expanded="false"\n      ></button>\n      <div class="dropdown-menu dropdown-menu-end" aria-labelledby="btnGroupDropLogin">\n        <div class="p-3" style="width: 300px">\n          <label for="channelName" class="form-label">Connect to chat directly</label>\n          <div class="input-group mb-3">\n            <span class="input-group-text" id="directLoginChannel">twitch.tv/</span>\n            <input type="text" class="form-control" id="channelName" aria-describedby="directLoginChannel" />\n          </div>\n          <small class="text-body-secondary">Some features will not be available if you connect directly</small><br />\n          <button type="button" onclick="connect()" class="btn btn-primary float-end">Connect</button>\n        </div>\n      </div>\n    </div>\n  </div>',resetSettings()}function connect(){elements.status.innerHTML='\n    <h4>\n    <span class="badge bg-warning">Connecting... \n    <div class="spinner-border" style="width:18px;height:18px;" role="status"><span class="visually-hidden">Loading...</span></div>\n    </span>\n    </h4>',elements.topRight.innerHTML='\n    <div class="btn-group" role="group" aria-label="log in button group">\n    <button type="button" class="btn btn-twitch"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></button>\n    <div class="btn-group" role="group">\n    <button id="btnGroupDropLogin" type="button" class="btn btn-twitch dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false"></button>\n    <ul class="dropdown-menu dropdown-menu-lg-end" aria-labelledby="btnGroupDrop1">\n    <li><a class="dropdown-item" onclick="logout()" href="#"><i class="material-icons notranslate">logout</i>Log out</a></li>\n    </ul>\n    </div>\n    </div>',refreshData(),loadBadges(USER.channel);let e={options:{clientId:CLIENT_ID,debug:!1},connection:{secure:!0,reconnect:!0},channels:[USER.channel]};client=new tmi.client(e),client.on("message",(async(e,t,n,i)=>{let a=n.split(" ").filter(Boolean)[0].toLowerCase();if(triviaStarted){if(triviaUsersAnswered.includes(t.username))return;if(triviaPoints<1)return;elements.oneChance.checked&&triviaUsersAnswered.push(t.username);let e=1;if("multipleChoice"==answerTypes[questionNumber-1]){if(n.trim()!==correctChoice){if("timer"!=triviaScoring)return;e=-1}}else if(!triviaAnswer.includes(n.trim().toLowerCase())){if("timer"!=triviaScoring)return;e=-1}let i=triviaPoints;if("timer"==triviaScoring){let t=(Date.now()-triviaRoundTimestamp)/(1e3*triviaQuestionTimer);i=Math.floor(triviaPoints-triviaPoints*t)*e}let a=triviaUsers.findIndex((e=>e.username===t.username));if(-1!=a)triviaUsers[a].points+=i,updateTriviaLeaderboard();else{addTriviaUser({points:i,id:t["user-id"],username:t.username,displayname:t["display-name"],color:t.color,badges:addBadges(t.badges,t["user-id"],t["first-msg"])})}return triviaUsersAnswered.push(t.username),"decay"==triviaScoring&&triviaPoints--,void("first"==triviaScoring&&(triviaPoints=0))}if(!voting_enabled)return"single"==currentFormat&&("1"==a||"a"==a||"2"==a||"b"==a)&&(Date.now()-currentTime)/1e3>10&&(currentTime=Date.now(),votePopover.show(),setTimeout((function(){votePopover.hide()}),2e3)),void("tierlist"==currentFormat&&currentTierlistCommands.includes(a)&&(Date.now()-currentTime)/1e3>10&&(currentTime=Date.now(),votePopoverTierlist.show(),setTimeout((function(){votePopoverTierlist.hide()}),2e3)));if(!voters.includes(t["user-id"])){if("single"==currentFormat){if(a==currentCommand.left)return vote_results.left++,voters.push(t["user-id"]),void updateScores();if(a==currentCommand.right)return vote_results.right++,voters.push(t["user-id"]),void updateScores()}if("tierlist"==currentFormat&&currentTierlistCommands.includes(a)){let e=currentTierlistData.findIndex((e=>e.command===a));if(-1==e)return;return currentTierlistData[e].score+=1,voters.push(t["user-id"]),void updateScores()}}})),client.on("connected",(async(e,t)=>{console.log(`Connected to ${e}:${t}`),elements.status.innerHTML='<h4><span class="badge bg-success">Connected :)</span></h4>',saveSettings(),sendUsername("chat.vote/blt",USER.channel,"twitch"==USER.platform?`twitch - ${USER.twitchLogin}`:"youtube"),loadPFP()})),client.on("disconnected",(e=>{elements.status.innerHTML=`<h4><span class="badge bg-danger">Disconnected: ${e}</span></h4>`})),client.on("notice",((e,t,n)=>{elements.status.innerHTML=`<h4><span class="badge bg-danger">Disconnected: ${n}</span></h4>`})),client.connect().catch(console.error)}function switchTheme(e){document.documentElement.setAttribute("data-bs-theme",e?"dark":"light"),document.getElementById("twitchLogo").style.filter=`invert(${e?.25:.65})`,document.getElementById("btnGroupDrop1")&&document.getElementById("btnGroupDrop2")&&(document.getElementById("btnGroupDrop1").classList.remove(""+(e?"btn-secondary":"btn-dark")),document.getElementById("btnGroupDrop1").classList.add(""+(e?"btn-dark":"btn-secondary")),document.getElementById("btnGroupDrop2").classList.remove(""+(e?"btn-secondary":"btn-dark")),document.getElementById("btnGroupDrop2").classList.add(""+(e?"btn-dark":"btn-secondary")))}function addTriviaUser(e){e.name=e.username==e.displayname.toLowerCase()?`${e.displayname}`:`${e.displayname} (${e.username})`,e.color=e.color?e.color:"#FFFFFF",triviaUsers.push(e),updateTriviaLeaderboard()}function updateTriviaLeaderboard(){triviaUsers.sort((function(e,t){return e.points>t.points?-1:e.points==t.points?0:1})),elements.triviaUsers.innerHTML="";let e="";for(let t=0,n=triviaUsers.length;t<n;t++)e+=`\n    <li class="list-group-item">\n    ${triviaUsers[t].badges}<span style="color:${triviaUsers[t].color};">${triviaUsers[t].name}:</span>\n    ${triviaUsers[t].points.toLocaleString()} ${1==triviaUsers[t].points?"point":"points"}\n    </li>`;elements.triviaUsers.innerHTML=e}function addBracketOption(e="",t="",n="",i="",a=""){let r=++document.querySelectorAll(".option-name").length,o="text";r>1&&(o=Array.from(document.getElementsByClassName("option-type")).find((e=>parseInt(e.dataset.optionId,10)===r-1)).value||"text"),t&&(o=t),elements.bracketOptionsContainer.insertAdjacentHTML("beforeend",`<div class="card mb-2" data-option-id="${r}">\n      <div class="card-header">\n      Option #${r}\n      <i class="material-icons notranslate deletebtn float-end" onclick="deleteBracketOption('${r}')">delete_forever</i>\n      </div>\n      <div class="card-body">\n        <div class="input-group mb-3">\n          <span class="input-group-text">Value/Link</span>\n          <input type="text" class="form-control option-value" data-option-id="${r}" onchange="saveBracket(true)" value="${n}" ${"streamable"==o?`data-video="${a}"`:""} placeholder="Option Value/Link" aria-label="Option Value" />\n          <button class="btn btn-outline-secondary" onclick="previewOption(${r},this)" type="button"><i class="material-icons notranslate">preview</i>Preview</button>\n        </div>\n\n        <div class="input-group mb-3">\n          <label class="input-group-text">Type</label>\n          <select class="form-select option-type" data-option-id="${r}" onchange="saveBracket(true)">\n            <option value="text" ${"text"==o?"selected":""}>Text</option>\n            <option value="image" ${"image"==o?"selected":""}>Image</option>\n            <option value="youtube" ${"youtube"==o?"selected":""}>YouTube video</option>\n            <option value="twitch" ${"twitch"==o?"selected":""}>Twitch clip</option>\n            <option value="spotify" ${"spotify"==o?"selected":""}>Spotify song</option>\n            <option value="streamable" ${"streamable"==o?"selected":""}>Streamable video</option>\n          </select>\n        </div>\n\n        <div class="input-group mb-3">\n          <span class="input-group-text">Name</span>\n          <input type="text" class="form-control option-name" data-option-id="${r}" onchange="saveBracket(true)" value="${e}"  placeholder="Option Name" aria-label="Option Name" />\n        </div>\n\n        <div class="input-group">\n          <span class="input-group-text">Thumbnail</span>\n          <input type="text" class="form-control option-thumbnail" data-option-id="${r}" onchange="saveBracket(true)" value="${i}" placeholder="Thumbnail" aria-label="Thumbnail" />\n        </div>\n      </div>\n    </div>`)}function addTriviaQuestion(e=null,t="",n="",i=[],a=""){let r=++document.querySelectorAll(".trivia-question").length,o="text",l=!1;if(r>1){let e=Array.from(document.getElementsByClassName("question-type")).find((e=>parseInt(e.dataset.questionId,10)===r-1)),t=Array.from(document.getElementsByClassName("multiple-choice")).find((e=>parseInt(e.dataset.questionId,10)===r-1));o=e.value||"text",l=t.checked}t&&(o=t),null!==e&&(l=e),elements.triviaQuestionsContainer.insertAdjacentHTML("beforeend",`<div class="card mb-2" data-question-id="${r}">\n      <div class="card-header">\n      Question #${r}\n      <i class="material-icons notranslate deletebtn float-end" onclick="deleteTriviaQuestion('${r}')">delete_forever</i>\n      </div>\n      <div class="card-body">\n\n\n          <div class="form-check form-switch">\n            <input class="form-check-input multiple-choice" onchange="saveTrivia(true)" data-question-id="${r}" type="checkbox" role="switch" id="multipleChoice${r}" ${l?"checked":""}/>\n            <label class="form-check-label" for="multipleChoice${r}">Multiple choice question</label>\n          </div>\n\n\n        <div class="input-group mb-3">\n          <label class="input-group-text">Question type</label>\n          <select class="form-select question-type" data-question-id="${r}" onchange="saveTrivia(true)">\n            <option value="text" ${"text"==o?"selected":""}>Text only</option>\n            <option value="image" ${"image"==o?"selected":""}>Image</option>\n            <option value="youtube" ${"youtube"==o?"selected":""}>YouTube video</option>\n            <option value="twitch" ${"twitch"==o?"selected":""}>Twitch clip</option>\n            <option value="spotify" ${"spotify"==o?"selected":""}>Spotify song</option>\n            <option value="streamable" ${"streamable"==o?"selected":""}>Streamable video</option>\n          </select>\n        </div>\n\n        <div class="input-group mb-3">\n          <span class="input-group-text">Question</span>\n          <input type="text" class="form-control trivia-question" data-question-id="${r}" onchange="saveTrivia(true)" value="${n}"  placeholder="Question" aria-label="Question" />\n        </div>\n\n        <div class="input-group mb-3">\n          <span class="input-group-text">Answer</span>\n          <input type="text" class="form-control trivia-answer" data-question-id="${r}" onchange="saveTrivia(true)" value="${i}"  placeholder="Answer" aria-label="Answer" />\n        </div>\n\n        <div class="input-group mb-3">\n          <span class="input-group-text">Media</span>\n          <input type="text" class="form-control trivia-media" data-question-id="${r}" onchange="saveTrivia(true)" value="${a}" ${"streamable"==o?`data-video="${a}"`:""} placeholder="Question media URL" aria-label="Question media URL" />\n          <button class="btn btn-outline-secondary" onclick="previewQuestion(${r},this)" type="button"><i class="material-icons notranslate">preview</i>Preview</button>\n        </div>\n\n      </div>\n    </div>`)}function deleteBracketOption(e){e=parseInt(e,10);let t=parseInt(elements.bracketTitle.dataset.bracketId,10),n=BRACKETS.brackets.findIndex((e=>e.id===t));BRACKETS.brackets[n].options.splice(e-1,1),editBracket(t),saveBracket(!0)}function deleteTriviaQuestion(e){e=parseInt(e,10);let t=parseInt(elements.triviaTitle.dataset.triviaId,10),n=TRIVIA.trivia.findIndex((e=>e.id===t));TRIVIA.trivia[n].questions.splice(e-1,1),editTrivia(t),saveTrivia(!0)}async function previewOption(e,t){t.innerHTML=spinner,e=parseInt(e,10);let n=document.querySelectorAll(".option-value"),i=document.querySelectorAll(".option-type"),a=document.querySelectorAll(".option-name"),r=document.querySelectorAll(".option-thumbnail"),o=Array.from(n).find((t=>t.dataset.optionId==e)),l=Array.from(i).find((t=>t.dataset.optionId==e)),s=Array.from(a).find((t=>t.dataset.optionId==e)),d=Array.from(r).find((t=>t.dataset.optionId==e)),c=parseLink(o?.value?.replace(/\s+/g,""));if(c||"image"==l.value||(l.value="text"),"text"==l.value&&(elements.previewModalBody.innerHTML=`\n    <div class="card">\n    <div class="card-body">\n    ${escapeString(o?.value)||'<span class="text-body-secondary">Empty option</span>'}\n    </div>\n    </div>`,previewModal.show()),"image"==l.value){if(!(o?.value.match(/(http(s)?:\/\/.)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)/g)||null))return showToast("Invalid image URL","warning",3e3),void(t.innerHTML='<i class="material-icons notranslate">preview</i>Preview');elements.previewModalBody.innerHTML=`\n    <div class="card">\n    <div class="card-body">\n    <img src="https://proxy.donk.workers.dev/?url=${encodeURI(o.value)}" alt="${s.value}" title="${s.value}" class="option-image">\n    </div>\n    </div>`,previewModal.show()}"youtube"==c?.type&&(s.value||d.value||(c=await getRequestInfo(c),s.value=c.title,d.value=c.thumbnail),l.value="youtube",elements.previewModalBody.innerHTML=`\n    <div class="card">\n    <div class="card-body">\n    <iframe \n    type="text/html" \n    width="100%" height="480" \n    src="https://www.youtube.com/embed/${c.id}?autoplay=1&origin=${window.location.hostname}" \n    frameborder="0">\n    </iframe>\n    </div>\n    </div>`,previewModal.show()),"twitch"==c?.type&&(s.value||d.value||(c=await getRequestInfo(c),s.value=c.title,d.value=c.thumbnail),l.value="twitch",elements.previewModalBody.innerHTML=`\n      <div class="card">\n      <div class="card-body">\n      <iframe \n      src="https://clips.twitch.tv/embed?clip=${c.id}&parent=${window.location.hostname}&autoplay=true" \n      height="480" \n      width="100%" \n      preload="auto" \n      >\n      </iframe>\n      </div>\n      </div>`,previewModal.show()),"spotify"==c?.type&&(s.value||d.value||(c=await getRequestInfo(c),s.value=c.title,d.value=c.thumbnail),l.value="spotify",elements.previewModalBody.innerHTML=`\n      <div class="card">\n      <div class="card-body">\n      <iframe \n      style="border-radius:12px" src="https://open.spotify.com/embed/track/${c.id}${darkTheme?"?theme=0":""}" \n      width="100%" height="352" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; picture-in-picture">\n      </iframe>\n      </div>\n      </div>`,previewModal.show()),"streamable"==c?.type?(c=await getRequestInfo(c),s.value=c.title,d.value=c.thumbnail,l.value="streamable",o.dataset.video=c.video,elements.previewModalBody.innerHTML=`\n      <div class="card">\n      <div class="card-body">\n      <video src="${c.video}" controls autoplay height="480" width="100%"></video>\n      </div>\n      </div>`,previewModal.show()):o.dataset.video="",t.innerHTML='<i class="material-icons notranslate">preview</i>Preview',saveBracket()}async function previewQuestion(e,t){t.innerHTML=spinner,e=parseInt(e,10);let n=document.querySelectorAll(".question-type"),i=document.querySelectorAll(".trivia-question"),a=document.querySelectorAll(".trivia-answer"),r=document.querySelectorAll(".trivia-media"),o=Array.from(n).find((t=>t.dataset.questionId==e)),l=Array.from(i).find((t=>t.dataset.questionId==e)),s=(Array.from(a).find((t=>t.dataset.questionId==e)),Array.from(r).find((t=>t.dataset.questionId==e))),d=parseLink(s?.value?.replace(/\s+/g,""));if(d||"image"==o.value||(o.value="text"),"text"==o.value&&(elements.previewModalBody.innerHTML=`\n    <div class="card">\n    <div class="card-body">\n    ${escapeString(l?.value)||'<span class="text-body-secondary">Empty question</span>'}\n    </div>\n    </div>`,previewModal.show()),"image"==o.value){if(!(s?.value.match(/(http(s)?:\/\/.)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)/g)||null))return showToast("Invalid image URL","warning",3e3),void(t.innerHTML='<i class="material-icons notranslate">preview</i>Preview');elements.previewModalBody.innerHTML=`\n    <div class="card">\n    <div class="card-body">\n    <img src="https://proxy.donk.workers.dev/?url=${encodeURI(s.value)}" alt="${l.value}" title="${l.value}" class="option-image">\n    </div>\n    </div>`,previewModal.show()}"youtube"==d?.type&&(o.value="youtube",elements.previewModalBody.innerHTML=`\n    <div class="card">\n    <div class="card-body">\n    <iframe \n    type="text/html" \n    width="100%" height="480" \n    src="https://www.youtube.com/embed/${d.id}?autoplay=1&origin=${window.location.hostname}" \n    frameborder="0">\n    </iframe>\n    </div>\n    </div>`,previewModal.show()),"twitch"==d?.type&&(o.value="twitch",elements.previewModalBody.innerHTML=`\n      <div class="card">\n      <div class="card-body">\n      <iframe \n      src="https://clips.twitch.tv/embed?clip=${d.id}&parent=${window.location.hostname}&autoplay=true" \n      height="480" \n      width="100%" \n      preload="auto" \n      >\n      </iframe>\n      </div>\n      </div>`,previewModal.show()),"spotify"==d?.type&&(o.value="spotify",elements.previewModalBody.innerHTML=`\n      <div class="card">\n      <div class="card-body">\n      <iframe \n      style="border-radius:12px" src="https://open.spotify.com/embed/track/${d.id}${darkTheme?"?theme=0":""}" \n      width="100%" height="352" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; picture-in-picture">\n      </iframe>\n      </div>\n      </div>`,previewModal.show()),"streamable"==d?.type?(d=await getRequestInfo(d),o.value="streamable",l.dataset.video=d.video,elements.previewModalBody.innerHTML=`\n      <div class="card">\n      <div class="card-body">\n      <video src="${d.video}" controls autoplay height="480" width="100%"></video>\n      </div>\n      </div>`,previewModal.show()):l.dataset.video="",t.innerHTML='<i class="material-icons notranslate">preview</i>Preview',saveTrivia()}function parseLink(e){if(e.includes("twitch.tv")&&(e.includes("/clip/")||e.includes("clips.twitch.tv"))){let t=new URL(e),n="clips.twitch.tv"===t.hostname?/^\/(\w+(?:\/[A-Z]\w+)?(?:[\-\w]*))(?:\/|$)/.exec(t.pathname):/^\/\w+\/clip\/(\w+(?:\/[A-Z]\w+)?(?:[\-\w]*))(?:\/|$)/.exec(t.pathname);return n&&n[1]?{type:"twitch",id:n[1]}:null}if(e.includes("youtube.com")||e.includes("youtu.be")){const t=/(youtu.*be.*)\/(watch\?v=|embed\/|v|shorts|)(.*?((?=[&#?])|$))/gm.exec(e)||null;return 11!=t[3]?.length?null:{type:"youtube",id:t[3]}}if(e.includes("spotify.com")){let t=e.match(spotifyURLRegex);return!t[2]||"track"!==t[1]&&"episode"!==t[1]?null:{type:"spotify",id:t[2]}}if(e.includes("streamable.com")){const t=e.match(/streamable\.com\/([a-zA-Z0-9]+)/);return t[1]?{type:"streamable",id:t[1]}:null}return null}async function getRequestInfo(e){if("twitch"==e.type)try{let t=await fetch(`https://helper.donk.workers.dev/twitch/clips?id=${e.id}`),n=await t.json();console.log(n),e.title=n.data[0].title||"(untitled)",e.channel=n.data[0].broadcaster_name||"(unknown)",e.thumbnail=n.data[0].thumbnail_url,e.duration=n.data[0].duration,e.views=n.data[0].view_count}catch(e){return showToast("Could not get clip info","warning",3e3),void console.log("getRequestInfo twitch clip error",e)}if("spotify"==e.type)try{let t=await fetch(`https://helper.donk.workers.dev/spotify/tracks?ids=${e.id}`),n=await t.json();if(console.log(n),e.title=n.tracks[0].name||"(untitled)",e.channel=n.tracks[0].artists[0].name||"(unknown)",e.thumbnail=n.tracks[0].album.images[0].url,e.duration=n.tracks[0].duration_ms/1e3,!n.tracks[0].is_playable)return void showToast("This song is not playable","warning",3e3)}catch(e){return showToast("Could not get song info","warning",3e3),void console.log("getRequestInfo spotify error",e)}if("youtube"==e.type)try{let t=await fetch(`https://helper.donk.workers.dev/youtube/videos?id=${e.id}`),n=await t.json();if(console.log(n),e.title=n.items[0].snippet.title||"(untitled)",e.channel=n.items[0].snippet.channelTitle||"(unknown)",e.thumbnail=n.items[0].snippet.thumbnails.medium.url,e.duration=ISO8601ToSeconds(n.items[0].contentDetails.duration),e.views=n.items[0].statistics.viewCount,"ytAgeRestricted"==n.items[0].contentDetails?.contentRating?.ytRating||!n.items[0].status?.embeddable)return void showToast("This video is age restricted or not embeddable","warning",3e3)}catch(e){return showToast("Could not get video info","warning",3e3),void console.log("getRequestInfo youtube error",e)}if("streamable"==e.type)try{let t=await fetch(`https://helper.donk.workers.dev/streamable/videos?id=${e.id}`),n=await t.json();console.log(n),e.title=n.title||"(untitled)",e.channel="(unknown)",e.thumbnail=n.thumbnail_url.startsWith("//")?`https:${n.thumbnail_url}`:n.thumbnail_url,e.duration=n.files.mp4.duration,e.video=n.files.mp4.url}catch(e){return showToast("Could not get video info","warning",3e3),void console.log("getRequestInfo streamable error",e)}return e}function createBracket(e=!1,t="single"){let n=0;0!==BRACKETS?.brackets?.length&&(n=BRACKETS.brackets.reduce(((e,t)=>e.id>t.id?e:t)).id),BRACKETS.brackets.push({id:++n,title:"",description:"",options:[],generated:e,published:!1,defaultFormat:"tiermaker"==t?"tierlist":"single",time:Date.now()}),editBracket(n),saveBracket()}function createTrivia(e=!1){let t=0;0!==TRIVIA?.trivia?.length&&(t=TRIVIA.trivia.reduce(((e,t)=>e.id>t.id?e:t)).id),TRIVIA.trivia.push({id:++t,title:"",description:"",options:[],generated:e,published:!1,time:Date.now()}),editTrivia(t),saveTrivia()}function saveBracket(e=!1){let t=parseInt(elements.bracketTitle.dataset.bracketId,10),n=BRACKETS.brackets.find((e=>e.id===t));n.title=elements.bracketTitle.value||"Untitled bracket",n.description=elements.bracketDescription.value||"No description",e&&(n.generated=!1,n.published=!1);let i=document.querySelectorAll(".option-name"),a=document.querySelectorAll(".option-type"),r=document.querySelectorAll(".option-value"),o=document.querySelectorAll(".option-thumbnail");n.options=[];for(let e=0;e<i.length;e++){let t=parseLink(r[e].value?.replace(/\s+/g,""));switch(t?.type){case"youtube":case"twitch":case"spotify":n.options.push({value:r[e].value,type:a[e].value,name:i[e].value,thumbnail:o[e].value,id:t.id});break;case"streamable":n.options.push({value:r[e].value,type:a[e].value,name:i[e].value,thumbnail:o[e].value,id:t.id,video:r[e].dataset?.video||""});break;default:n.options.push({value:r[e].value,type:a[e].value,name:i[e].value,thumbnail:o[e].value});break}}loadBrackets(),saveSettings()}function saveTrivia(e=!1){let t=parseInt(elements.triviaTitle.dataset.triviaId,10),n=TRIVIA.trivia.find((e=>e.id===t));n.title=elements.triviaTitle.value||"Untitled trivia",n.description=elements.triviaDescription.value||"No description",e&&(n.generated=!1,n.published=!1);let i=document.querySelectorAll(".multiple-choice"),a=document.querySelectorAll(".question-type"),r=document.querySelectorAll(".trivia-question"),o=document.querySelectorAll(".trivia-answer"),l=document.querySelectorAll(".trivia-media");n.questions=[];for(let e=0;e<r.length;e++){let t=parseLink(l[e].value?.replace(/\s+/g,""));switch(t?.type){case"youtube":case"twitch":case"spotify":n.questions.push({multipleChoice:i[e].checked,type:a[e].value,question:r[e].value,answer:o[e].value,media:l[e].value,id:t.id});break;case"streamable":n.questions.push({multipleChoice:i[e].checked,type:a[e].value,question:r[e].value,answer:o[e].value,media:l[e].value,id:t.id,video:l[e].dataset?.video||""});break;default:n.questions.push({multipleChoice:i[e].checked,type:a[e].value,question:r[e].value,answer:o[e].value,media:l[e].value});break}}loadTrivia(),saveSettings()}function showStartModal(e){startID=e;let t=parseInt(startID,10),n=BRACKETS.brackets.find((e=>e.id===t));"tierlist"==n?.defaultFormat?(elements.formatSelect.value="tierlist",elements.bracketSettings.style.display="none",elements.tierlistSettings.style.display=""):(elements.formatSelect.value="single",elements.bracketSettings.style.display="",elements.tierlistSettings.style.display="none"),n.options.length<2?showToast("Bracket must have 2 options at least","warning",3e3):(n.options.flatMap((e=>e.type)).includes("spotify")?elements.spotifyWarning.style.display="":elements.spotifyWarning.style.display="none",startModal.show())}function showStartTriviaModal(e){startID=e;let t=parseInt(startID,10);TRIVIA.trivia.find((e=>e.id===t)).questions.flatMap((e=>e.type)).includes("spotify")?elements.spotifyWarning.style.display="":elements.spotifyWarning.style.display="none",startTriviaModal.show()}function startBracket(){if(!checkLogin())return;let e=parseInt(startID,10),t=structuredClone(BRACKETS.brackets.find((t=>t.id===e)));if(t.options.length<2)return void showToast("Bracket must have 2 options at least","warning",3e3);let n=elements.formatSelect.value||"single",i=parseInt(elements.optionLimit.value,10)||0;if(i>0)for(;t.options.length>i;)t.options.splice(Math.floor(Math.random()*t.options.length),1);switch(n){case"single":currentFormat="single",startSingleElimination(t);break;case"tierlist":currentFormat="tierlist",startTierlist(t);break;default:return void showToast("Unknown format","warning",3e3)}changeSiteLinkTarget("_blank")}function startSingleElimination(e){let t=e.options.length,n=Math.ceil(Math.log2(t));if(0!=(t&t-1)){let e=1;for(;e<t;)e<<=1;t=e}currentBracket={},currentBracket.round1=[...e.options],shuffleArray(currentBracket.round1);let i=0;for(;currentBracket.round1.length<t;)currentBracket.round1.splice(currentBracket.round1.length-2*i,0,null),i++;for(let e=1;e<=n;e++)currentBracket[`round${e+1}`]=[...Array(currentBracket[`round${e}`].length/2)];elements.editor.style.display="none",elements.bracket.style.display="",elements.title.innerText=e.title,elements.winner.innerHTML=`Winner of ${escapeString(e.title)}<br>`,elements.pickWinner.innerHTML='<i class="material-icons notranslate">navigate_next</i>Next match',console.log(currentBracket),currentRound=1,currentOption=0,currentScores={left:0,right:0},currentCommand={left:"a",right:"b"},elements.restart.disabled=!1,elements.hideScore.disabled=!1,elements.enableVoting.disabled=!1,elements.pickWinner.disabled=!1,elements.left_card_header.style.display="",elements.right_card_header.style.display="",elements.left_title.style.display="",elements.right_title.style.display="",elements.centerTitle.style.display="",elements.winnerTitle.style.display="none",elements.right_card.style="",elements.left_card.style="",promoteOptionAnimation?.revert(),nextMatchAnimation?.revert(),showWinnerAnimation1?.revert(),showWinnerAnimation2?.revert(),showWinnerAnimation3?.revert(),nextMatch()}function startTierlist(e){console.log(e),elements.tierlistContainer.innerHTML="",elements.upcoming_thumbnails.innerHTML="",shuffleArray(e.options);for(let t=0;t<e.options.length;t++){let n=e.options[t].thumbnail?`https://proxy.donk.workers.dev/?url=${encodeURI(e.options[t].thumbnail)}`:"/pics/nothumbnail.png";elements.upcoming_thumbnails.insertAdjacentHTML("beforeend",`<a\n      draggable="false"\n      href="${getItemLink(e.options[t].type,e.options[t].id)}"\n      target="_blank"\n      rel="noopener noreferrer"><img draggable="false" class="border rounded tierlist-item me-1" alt="${e.options[t].name}" title="${e.options[t].name}" loading="lazy" src="${n}" /></a>`)}addTier("S","s","#de0b0b"),addTier("A","a","#d9740f"),addTier("B","b","#dea216"),addTier("C","c","#f7e51b"),addTier("F","f","#08cc12"),addTier("¯\\_(ツ)_/¯","idk","#0fd9cb"),updateScores(),elements.editor.style.display="none",elements.tierlist.style.display="",elements.tierlistItem.style.display="",elements.upcoming.style.display="",currentTierlist={},currentTierlist=structuredClone(e),currentTierlistCommands=currentTierlistData.map((e=>e.command)),nextTierlistItem()}let triviaRoundTimestamp,triviaScoring="first",triviaQuestionTimer=10,questionNumber=1,triviaAnswer=[],triviaStarted=!1,triviaUsersAnswered=[],triviaUsers=[],questionsArray=[],answersArrays=[],mediaArray=[],answerTypes=[];function startTrivia(){if(!checkLogin())return;let e=parseInt(startID,10);questionNumber=0,triviaUsersAnswered=[],triviaUsers=[],elements.triviaUsers.innerHTML="",currentFormat="trivia";let t=structuredClone(TRIVIA.trivia.find((t=>t.id===e)));questionsArray=[],answersArrays=[],mediaArray=[],answerTypes=[];for(let e=0,n=t.questions.length;e<n;e++){if(!t.questions[e].question&&!t.questions[e].media)continue;!t.questions[e].question&&t.questions[e].media?questionsArray.push(`Question #${e+1}`):questionsArray.push(t.questions[e].question),mediaArray.push(t.questions[e].media),answerTypes.push(t.questions[e].multipleChoice?"multipleChoice":"alias");let n=t.questions[e].answer.split("|");for(let e=0;e<n.length;e++)n[e]=n[e].trim().toLowerCase();answersArrays.push(n)}elements.triviaTitleCard.innerText=t.title||"",elements.triviaDescriptionCard.innerText=t.description||"",elements.editor.style.display="none",elements.trivia.style.display="",changeSiteLinkTarget("_blank"),nextQuestion(),elements.triviaSettingsWarning.style.display="",elements.startTriviaButton.style.display="none",elements.dismissTriviaSettingsButton.style.display=""}function nextQuestion(){stopTimer(),questionNumber!=questionsArray.length?(questionNumber++,triviaPoints=parseInt(elements.triviaPoints.value,10),triviaUsersAnswered=[],triviaAnswer=answersArrays[questionNumber-1],elements.questionNumber.innerText=`Question ${questionNumber}/${questionsArray.length}`,elements.question.innerText=questionsArray[questionNumber-1],"multipleChoice"==answerTypes[questionNumber-1]?(elements.triviaAnswer.style.display="none",elements.triviaChoices.style.display="",getChoices()):(elements.triviaAnswer.style.display="",elements.triviaChoices.style.display="none",elements.triviaAnswer.innerHTML=getHint()),resetPlayers(),showTriviaMedia(mediaArray[questionNumber-1]),"timer"==triviaScoring?(elements.triviaTimerDiv.style.display="",startTimer()):(elements.triviaTimerDiv.style.display="none",triviaStarted=!0)):showToast("No more questions","warning",2e3)}function getHint(){if(!elements.showHint.checked)return"Answer: ❔";let e="";for(let t=0;t<triviaAnswer[0].length;t++)triviaAnswer[0].charAt(t).match(/^[0-9a-z]+$/)&&(e+="_ ")," "==triviaAnswer[0].charAt(t)&&(e+="&nbsp; ");return`Answer: ${e}`}let correctChoice,correctChoiceIndex,timerAnimation1,timerAnimation2,triviaChoices=["1","2","3","4"];function getChoices(){triviaAnswer.length<4&&showToast("Question has less than 4 choices","danger",3e3),elements.choice1A.classList="btn btn-primary",elements.choice2A.classList="btn btn-danger",elements.choice3A.classList="btn btn-warning",elements.choice4A.classList="btn btn-info",elements.choice1B.classList="btn btn-outline-primary text-light-emphasis",elements.choice2B.classList="btn btn-outline-danger text-light-emphasis",elements.choice3B.classList="btn btn-outline-warning text-light-emphasis",elements.choice4B.classList="btn btn-outline-info text-light-emphasis";let e=shuffle(structuredClone(triviaAnswer));correctChoiceIndex=e.findIndex((e=>e===triviaAnswer[0])),correctChoice=triviaChoices[correctChoiceIndex],elements.choice1B.innerText=e[0],elements.choice2B.innerText=e[1],elements.choice3B.innerText=e[2],elements.choice4B.innerText=e[3]}function startTimer(){timerAnimation1=animate("#triviaTimer",{width:"100%",duration:1e3,ease:"inOutExpo",onComplete:function(){triviaRoundTimestamp=Date.now(),triviaStarted=!0,timerAnimation2=animate("#triviaTimer",{width:"0%",duration:1e3*triviaQuestionTimer,ease:"linear",onComplete:function(){showAnswer()}})}})}function stopTimer(){timerAnimation1?.pause(),timerAnimation2?.pause(),animate("#triviaTimer",{width:"0%",duration:500,ease:"outBounce"})}function showAnswer(){if(triviaStarted=!1,stopTimer(),"multipleChoice"==answerTypes[questionNumber-1])for(let e=0;e<4;e++)elements[`choice${e+1}A`].classList="btn btn-"+(e==correctChoiceIndex?"success":"secondary"),elements[`choice${e+1}B`].classList=`btn btn-outline-${e==correctChoiceIndex?"success":"secondary"} text-light-emphasis`;else elements.triviaAnswer.innerText=`Answer: ${triviaAnswer[0]}`}function shuffle(e){let t,n=e.length;for(;n>0;)t=Math.floor(Math.random()*n),n--,[e[n],e[t]]=[e[t],e[n]];return e}let nextMatchAnimation,currentRound=1,currentOption=0,currentScores={left:0,right:0},currentCommand={left:"a",right:"b"};function nextMatch(){currentOption==currentBracket[`round${currentRound}`].length&&(currentRound++,currentOption=0);let e="";switch(currentBracket[`round${currentRound}`].length){case 2:e="Finals";break;case 4:e="Semifinals";break;case 8:e="Quarterfinals";break;default:e=`Round of ${currentBracket[`round${currentRound}`].length}`;break}if(elements.round.innerHTML=`${e} • ${currentOption/2+1}/${currentBracket[`round${currentRound}`].length/2}`,Object.keys(currentBracket).length==currentRound)return void showWinner(currentBracket[`round${currentRound}`],currentBracket["round"+(currentRound-1)]);Object.keys(currentBracket).length-1==currentRound&&(elements.pickWinner.innerHTML='<i class="material-icons notranslate">emoji_events</i>Reveal winner');let t=currentBracket[`round${currentRound}`][currentOption++],n=currentBracket[`round${currentRound}`][currentOption++];if(null!==t)if(null!==n){resetPlayers(),showOption("left",t),showOption("right",n);for(let e of document.getElementsByClassName("streamer-vote"))e.style.visibility="visible";resetScores(),elements.keepVotingEnabled.checked||disableVoteButton(),elements.changeCommand.checked?"a"==currentCommand.left?(currentCommand.left="1",currentCommand.right="2"):(currentCommand.left="a",currentCommand.right="b"):(currentCommand.left="1",currentCommand.right="2"),elements.left_command.innerHTML=currentCommand.left,elements.right_command.innerHTML=currentCommand.right,elements.disableAnimations.checked||(promoteOptionAnimation?.revert(),nextMatchAnimation=createTimeline({defaults:{ease:"outElastic(1, .5)",duration:1e3}}).add("#centerTitle",{translateY:["-100%",0]},0).add("#left_title",{translateX:["-100%",0]},0).add("#left_card",{translateX:["-100%",0]},0).add("#right_title",{translateX:["100%",0]},0).add("#right_card",{translateX:["100%",0]},0),elements.changeCommand.checked&&animate(["#left_command","#right_command"],{ease:"outElastic(1, .5)",fontSize:["+=20px","-=20px"],delay:2e3,duration:500}))}else promoteOption(t);else promoteOption(n)}let tierlist_player,currentTierlistItem,promoteOptionAnimation,showWinnerAnimation1,showWinnerAnimation2,showWinnerAnimation3,currentItem=1,currentTierlistData=[{name:"s",command:"s",score:0,weight:4},{name:"a",command:"a",score:0,weight:3},{name:"b",command:"b",score:0,weight:2},{name:"c",command:"c",score:0,weight:1},{name:"f",command:"f",score:0,weight:0},{name:"idk",command:"idk",score:0}],currentTierlistCommands=[];async function nextTierlistItem(){resetPlayers();let e=currentTierlist.options.shift();if(e){if(currentTierlistItem=e,elements.upcoming_thumbnails.firstElementChild.remove(),elements.upcoming_thumbnails.firstElementChild||(elements.upcoming.style.display="none"),elements.currentTierlistItemName.innerText=e.name||"Untitled item",!e?.id&&("youtube"==e.type||"twitch"==e.type||"spotify"==e.type)){let t=parseLink(e.value?.replace(/\s+/g,""));t?e.id=t.id:showToast("Could not load video","warning",3e3)}if("text"==e.type&&(elements.text_image_tierlist.style.display="",elements.text_image_tierlist.innerHTML=escapeString(e.value)||'<span class="text-body-secondary">Empty option</span>'),"image"==e.type){if(elements.text_image_tierlist.style.display="",!(e?.value.match(/(http(s)?:\/\/.)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)/g)||null))return void(elements.text_image_tierlist.innerHTML="Invalid image URL");elements.text_image_tierlist.innerHTML=`<img src="https://proxy.donk.workers.dev/?url=${encodeURI(e.value)}" alt="${e.name}" title="${e.name}">`}if("youtube"==e.type&&(elements.youtubeEmbedContainer_tierlist.style.display="",youtubePlayer_tierlist.loadVideoById(e.id)),"twitch"==e.type&&(elements.twitchClipsEmbed_tierlist.style.display="",elements.twitchClipsEmbed_tierlist.innerHTML=`<iframe src="https://clips.twitch.tv/embed?clip=${e.id}&parent=${window.location.hostname}&autoplay=true&muted=false" preload="auto" height="100%" width="100%" allowfullscreen></iframe>`),"spotify"==e.type&&(elements.spotifyEmbedContainer_tierlist.style.display="",spotifyPlayer_tierlist.loadUri(`spotify:track:${e.id}`),spotifyPlayer_tierlist.play()),"streamable"==e.type){let t=e?.video;if(t){const e=new URL(t).searchParams;1e3*parseInt(e.get("Expires"),10)<Date.now()&&(t=null)}if(!t){t=(await getRequestInfo(e)).video}elements.videoEmbed_tierlist.style.display="",elements.videoEmbed_tierlist.src=t}resetScores(),elements.keepVotingEnabled.checked||disableVoteButton()}else endTierlist()}function endTierlist(){elements.tierlistItem.style.display="none",elements.upcoming.style.display="none"}function streamerVote(e){vote_results[e]++,voters.push(USER.userID),updateScores();for(let e of document.getElementsByClassName("streamer-vote"))e.style.visibility="hidden"}function pickWinner(e=null){let t=currentBracket[`round${currentRound}`][currentOption-2],n=currentBracket[`round${currentRound}`][currentOption-1],i=e;if(null==i&&(i=vote_results.left>vote_results.right?"left":"right"),vote_results.left!=vote_results.right||e){if(e=e?"left"==e?t:n:vote_results.left>vote_results.right?t:n,Object.keys(currentBracket).length==currentRound+1){let t=currentBracket[`round${currentRound+1}`].findIndex((e=>void 0===e));return currentBracket[`round${currentRound+1}`][t]=e,void nextMatch()}promoteOption(e,i)}else showToast("Options are tied, can't pick a winner","warning",3e3)}function pickWinnerTierlist(){if(elements.averageTier.checked){for(let e=0;e<6;e++)if(elements[`tierlistScore${e}`].innerHTML.includes("⭐"))return void placeTierlistItem(currentTierlistData[e]);showToast("Could not pick winner","warning",4e3)}else{let e=[...currentTierlistData].sort(((e,t)=>t.score-e.score));if(e[0].score==e[1].score)return void showToast("Top 2 tiers are tied, unable to place item","warning",4e3);placeTierlistItem(e[0])}}function restartMatch(){resetScores();for(let e of document.getElementsByClassName("streamer-vote"))e.style.visibility="visible"}function resetScores(){voters=[],vote_results={left:0,right:0};for(let e=0;e<currentTierlistData.length;e++)currentTierlistData[e].score=0;updateScores()}function promoteOption(e,t=null){let n=currentBracket[`round${currentRound+1}`].findIndex((e=>void 0===e));currentBracket[`round${currentRound+1}`][n]=e,t&&!elements.disableAnimations.checked?(nextMatchAnimation?.revert(),promoteOptionAnimation=createTimeline({defaults:{ease:"outElastic(1, .5)",duration:1e3},onComplete:()=>{nextMatch()}}).add("#centerTitle",{translateY:[0,"-200%"]},0).add(`#${"right"==t?"left":"right"}_title`,{translateX:("right"==t?"-":"+")+"200%",scale:"0.8"},0).add(`#${"right"==t?"left":"right"}_card`,{translateX:("right"==t?"-":"+")+"200%",scale:"0.8"},0).add(`#${t}_title`,{translateX:("right"==t?"-":"+")+"110%",translateY:[{to:"-20%",duration:500},{to:"-200%",duration:500}],scale:"1.2"},0).add(`#${t}_card`,{translateX:("right"==t?"-":"+")+"50%",translateY:[{to:"-5%",duration:500},{to:"-200%",duration:500}],scale:"1.2"},0)):nextMatch()}function placeTierlistItem(e){let t=`item${Date.now()}`,n=currentTierlistItem.thumbnail?`https://proxy.donk.workers.dev/?url=${encodeURI(currentTierlistItem.thumbnail)}`:"/pics/nothumbnail.png";document.querySelector(`[data-tier="${e.command}"]`).insertAdjacentHTML("beforeend",`<a\n      id="${t}"\n      draggable="false"\n      href="${getItemLink(currentTierlistItem.type,currentTierlistItem.id)}"\n      target="_blank"\n      rel="noopener noreferrer"><img draggable="false" class="border rounded tierlist-item me-1" alt="${elements.currentTierlistItemName.innerHTML}" title="${elements.currentTierlistItemName.innerHTML}" src="${n}" /></a>`);let i=elements.currentTierlistItem.getBoundingClientRect(),a=document.getElementById(t).getBoundingClientRect();elements.disableAnimations.checked||animate(`#${t} > img`,{ease:"outElastic(1, .5)",translateY:{from:i.top-a.top},translateX:{from:i.left-a.left},height:["30vh","10vh"],duration:1e3}),nextTierlistItem()}async function showOption(e,t){if(!t?.id&&("youtube"==t.type||"twitch"==t.type||"spotify"==t.type)){let e=parseLink(t.value?.replace(/\s+/g,""));e?t.id=e.id:showToast("Could not load video","warning",3e3)}if(elements[`${e}_name`].innerHTML=escapeString(t.name)||'<span class="text-body-secondary">Untitled option</span>',"text"==t.type&&(elements[`text_image_${e}`].style.display="",elements[`text_image_${e}`].innerHTML=escapeString(t.value)||'<span class="text-body-secondary">Empty option</span>'),"image"==t.type){if(elements[`text_image_${e}`].style.display="",!(t?.value.match(/(http(s)?:\/\/.)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)/g)||null))return void(elements[`text_image_${e}`].innerHTML="Invalid image URL");elements[`text_image_${e}`].innerHTML=`<img src="https://proxy.donk.workers.dev/?url=${encodeURI(t.value)}" alt="${t.name}" title="${t.name}" class="option-image">`}if("youtube"==t.type&&(elements[`youtubeEmbedContainer_${e}`].style.display="","left"==e?youtubePlayer_left.loadVideoById(t.id):youtubePlayer_right.cueVideoById(t.id)),"twitch"==t.type&&(elements[`twitchClipsEmbed_${e}`].style.display="",elements[`twitchClipsEmbed_${e}`].innerHTML=`<iframe src="https://clips.twitch.tv/embed?clip=${t.id}&parent=${window.location.hostname}&autoplay=${"left"==e?"true":"false"}&muted=false" preload="auto" height="100%" width="100%" allowfullscreen></iframe>`),"spotify"==t.type&&(elements[`spotifyEmbedContainer_${e}`].style.display="","left"==e?(spotifyPlayer_left.loadUri(`spotify:track:${t.id}`),spotifyPlayer_left.play()):spotifyPlayer_right.loadUri(`spotify:track:${t.id}`)),"streamable"==t.type){let n=t?.video;if(n){const e=new URL(n).searchParams;1e3*parseInt(e.get("Expires"),10)<Date.now()&&(n=null)}if(!n){n=(await getRequestInfo(t)).video}elements[`videoEmbed_${e}`].style.display="",elements[`videoEmbed_${e}`].src=n}}async function showTriviaMedia(e){if(!e)return void(elements.triviaMedia.style.display="none");elements.triviaMedia.style.display="";let t=parseLink(e.replace(/\s+/g,""));if(!t){if(e.match(/(http(s)?:\/\/.)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)/g)||null)return elements.image_trivia.style.display="",void(elements.image_trivia.innerHTML=`<img src="https://proxy.donk.workers.dev/?url=${encodeURI(e)}" class="option-image">`);showToast("Could not load media","warning",3e3)}if("youtube"==t.type&&(elements.youtubeEmbedContainer_trivia.style.display="",youtubePlayer_trivia.loadVideoById(t.id)),"twitch"==t.type&&(elements.twitchClipsEmbed_trivia.style.display="",elements.twitchClipsEmbed_trivia.innerHTML=`<iframe \n    src="https://clips.twitch.tv/embed?clip=${t.id}&parent=${window.location.hostname}&autoplay=true&muted=false" preload="auto" height="100%" width="100%" allowfullscreen>\n    </iframe>`),"spotify"==t.type&&(elements.spotifyEmbedContainer_trivia.style.display="",spotifyPlayer_trivia.loadUri(`spotify:track:${t.id}`),spotifyPlayer_trivia.play()),"streamable"==t.type){let e=t?.video;if(e){const t=new URL(e).searchParams;1e3*parseInt(t.get("Expires"),10)<Date.now()&&(e=null)}if(!e){e=(await getRequestInfo(t)).video}elements.videoEmbed_trivia.style.display="",elements.videoEmbed_trivia.src=e}}function updateScores(){if("single"==currentFormat&&(scoreHidden?(elements.left_score.innerHTML='<span class="text-body-secondary">Score hidden</span>',elements.right_score.innerHTML='<span class="text-body-secondary">Score hidden</span>'):(elements.left_score.innerHTML=`${vote_results.left.toLocaleString()} ${1==vote_results.left?"vote":"votes"} \n      (${Math.round(vote_results.left/(vote_results.left+vote_results.right)*100)||0}%)`,elements.right_score.innerHTML=`${vote_results.right.toLocaleString()} ${1==vote_results.right?"vote":"votes"} \n      (${Math.round(vote_results.right/(vote_results.left+vote_results.right)*100)||0}%)`)),"tierlist"==currentFormat)if(scoreHidden)for(let e=0;e<6;e++)elements[`tierlistScore${e}`].innerHTML="🙈<br />";else{let e=0,t=0;for(let n=0;n<6;n++)e+=currentTierlistData[n].score,currentTierlistData[n].score>currentTierlistData[t].score&&(t=n);if(elements.averageTier.checked){let t=0;for(let e=0;e<5;e++)t+=currentTierlistData[e].score*currentTierlistData[e].weight;let n=Math.round(t/(e-currentTierlistData[6].score));for(let t=0;t<6;t++)elements[`tierlistScore${t}`].innerHTML=`${currentTierlistData[t].score} (${Math.round(currentTierlistData[t].score/e*100)||0}%) ${currentTierlistData[t].weight==n?"⭐":""}<br />`;isNaN(n)&&e&&(elements.tierlistScore6.innerHTML=`${currentTierlistData[6].score} (${Math.round(currentTierlistData[6].score/e*100)||0}%) ⭐<br />`)}else for(let n=0;n<6;n++)elements[`tierlistScore${n}`].innerHTML=`${currentTierlistData[n].score} (${Math.round(currentTierlistData[n].score/e*100)||0}%) ${n==t?"⭐":""}<br />`}}function showWinner(e,t){elements.winner.innerHTML+=`<strong>${escapeString(e[0].name)}</strong>`,elements.restart.disabled=!0,elements.hideScore.disabled=!0,elements.enableVoting.disabled=!0,elements.pickWinner.disabled=!0,elements.disableAnimations.checked?(elements.left_card_header.style.display="none",elements.right_card_header.style.display="none",elements.left_title.style.display="none",elements.right_title.style.display="none",elements.centerTitle.style.display="none",elements.winnerTitle.style.display=""):(nextMatchAnimation?.revert(),promoteOptionAnimation?.revert(),elements.left_card_header.style.display="none",elements.right_card_header.style.display="none",elements.left_title.style.display="none",elements.right_title.style.display="none",elements.centerTitle.style.display="none",elements.winnerTitle.style.display="",showWinnerAnimation1=createTimeline({defaults:{ease:"outElastic(1, .5)"}}).add("#centerTitle",{translateY:"-200px",duration:500},0).add("#left_title",{translateX:"-200%",duration:1e3},0).add("#right_title",{translateX:"200%",duration:1e3},0).add("#winnerTitle",{translateY:["-200%",0],duration:1e3},0)),e[0].value==t[0].value?(resetPlayers(!1,!0),elements.disableAnimations.checked?(elements.right_card.style.display="none",elements.left_card.style="transform: translateX(50%) translateY(5%) scale(1.3);"):showWinnerAnimation2=createTimeline({defaults:{ease:"outElastic(1, .5)"}},0).add("#right_card",{translateX:"200%",scale:"0.8",duration:1e3},0).add("#left_card",{translateX:"50%",translateY:"5%",scale:"1.3",duration:2e3},0)):(resetPlayers(!0,!1),elements.disableAnimations.checked?(elements.left_card.style.display="none",elements.right_card.style="transform: translateX(-50%) translateY(5%) scale(1.3);"):showWinnerAnimation3=createTimeline({defaults:{ease:"outElastic(1, .5)"}}).add("#left_card",{translateX:"-200%",scale:"0.8",duration:1e3},0).add("#right_card",{translateX:"-50%",translateY:"5%",scale:"1.3",duration:2e3},0))}function toggleVoting(){voting_enabled?disableVoteButton():enableVoteButton()}function enableVoteButton(){elements.enableVoting.classList.remove("btn-success"),elements.enableVoting.classList.add("btn-danger"),elements.enableVoting.innerText="Stop Voting",elements.enableVotingTierlist.classList.remove("btn-success"),elements.enableVotingTierlist.classList.add("btn-danger"),elements.enableVotingTierlist.innerText="Stop Voting",voting_enabled=!0}function disableVoteButton(){elements.enableVoting.classList.remove("btn-danger"),elements.enableVoting.classList.add("btn-success"),elements.enableVoting.innerText="Start Voting",elements.enableVotingTierlist.classList.remove("btn-danger"),elements.enableVotingTierlist.classList.add("btn-success"),elements.enableVotingTierlist.innerText="Start Voting",voting_enabled=!1}function quit(){elements.bracket.style.display="none",elements.tierlist.style.display="none",elements.trivia.style.display="none",elements.editor.style.display="",resetPlayers(),disableVoteButton(),changeSiteLinkTarget("_self"),elements.triviaSettingsWarning.style.display="none",elements.startTriviaButton.style.display="",elements.dismissTriviaSettingsButton.style.display="none"}function editBracket(e){elements.triviaEditor.style.display="none",elements.bracketEditor.style.display="",elements.bracketOptionsContainer.innerHTML="",e=parseInt(e,10);let t=BRACKETS.brackets.find((t=>t.id===e));t&&(elements.bracketTitle.value=t.title,elements.bracketTitle.dataset.bracketId=e,elements.bracketDescription.value=t.description),elements.bracketEditorHeader.innerHTML=`ID${e}`;for(let e=0;e<t.options.length;e++)addBracketOption(t.options[e].name,t.options[e].type,t.options[e].value,t.options[e].thumbnail,t.options[e]?.video)}function editTrivia(e){elements.bracketEditor.style.display="none",elements.triviaEditor.style.display="",elements.triviaQuestionsContainer.innerHTML="",e=parseInt(e,10);let t=TRIVIA.trivia.find((t=>t.id===e));t&&(elements.triviaTitle.value=t.title,elements.triviaTitle.dataset.triviaId=e,elements.triviaDescription.value=t.description),elements.triviaEditorHeader.innerHTML=`ID${e}`;for(let e=0;e<t.questions?.length;e++)addTriviaQuestion(t.questions[e].multipleChoice,t.questions[e].type,t.questions[e].question,t.questions[e].answer,t.questions[e].media,t.questions[e]?.video)}function deleteBracket(e){e=parseInt(e,10),BRACKETS.brackets.splice(BRACKETS.brackets.findIndex((t=>t.id===e)),1),loadBrackets(),saveSettings(),elements.bracketEditor.style.display="none",enableTooltips()}function deleteTrivia(e){e=parseInt(e,10),TRIVIA.trivia.splice(TRIVIA.trivia.findIndex((t=>t.id===e)),1),loadTrivia(),saveSettings(),elements.triviaEditor.style.display="none",enableTooltips()}function loadBrackets(){if(!BRACKETS?.brackets?.length)return void(elements.myBrackets.innerHTML='<span class="text-body-secondary">Nothing here</span>');let e="";for(let t=BRACKETS.brackets.length-1;t>=0;t--){let n=BRACKETS.brackets[t].options.some((e=>!e.value))?'<i class="material-icons notranslate text-danger cursor-pointer" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Some of the options have no value">warning</i>':"";n+=BRACKETS.brackets[t].options.some((e=>!e.thumbnail))?'<i class="material-icons notranslate text-warning cursor-pointer" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Some of the options have no thumbnail">warning</i>':"",e+=`<div class="card mb-3">\n    <div class="card-header">\n      ${escapeString(BRACKETS.brackets[t].title)||"Untitled bracket"} ${n}\n      <div class="btn-group btn-group-sm float-end" role="group" aria-label="bracket controls">\n        <button type="button" class="btn btn-success" onclick="showStartModal(${BRACKETS.brackets[t].id})">\n          <i class="material-icons notranslate">play_arrow</i> Start bracket\n        </button>\n        <button type="button" class="btn btn-secondary" ${BRACKETS.brackets[t]?.generated||BRACKETS.brackets[t]?.published?'style="display: none"':""}\n        data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Publish bracket" onclick="publishBracket(${BRACKETS.brackets[t].id},this)">\n         <i class="material-icons notranslate">cloud_upload</i>\n       </button>\n        <button type="button" class="btn btn-primary"\n         data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Edit bracket" onclick="editBracket(${BRACKETS.brackets[t].id})">\n        <i class="material-icons notranslate">edit</i>\n        </button>\n        <a\n          tabindex="0"\n          class="btn btn btn-danger html-popover"\n          role="button"\n          data-bs-toggle="popover"\n          data-bs-trigger="focus"\n          data-bs-placement="top"\n          data-bs-title="Delete bracket?"\n          data-bs-content='<button type="button" class="btn btn-danger" onclick="deleteBracket(${BRACKETS.brackets[t].id})">\n                            <i class="material-icons notranslate">delete_forever</i>Delete "${escapeString(BRACKETS.brackets[t].title)}"</button>'\n        >\n          <i class="material-icons notranslate">delete_forever</i>\n        </a>\n      </div>\n    </div>\n    <div class="card-body my-bracket-body">\n      <h5 class="card-title">${BRACKETS.brackets[t].description||"No description"}</h5>\n      <p class="card-text">${BRACKETS.brackets[t].options.map((e=>`${icons[e.type]} ${escapeString(e.name)}`)).join(" • ")||"No options"}</p>\n    </div>\n  </div>`}elements.myBrackets.innerHTML=e,enableTooltips(),enablePopovers()}function loadTrivia(){if(!TRIVIA?.trivia?.length)return void(elements.myTrivia.innerHTML='<span class="text-body-secondary">Nothing here</span>');let e="";for(let t=TRIVIA.trivia.length-1;t>=0;t--){let n="";TRIVIA.trivia[t]?.questions&&!TRIVIA.trivia[t]?.questions.some((e=>!e.answer))||(n='<i class="material-icons notranslate text-danger cursor-pointer" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Some of the questions have no answer">warning</i>'),e+=`<div class="card mb-3">\n    <div class="card-header">\n      ${escapeString(TRIVIA.trivia[t].title)||"Untitled trivia"} ${n}\n      <div class="btn-group btn-group-sm float-end" role="group" aria-label="trivia controls">\n        <button type="button" class="btn btn-success" onclick="showStartTriviaModal(${TRIVIA.trivia[t].id})">\n          <i class="material-icons notranslate">play_arrow</i> Start trivia\n        </button>\n        <button type="button" class="btn btn-secondary" ${TRIVIA.trivia[t]?.generated||TRIVIA.trivia[t]?.published,'style="display: none"'}\n        data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Publish trivia" onclick="publishTrivia(${TRIVIA.trivia[t].id},this)">\n         <i class="material-icons notranslate">cloud_upload</i>\n       </button>\n        <button type="button" class="btn btn-primary"\n         data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Edit trivia" onclick="editTrivia(${TRIVIA.trivia[t].id})">\n        <i class="material-icons notranslate">edit</i>\n        </button>\n        <a\n          tabindex="0"\n          class="btn btn btn-danger html-popover"\n          role="button"\n          data-bs-toggle="popover"\n          data-bs-trigger="focus"\n          data-bs-placement="top"\n          data-bs-title="Delete trivia?"\n          data-bs-content='<button type="button" class="btn btn-danger" onclick="deleteTrivia(${TRIVIA.trivia[t].id})">\n                            <i class="material-icons notranslate">delete_forever</i>Delete "${escapeString(TRIVIA.trivia[t].title)}"</button>'\n        >\n          <i class="material-icons notranslate">delete_forever</i>\n        </a>\n      </div>\n    </div>\n    <div class="card-body my-trivia-body">\n      <h5 class="card-title">${TRIVIA.trivia[t].description||"No description"}</h5>\n      <p class="card-text">${TRIVIA.trivia[t]?.questions?.map((e=>`${icons[e.type]} ${escapeString(e.question)}`)).join(" • ")||"No questions"}</p>\n    </div>\n  </div>`}elements.myTrivia.innerHTML=e,enableTooltips(),enablePopovers()}function closeBracketEditor(){saveBracket(),elements.bracketEditor.style.display="none"}function closeTriviaEditor(){saveTrivia(),elements.triviaEditor.style.display="none"}function shuffleArray(e){for(let t=e.length-1;t>0;t--){const n=Math.floor(Math.random()*(t+1));[e[t],e[n]]=[e[n],e[t]]}}let importPreviewedBracket,previewedBracket=[],previewedBracketTitle="",previewedBracketDescription="";async function previewSpotifyPlaylist(){let e=elements.spotifyPlaylistLink.value?.replace(/\s+/g,"").match(spotifyURLRegex);if(e[2])try{elements.spotifyPlaylistPreview.innerHTML=spinner;let t={headers:{Accept:"application/json","Content-Type":"application/json"}},n=await fetch(`https://helper.donk.workers.dev/spotify/playlist?id=${e[2]}`,t),i=await n.json(),a=[...i[0].tracks.items];for(let e=1;e<i.length;e++)a.push(...i[e].items);previewedBracketTitle=i[0].name||"Untitled playlist",previewedBracketDescription=`${i[0].description||"No description"} - Generated from ${elements.spotifyPlaylistLink.value}`,previewedBracket=[];let r='<ul class="list-group">';console.log(a);for(let e=0;e<a.length;e++)a[e].track.is_playable&&(previewedBracket.push({name:`${a[e].track.name} - ${a[e].track.artists.map((e=>e.name)).join(", ")}`,type:"spotify",id:a[e].track.id,value:a[e].track.external_urls.spotify,thumbnail:a[e].track.album.images[0].url}),r+=`\n      <li class="list-group-item">\n      <a target="_blank" rel="noopener noreferrer" href="${a[e].track.preview_url}">${escapeString(a[e].track.name)} - ${a[e].track.artists.map((e=>e.name)).join(", ")}</a>\n      </li>`);r+="</ul>",elements.spotifyPlaylistPreview.innerHTML=`<p>${escapeString(i[0].name)||"Untitled playlist"} - ${escapeString(i[0].description)||"No description"} - ${0==previewedBracket.length?"Playlist has no tracks":`${previewedBracket.length} ${1==previewedBracket.length?"track":"tracks"}`} </p>${r}`}catch(e){return console.log(e),void showToast("Could not load playlist","warning",3e3)}else showToast("Invalid playlist URL provided","warning",3e3)}async function previewTiermaker(){let e=elements.tiermakerLink.value?.replace(/\s+/g,"")?.toLowerCase()||null,t=e.match(/\/([^\/?]+)(?:\?.*)?$/)[1],n=t.slice(t.lastIndexOf("-")+1);if(!t)return void showToast("Could not find the provided tier list","warning",3e3);try{elements.tiermakerPreview.innerHTML=spinner;let i={headers:{Accept:"application/json","Content-Type":"application/json"}},a=await fetch(`https://helper.donk.workers.dev/tiermaker?id=${t}`,i),r=await a.json();previewedBracketTitle="Generated TierMaker bracket",previewedBracketDescription=`Generated from ${e}`,previewedBracket=[];let o=JSON.parse(r),l=await testImage(`https://tiermaker.com/images/chart/chart/${t}/${o[1]}`,1);if(!l&&(l=await testImage(`https://tiermaker.com/images/template_images/2022/${n}/${t}/${o[1]}`,2),!l))return void showToast("Could not load tier list :(","warning",3e3);let s='<ul class="list-group">';for(let e=1;e<o.length;e++){let i=o[e].replace("png","").replace("jpg","").replace(".","").replaceAll("-"," "),a=1==l?`https://tiermaker.com/images/chart/chart/${t}/${o[e]}`:`https://tiermaker.com/images/template_images/2022/${n}/${t}/${o[e]}`;previewedBracket.push({name:i,type:"image",value:a,thumbnail:a}),s+=`\n        <li class="list-group-item">\n        <a target="_blank" rel="noopener noreferrer" href="https://proxy.donk.workers.dev/?url=${encodeURI(a)}">\n        ${escapeString(i)||"Untitled option"}\n        </a>\n        </li>`}s+="</ul>",elements.tiermakerPreview.innerHTML=`<p>${o.length-1} images</p> <p class="text-warning">Make sure the images load by testing one of the links below</p>${s}`}catch(e){return console.log(e),void showToast("Could not find the provided tier list","warning",3e3)}}async function previewClips(){let e=elements.clipsChannel.value?.replace(/\s+/g,"");if(!e)return void showToast("No channel provided","warning",3e3);let t=await getUserID(e);try{elements.clipsPreview.innerHTML=spinner;let n={headers:{Accept:"application/json","Content-Type":"application/json"}},i=await fetch(`https://helper.donk.workers.dev/twitch/clips?broadcaster_id=${t}`,n),a=(await i.json()).data;if(0==a)return void showToast("Could not load clips","warning",3e3);previewedBracketTitle=`Top ${e} clips`,previewedBracketDescription=`Bracket with ${a.length} ${e} clips`,previewedBracket=[];let r='<ul class="list-group">';for(let e=0;e<a.length;e++)previewedBracket.push({name:a[e].title,id:a[e].id,type:"twitch",value:a[e].url,thumbnail:a[e].thumbnail_url}),r+=`\n      <li class="list-group-item">\n      <a target="_blank" rel="noopener noreferrer" href="${a[e].url}">\n      ${escapeString(a[e].title)} - ${a[e].view_count.toLocaleString()} ${1==a[e].view_count?"view":"views"}\n      </a>\n      </li>`;r+="</ul>",elements.clipsPreview.innerHTML=`<p>${a.length} ${1==a.length?"clip":"clips"} </p>${r}`}catch(e){return console.log(e),void showToast("Could not load clips","warning",3e3)}}async function previewEmotes(){let e=elements.emotesChannel.value?.replace(/\s+/g,"")?.toLowerCase()||null;if(e)try{elements.emotesPreview.innerHTML=spinner;let t=await getChannelTwitchEmotes(e,!0);previewedBracketTitle=`Best ${e} emote`,previewedBracketDescription=`Bracket with ${t.length} ${e} emotes`,previewedBracket=[];let n='<ul class="list-group">';console.log(t);for(let e=0;e<t.length;e++)previewedBracket.push({name:t[e].name,type:"image",value:t[e].url,thumbnail:t[e].url}),n+=`\n      <li class="list-group-item">\n      <a target="_blank" rel="noopener noreferrer" href="${t[e].url}">${t[e].name}</a>\n      </li>`;n+="</ul>",elements.emotesPreview.innerHTML=`<p>${0==t.length?"Channel has no emotes":`${t.length} ${1==t.length?"emote":"emotes"}`} </p>${n}`}catch(e){return console.log(e),void showToast("Could not load emotes for the provided channel","warning",3e3)}else showToast("No channel provided","warning",3e3)}async function previewUwufufu(){let e=elements.uwufufuLink.value?.replace(/\s+/g,"")?.toLowerCase()||null;if(!e)return void showToast("No link provided","warning",3e3);let t=0,n=0;try{let i=e.match(/\/quiz\/worldcup\/(.+?)(\/rank)?(\?.*)?$/)[1];if(24!==i.length)return void showToast("Could not find the provided bracket","warning",3e3);elements.uwufufuPreview.innerHTML=spinner;let a={headers:{Accept:"application/json","Content-Type":"application/json"}},r=await fetch(`https://helper.donk.workers.dev/uwufufu?id=${i}`,a),o=await r.json();previewedBracketTitle=o.title||"Generated UwUFUFU bracket",previewedBracketDescription=`Generated from ${e}`,previewedBracket=[];for(let e=0;e<o.list.length;e++)o.list[e].isVideo&&!o.list[e].videoUrl||(o.list[e].isVideo||o.list[e].resourceUrl)&&previewedBracket.push({name:o.list[e].name,type:o.list[e].isVideo?"youtube":"image",value:o.list[e].isVideo?o.list[e].videoUrl:o.list[e].resourceUrl,thumbnail:o.list[e].thumbnailUrl});let l='<ul class="list-group">';for(let e=0;e<previewedBracket.length;e++)"youtube"==previewedBracket[e].type?(l+=`\n        <li class="list-group-item">\n        <a target="_blank" rel="noopener noreferrer" href="${previewedBracket[e].value}">${previewedBracket[e].name||"Untitled option"}</a>\n        </li>`,t++):(l+=`\n        <li class="list-group-item">\n        <a target="_blank" rel="noopener noreferrer" href="https://proxy.donk.workers.dev/?url=${encodeURI(previewedBracket[e].value)}">\n        ${escapeString(previewedBracket[e].name)||"Untitled option"}\n        </a>\n        </li>`,n++);l+="</ul>",elements.uwufufuPreview.innerHTML=`<p>${t>0?`${t} videos`:""} ${n>0?`${n} images`:""}</p>${l}`}catch(e){return console.log(e),void showToast("Could not find the provided bracket","warning",3e3)}}async function previewYTChannel(){let e=elements.ytchannelLink.value?.replace(/\s+/g,"");if(!e)return void showToast("No channel provided","warning",3e3);let t=await getYTChannelID(e);if(t?.items[0]?.id?.channelId){t=t.items[0].id.channelId;try{elements.ytchannelPreview.innerHTML=spinner;let n=await getYTChannelVideos(t);n=n.flatMap((e=>e.items)),previewedBracketTitle=`Top ${e} videos`;let i=0;previewedBracket=[];let a='<ul class="list-group">';console.log(n);for(let e=0;e<n.length;e++)"upcoming"!=n[e].snippet?.liveBroadcastContent&&"youtube#channel"!=n[e].snippet?.id?.kind&&(i++,previewedBracket.push({name:n[e].snippet.title,id:n[e].id.videoId,type:"youtube",value:`https://www.youtube.com/watch?v=${n[e].id.videoId}`,thumbnail:n[e].snippet.thumbnails.high.url}),a+=`\n      <li class="list-group-item">\n      <a target="_blank" rel="noopener noreferrer" href="https://www.youtube.com/watch?v=${n[e].id.videoId}">\n      ${escapeString(n[e].snippet.title)}\n      </a>\n      </li>`);previewedBracketDescription=`Bracket with the top ${i} ${e} videos`,a+="</ul>",elements.ytchannelPreview.innerHTML=`<p>${i} ${1==i?"video":"videos"} </p>${a}`}catch(e){return console.log(e),void showToast("Could not channel videos","warning",3e3)}}else showToast("Could not find channel","warning",3e3)}async function previewYTPlaylist(){let e=elements.ytplaylistLink.value?.replace(/\s+/g,"");if(!e)return void showToast("No playlist link provided","warning",3e3);let t=e.match(/^.*(youtu.be\/|list=)([^#\&\?]*).*/);if(t[2]&&34===t[2].length)try{elements.ytplaylistPreview.innerHTML=spinner;let n=await getYTPlaylist(t[2]),i=await getYTPlaylistInfo(t[2]);n=n.flatMap((e=>e.items)),previewedBracketTitle=i?.items[0]?.snippet?.title||"YouTube playlist generated bracket",previewedBracketDescription=`Generated from YouTube playlist ${e}`,previewedBracket=[];let a='<ul class="list-group">';console.log(n);for(let e=0;e<n.length;e++)previewedBracket.push({name:n[e].snippet.title,id:n[e].snippet.resourceId.videoId,type:"youtube",value:`https://www.youtube.com/watch?v=${n[e].snippet.resourceId.videoId}`,thumbnail:n[e].snippet.thumbnails.high.url}),a+=`\n      <li class="list-group-item">\n      <a target="_blank" rel="noopener noreferrer" href="https://www.youtube.com/watch?v=${n[e].snippet.resourceId.videoId}">\n      ${escapeString(n[e].snippet.title)}\n      </a>\n      </li>`;a+="</ul>",elements.ytplaylistPreview.innerHTML=`<p>${n.length} ${1==n.length?"video":"videos"} </p>${a}`}catch(e){return console.log(e),void showToast("Could not load playlist","warning",3e3)}else showToast("Invalid playlist link provided","warning",3e3)}async function generateBracket(){let e=elements.generateBracketType.value?.replace(/\s+/g,"")?.toLowerCase()||null;if(e)if(0!=previewedBracket.length){createBracket(!0,e),elements.bracketTitle.value=previewedBracketTitle,elements.bracketDescription.value=previewedBracketDescription;for(let e=0;e<previewedBracket.length;e++)addBracketOption(previewedBracket[e].name,previewedBracket[e].type,previewedBracket[e].value,previewedBracket[e].thumbnail,previewedBracket[e]?.video);saveBracket(),generateModal.hide()}else showToast('You must <button type="button" class="btn btn-info" ><i class="material-icons notranslate">file_download</i> Load</button> the bracket first',"warning",3e3);else showToast("No bracket type selected","warning",3e3)}async function publishBracket(e,t){t.innerHTML='<div class="spinner-border spinner-border-sm" role="status"><span class="visually-hidden">Loading...</span></div>';bootstrap.Tooltip.getInstance(t).dispose(),e=parseInt(e,10);const n=BRACKETS.brackets.findIndex((t=>t.id===e));if(BRACKETS.brackets[n].options.length<2)return showToast("Bracket must have 2 options at least","warning",3e3),void(t.innerHTML='<i class="material-icons notranslate">cloud_upload</i>');let i={method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({userid:USER.userID,username:USER.channel,access_token:USER.access_token,bracket:BRACKETS.brackets[n]})};try{let e=await fetch("https://blt.donk.workers.dev/publish",i),a=await e.json();console.log(a),showToast(a.message,"info",3e3),200==e.status&&(BRACKETS.brackets[n].published=!0,elements.bracketCode.innerHTML=a.id,elements.bracketLink.innerHTML=`https://chat.vote/blt#${a.id}`,publishedModal.show(),saveSettings(),loadBrackets()),t.innerHTML='<i class="material-icons notranslate">cloud_upload</i>'}catch(e){showToast("Could not publish bracket","danger",3e3),t.innerHTML='<i class="material-icons notranslate">cloud_upload</i>',console.log("publishBracket error",e)}}async function importCode(e=""){elements.importModalBody.innerHTML=spinner;let t=elements.shareCode.value?.trim();if(e&&(t=e),t&&4==t.length){elements.shareCode.value="",communityModal.hide(),importModal.show();try{let e=await fetch(`https://blt.donk.workers.dev/id/${t}`);if(200!==e.status)return void(elements.importModalBody.innerHTML="Bracket not found :(");let n=await e.json();if(console.log(n),importPreviewedBracket=n,n.blacklisted)return void(elements.importModalBody.innerHTML=`<span class="text-danger">This bracket is blacklisted (${n.reason})</span>`);let i=`\n    <div class="card">\n    <div class="card-header">${escapeString(n.bracket.title)} <span class="text-body-secondary">by @${n.username}</span></div>\n    <div class="card-body">\n    <p class="card-text">${escapeString(n.bracket.description)}</p>\n    Options (${n.bracket.options.length}):\n    <ul class="list-group" style="max-height: 400px; overflow: auto">`;for(let e=0;e<n.bracket.options.length;e++)i+=`<li class="list-group-item">${escapeString(n.bracket.options[e].name)} - ${escapeString(n.bracket.options[e].value)}</li>`;i+='\n    </ul>\n    </div>\n    </div>\n    <span class="text-warning">Import brackets from users you trust only</span><br>\n    <button type="button" class="btn btn-danger mt-3" data-bs-dismiss="modal" onclick="importPreviewed()">\n    <i class="material-icons notranslate">cloud_download</i> Import\n    </button>',elements.importModalBody.innerHTML=i}catch(e){elements.importModalBody.innerHTML="Could not import bracket :(",console.log("importCode error",e)}}else showToast("Invalid bracket code","warning",3e3)}function importPreviewed(){createBracket(!0),elements.bracketTitle.value=importPreviewedBracket.bracket.title,elements.bracketDescription.value=`${importPreviewedBracket.bracket.description} - Bracket by @${importPreviewedBracket.username} - bracket ID: ${importPreviewedBracket.id}`;for(let e=0;e<importPreviewedBracket.bracket.options.length;e++)addBracketOption(importPreviewedBracket.bracket.options[e].name,importPreviewedBracket.bracket.options[e].type,importPreviewedBracket.bracket.options[e].value,importPreviewedBracket.bracket.options[e].thumbnail,importPreviewedBracket.bracket.options[e]?.video);saveBracket(),importModal.hide()}async function importApproved(e){let t=approvedBrackets.find((t=>t.id===e));createBracket(!0),elements.bracketTitle.value=t.bracket.title,elements.bracketDescription.value=`${t.bracket.description} - Bracket by @${t.username} - bracket ID: ${t.id}`;for(let e=0;e<t.bracket.options.length;e++)addBracketOption(t.bracket.options[e].name,t.bracket.options[e].type,t.bracket.options[e].value,t.bracket.options[e].thumbnail,t.bracket.options[e]?.video);saveBracket(),communityModal.hide()}let chatBracket=[];async function loadPlaylist(){let e=localforage.createInstance({driver:localforage.INDEXEDDB,name:"chat.vote/playlist",version:1,storeName:"playlist",description:"playlist requests and history"});try{const t=await e.getItem("PLAYLIST_REQUESTS");if(t){if(requests=JSON.parse(t,reviver),console.log(requests),!requests||requests.size<2)return void(elements.playlist.innerHTML='<span class="text-warning">Playlist needs to have at least 2 videos</span>');let e=0;chatBracket=[];let n='<ul class="list-group">';for(let[t,i]of requests){let t=i.type;if("twitch stream"==t||"twitch vod"==t||"tiktok video"==t)continue;if(!i.title||!i.id||!i.type||!i.thumbnail||"streamable"==i.type&&!i.video)continue;"youtube short"==t&&(t="youtube"),"twitch clip"==t&&(t="twitch"),e++;let a=getItemLink(t,i.id);chatBracket.push({name:i.title,id:i.id,type:t,value:a,thumbnail:i.thumbnail,video:i?.video}),n+=`\n        <li class="list-group-item">\n        <a target="_blank" rel="noopener noreferrer" href="${a}">\n        ${escapeString(i.title)}\n        </a>\n        </li>`}n+="</ul>";let i=requests.size-e;elements.playlist.innerHTML=`\n        Playlist has ${e} videos ${i?` (${i} unsupported/broken ${1==i?"video":"videos"} skipped)`:""}\n        ${n}`,communityModal.hide(),console.log(t)}else console.log("localStorage playlist requests not found")}catch(e){console.log(e)}}function generateChatBracket(){if(0!=chatBracket.length){createBracket(!0),elements.bracketTitle.value="Chat bracket",elements.bracketDescription.value="Bracket with chat's requests";for(let e=0;e<chatBracket.length;e++)addBracketOption(chatBracket[e].name,chatBracket[e].type,chatBracket[e].value,chatBracket[e].thumbnail,chatBracket[e]?.video);saveBracket(),generateChatModal.hide()}else showToast('You must <button type="button" class="btn btn-success" ><i class="material-icons notranslate">file_download</i> Load</button> the playlist first',"warning",3e3)}function zoomCard(e){elements[e].classList.toggle("zoomed"),elements[`${e}_zoom_icon`].innerHTML=elements[e].classList.contains("zoomed")?"zoom_out":"zoom_in",elements[e].classList.contains("zoomed")?animate(`#${e}`,{ease:"outElastic(1, .5)",translateX:""+("left_card"==e?"+=50%":"-=50%"),scale:1.4}):animate(`#${e}`,{ease:"outElastic(1, .5)",translateX:0,scale:1})}function zoomOut(e){!elements.left_card.contains(e.target)&&elements.left_card.classList.contains("zoomed")&&(elements.left_card.classList.remove("zoomed"),elements.left_card_zoom_icon.innerHTML="zoom_in",animate("#left_card",{ease:"outElastic(1, .5)",translateX:0,scale:1})),!elements.right_card.contains(e.target)&&elements.right_card.classList.contains("zoomed")&&(elements.right_card.classList.remove("zoomed"),elements.right_card_zoom_icon.innerHTML="zoom_in",animate("#right_card",{ease:"outElastic(1, .5)",translateX:0,scale:1}))}let scoreHidden=!1;function hideScore(){if(scoreHidden=!scoreHidden,elements.hideScoreIcon.innerHTML=scoreHidden?"visibility_off":"visibility",elements.hideScoreTierlistIcon.innerHTML=scoreHidden?"visibility_off":"visibility",scoreHidden)updateScores();else{if("single"==currentFormat){let e={left:0,right:0};animate(e,{ease:"outElastic(1, .5)",left:vote_results.left,right:vote_results.right,modifier:utils.round(0),ease:"inOutExpo",onUpdate:function(){elements.left_score.innerHTML=`${e.left.toLocaleString()} ${1==e.left?"vote":"votes"}`,elements.right_score.innerHTML=`${e.right.toLocaleString()} ${1==e.right?"vote":"votes"}`}})}"tierlist"==currentFormat&&updateScores()}}function loadTierlistEditor(){let e=document.querySelectorAll(".tierlist-label"),t="";for(let n=0;n<e.length;n++)t+=`<div class="input-group mb-3">\n    <span class="input-group-text">Tier name:</span>\n    <input type="text" class="form-control tier-name" placeholder="name" aria-label="Tier name" value="${e[n].textContent}" onchange="updateTierlist()" />\n    <span class="input-group-text">Voting command:</span>\n    <input type="text" class="form-control tier-command" placeholder="command" aria-label="Voting command" value="${e[n].textContent}" onchange="updateTierlist()" />\n    <span class="input-group-text">Color:</span>\n    <input type="color" class="form-control tier-color" value="${rgba2hex(e[n].style.backgroundColor)}" aria-label="Tier color" onchange="updateTierlist()" />\n    <button class="btn btn-outline-secondary" type="button" id="button-addon2"><i class="material-icons notranslate" style="cursor: pointer">delete_forever</i></button>\n    </div>`;elements.tierlistEditor.innerHTML=t}function addTier(e,t,n){let i=document.querySelectorAll(".tierlist-label");"name"==e&&(e=`Tier#${i.length+1}`,t=`Tier#${i.length+1}`),elements.tierlistContainer.insertAdjacentHTML("beforeend",`<div class="card mb-1 tierlist-tier">\n    <div class="row g-0">\n    <div class="col-auto rounded-start tierlist-label" contenteditable="true" spellcheck="false" style="background-color: ${n}">${e}</div>\n    <div class="col">\n    <div class="card-body p-1" data-tier="${t}"></div>\n    </div>\n    </div>\n    </div>`),loadTierlistEditor()}function updateTierlist(){}const rgba2hex=e=>`#${e.match(/^rgba?\((\d+),\s*(\d+),\s*(\d+)(?:,\s*(\d+\.{0,1}\d*))?\)$/).slice(1).map(((e,t)=>(3===t?Math.round(255*parseFloat(e)):parseFloat(e)).toString(16).padStart(2,"0").replace("NaN",""))).join("")}`;async function getYTPlaylist(e){try{let t=await fetch(`https://helper.donk.workers.dev/youtube/playlist?id=${encodeURIComponent(e)}`);return await t.json()}catch(e){return console.log("getYTPlaylist error",e),!1}}async function getYTChannelVideos(e,t=1){try{let n=await fetch(`https://helper.donk.workers.dev/youtube/channelvideos?id=${encodeURIComponent(e)}&length=${t}`);return await n.json()}catch(e){return console.log("getYTChannelVideos error",e),!1}}async function getYTPlaylistInfo(e){try{let t=await fetch(`https://helper.donk.workers.dev/youtube/playlistinfo?id=${encodeURIComponent(e)}`);return await t.json()}catch(e){return console.log("getYTPlaylistInfo error",e),!1}}async function getYTChannelID(e){try{let t=await fetch(`https://helper.donk.workers.dev/youtube/id?handle=${encodeURIComponent(e)}`);return await t.json()}catch(e){return console.log("getYTChannelID error",e),!1}}async function testImage(e,t){try{const n=await fetch(`https://helper.donk.workers.dev/cors/?${e}`);if((await n.blob()).type.startsWith("image/"))return t}catch(e){return 0}}function resetPlayers(e=!0,t=!0){e&&(elements.text_image_left.style.display="none",elements.youtubeEmbedContainer_left.style.display="none",elements.spotifyEmbedContainer_left.style.display="none",elements.twitchClipsEmbed_left.style.display="none",elements.videoEmbed_left.style.display="none",youtubePlayer_left.loadVideoById(""),spotifyPlayer_left.pause(),elements.twitchClipsEmbed_left.innerHTML="",elements.videoEmbed_left.src=""),t&&(elements.text_image_right.style.display="none",elements.youtubeEmbedContainer_right.style.display="none",elements.spotifyEmbedContainer_right.style.display="none",elements.twitchClipsEmbed_right.style.display="none",elements.videoEmbed_right.style.display="none",youtubePlayer_right.loadVideoById(""),spotifyPlayer_right.pause(),elements.twitchClipsEmbed_right.innerHTML="",elements.videoEmbed_right.src=""),elements.text_image_tierlist.style.display="none",elements.youtubeEmbedContainer_tierlist.style.display="none",elements.spotifyEmbedContainer_tierlist.style.display="none",elements.twitchClipsEmbed_tierlist.style.display="none",elements.videoEmbed_tierlist.style.display="none",youtubePlayer_tierlist.loadVideoById(""),spotifyPlayer_tierlist.pause(),elements.twitchClipsEmbed_tierlist.innerHTML="",elements.videoEmbed_tierlist.src="",elements.image_trivia.style.display="none",elements.youtubeEmbedContainer_trivia.style.display="none",elements.spotifyEmbedContainer_trivia.style.display="none",elements.twitchClipsEmbed_trivia.style.display="none",elements.videoEmbed_trivia.style.display="none",youtubePlayer_trivia.loadVideoById(""),spotifyPlayer_trivia.pause(),elements.twitchClipsEmbed_trivia.innerHTML="",elements.videoEmbed_trivia.src=""}function getItemLink(e,t){switch(e){case"youtube":return`https://youtu.be/${t}`;case"spotify":return`https://open.spotify.com/track/${t}`;case"twitch":return`https://clips.twitch.tv/${t}`;case"streamable":return`https://streamable.com/${t}`;default:return""}}let youtubePlayer_left,youtubePlayer_right,youtubePlayer_tierlist,youtubePlayer_trivia,spotifyPlayer_left,spotifyPlayer_right,spotifyPlayer_tierlist,spotifyPlayer_trivia;function onYouTubeIframeAPIReady(){elements.left_value.addEventListener("mouseover",(e=>{try{youtubePlayer_left.getPlayerState()>=1&&youtubePlayer_right.getPlayerState()>=1&&(youtubePlayer_right.mute(),youtubePlayer_left.unMute())}catch(e){}})),elements.right_value.addEventListener("mouseover",(e=>{try{youtubePlayer_left.getPlayerState()>=1&&youtubePlayer_right.getPlayerState()>=1&&(youtubePlayer_left.mute(),youtubePlayer_right.unMute())}catch(e){}})),console.log("onYouTubeIframeAPIReady"),youtubePlayer_left=new YT.Player("youtubeEmbed_left",{height:"100%",width:"100%",playerVars:{autoplay:1,enablejsapi:1,playsinline:1,rel:0,origin:"chat.vote"},events:{onError:youtubePlayerOnError,onAutoplayBlocked:youtubePlayerOnAutoplayBlocked}}),youtubePlayer_right=new YT.Player("youtubeEmbed_right",{height:"100%",width:"100%",playerVars:{autoplay:0,enablejsapi:1,playsinline:1,rel:0,origin:"chat.vote"},events:{onError:youtubePlayerOnError,onAutoplayBlocked:youtubePlayerOnAutoplayBlocked}}),youtubePlayer_tierlist=new YT.Player("youtubeEmbed_tierlist",{height:"100%",width:"100%",playerVars:{autoplay:1,enablejsapi:1,playsinline:1,rel:0,origin:"chat.vote"},events:{onError:youtubePlayerOnError,onAutoplayBlocked:youtubePlayerOnAutoplayBlocked}}),youtubePlayer_trivia=new YT.Player("youtubeEmbed_trivia",{height:"100%",width:"100%",playerVars:{autoplay:1,enablejsapi:1,playsinline:1,rel:0,origin:"chat.vote"},events:{onError:youtubePlayerOnError,onAutoplayBlocked:youtubePlayerOnAutoplayBlocked}})}function youtubePlayerOnError(e){console.log(e)}function youtubePlayerOnAutoplayBlocked(e){console.log(e)}window.onload=async function(){let e;darkTheme="true"===(localStorage.getItem("darkTheme")||"true"),elements.darkTheme.checked=darkTheme??!0,switchTheme(elements.darkTheme.checked),loadAndConnect(),USER.channel||(loginButton=new bootstrap.Popover(elements.loginButton)),enableTooltips(),enablePopovers(),document.addEventListener("click",(e=>{zoomOut(e)})),votePopover=new bootstrap.Popover(elements.enableVoting),votePopoverTierlist=new bootstrap.Popover(elements.enableVotingTierlist),loginExpiredModal=new bootstrap.Modal(elements.loginExpiredModal),tierlistEditorModal=new bootstrap.Modal(elements.tierlistEditorModal),previewModal=new bootstrap.Modal(elements.previewModal),generateChatModal=new bootstrap.Modal(elements.generateChatModal),generateModal=new bootstrap.Modal(elements.generateModal),communityModal=new bootstrap.Modal(elements.communityModal),startModal=new bootstrap.Modal(elements.startModal),startTriviaModal=new bootstrap.Modal(elements.startTriviaModal),publishedModal=new bootstrap.Modal(elements.publishedModal),importModal=new bootstrap.Modal(elements.importModal),elements.tierlistEditorModal.addEventListener("show.bs.modal",(e=>{loadTierlistEditor()})),elements.previewModal.addEventListener("hidden.bs.modal",(e=>{elements.previewModalBody.innerHTML=""})),elements.generateModal.addEventListener("hidden.bs.modal",(e=>{previewedBracket=[],previewedBracketDescription="",previewedBracketTitle="";for(let e of document.getElementsByClassName("generate-type"))e.style.display="none";for(let e of document.getElementsByClassName("generate-value"))e.value="";for(let e of document.getElementsByClassName("generate-preview"))e.innerHTML=""})),elements.channelName.addEventListener("keydown",(e=>{"Enter"===e.key&&connect()})),elements.darkTheme.onchange=function(){switchTheme(this.checked),saveSettings()},elements.generateBracketType.onchange=function(){for(let e of document.getElementsByClassName("generate-type"))e.style.display="none";elements[`${this.value}Settings`].style.display=""},elements.formatSelect.onchange=function(){"tierlist"==this.value?(elements.bracketSettings.style.display="none",elements.tierlistSettings.style.display=""):(elements.bracketSettings.style.display="",elements.tierlistSettings.style.display="none")},elements.changeCommand.onchange=function(){elements.changeCommandCopy.checked=this.checked},elements.changeCommandCopy.onchange=function(){elements.changeCommand.checked=this.checked},elements.keepVotingEnabled.onchange=function(){elements.keepVotingEnabledCopy.checked=this.checked},elements.keepVotingEnabledCopy.onchange=function(){elements.keepVotingEnabled.checked=this.checked},elements.disableAnimations.onchange=function(){elements.disableAnimationsCopy.checked=this.checked},elements.disableAnimationsCopy.onchange=function(){elements.disableAnimations.checked=this.checked},elements.triviaPoints.onchange=function(){triviaPoints=parseInt(this.value,10)},elements.questionTimer.oninput=function(){triviaQuestionTimer=parseInt(this.value,10),elements.questionTimerValue.innerText=`${triviaQuestionTimer}s`},elements.triviaScoring.onchange=function(){triviaScoring=this.value,"timer"==triviaScoring?(elements.questionTimerDiv.style.display="",e=elements.oneChance.checked,elements.oneChance.checked=!0,elements.oneChance.disabled=!0):(elements.questionTimerDiv.style.display="none",elements.oneChance.checked=e,elements.oneChance.disabled=!1)},elements.hideScore.addEventListener("click",(function(){bootstrap.Tooltip.getInstance("#hideScore").setContent({".tooltip-inner":scoreHidden?"Hide score":"Show score"}),hideScore()})),elements.hideScoreTierlist.addEventListener("click",(function(){bootstrap.Tooltip.getInstance("#hideScoreTierlist").setContent({".tooltip-inner":scoreHidden?"Hide score":"Show score"}),hideScore()})),elements.importBracket.addEventListener("click",(function(){previewedBracket=[],previewedBracketDescription="",previewedBracketTitle="";for(let e of document.getElementsByClassName("generate-type"))e.style.display="none";for(let e of document.getElementsByClassName("generate-value"))e.value="";for(let e of document.getElementsByClassName("generate-preview"))e.innerHTML="";generateModal.show()})),elements.addBracketOption.addEventListener("click",(function(){addBracketOption(),saveBracket(!0)})),elements.addTriviaQuestion.addEventListener("click",(function(){addTriviaQuestion(),saveTrivia(!0)}));const t=createDraggable(elements.tierlistItem);elements.tierlistItem.addEventListener("mousewheel",(e=>{if(e.preventDefault(),e.stopPropagation(),e.altKey){let t=parseFloat(getComputedStyle(elements.tierlistItem).getPropertyValue("opacity"));elements.tierlistItem.style.opacity=e.wheelDelta>0?Math.min(t+.07,1):Math.max(t-.07,.2)}else{let t=parseFloat(getComputedStyle(elements.tierlistItem).getPropertyValue("scale"));elements.tierlistItem.style.scale=e.wheelDelta>0?Math.min(t+.07,2):Math.max(t-.07,.1)}})),window.addEventListener("keydown",(e=>{"KeyR"===e.code&&"INPUT"!==document.activeElement.tagName&&(elements.tierlistItem.style="transform: translateX(0px) translateY(0px)",t.reset())}));let n=location.hash?.replace("#","")?.trim();4==n.length&&(importCode(n),history.replaceState(void 0,void 0,"#"))},window.onSpotifyIframeApiReady=e=>{console.log("onSpotifyIframeApiReady");e.createController(elements.spotifyEmbed_left,{},(e=>{spotifyPlayer_left=e})),e.createController(elements.spotifyEmbed_right,{},(e=>{spotifyPlayer_right=e})),e.createController(elements.spotifyEmbed_tierlist,{},(e=>{spotifyPlayer_tierlist=e})),e.createController(elements.spotifyEmbed_trivia,{},(e=>{spotifyPlayer_trivia=e}))};